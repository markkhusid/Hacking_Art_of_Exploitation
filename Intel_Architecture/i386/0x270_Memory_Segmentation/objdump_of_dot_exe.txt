
stack_example_C_AMD64:     file format elf64-x86-64
stack_example_C_AMD64
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000000560

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x00000000000008d0 memsz 0x00000000000008d0 flags r-x
    LOAD off    0x0000000000000db8 vaddr 0x0000000000200db8 paddr 0x0000000000200db8 align 2**21
         filesz 0x0000000000000258 memsz 0x0000000000000260 flags rw-
 DYNAMIC off    0x0000000000000dc8 vaddr 0x0000000000200dc8 paddr 0x0000000000200dc8 align 2**3
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000000764 vaddr 0x0000000000000764 paddr 0x0000000000000764 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000db8 vaddr 0x0000000000200db8 paddr 0x0000000000200db8 align 2**0
         filesz 0x0000000000000248 memsz 0x0000000000000248 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000000510
  FINI                 0x0000000000000754
  INIT_ARRAY           0x0000000000200db8
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200dc0
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000360
  SYMTAB               0x00000000000002b8
  STRSZ                0x0000000000000098
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000200fb8
  PLTRELSZ             0x0000000000000018
  PLTREL               0x0000000000000007
  JMPREL               0x00000000000004f8
  RELA                 0x0000000000000438
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x0000000000000408
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000003f8
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 03 GLIBC_2.2.5
    0x0d696914 0x00 02 GLIBC_2.4

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000a8  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000098  0000000000000360  0000000000000360  00000360  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000e  00000000000003f8  00000000000003f8  000003f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  0000000000000408  0000000000000408  00000408  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  0000000000000438  0000000000000438  00000438  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000018  00000000000004f8  00000000000004f8  000004f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000000510  0000000000000510  00000510  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000020  0000000000000530  0000000000000530  00000530  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  0000000000000550  0000000000000550  00000550  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000001f2  0000000000000560  0000000000000560  00000560  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  0000000000000754  0000000000000754  00000754  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000004  0000000000000760  0000000000000760  00000760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000044  0000000000000764  0000000000000764  00000764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000128  00000000000007a8  00000000000007a8  000007a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000200db8  0000000000200db8  00000db8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000200dc0  0000000000200dc0  00000dc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001f0  0000000000200dc8  0000000000200dc8  00000dc8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000048  0000000000200fb8  0000000000200fb8  00000fb8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000010  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000008  0000000000201010  0000000000201010  00001010  2**0
                  ALLOC
 24 .comment      0000002a  0000000000000000  0000000000000000  00001010  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000360 l    d  .dynstr	0000000000000000              .dynstr
00000000000003f8 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000408 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000438 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000004f8 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000000510 l    d  .init	0000000000000000              .init
0000000000000530 l    d  .plt	0000000000000000              .plt
0000000000000550 l    d  .plt.got	0000000000000000              .plt.got
0000000000000560 l    d  .text	0000000000000000              .text
0000000000000754 l    d  .fini	0000000000000000              .fini
0000000000000760 l    d  .rodata	0000000000000000              .rodata
0000000000000764 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000000007a8 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200db8 l    d  .init_array	0000000000000000              .init_array
0000000000200dc0 l    d  .fini_array	0000000000000000              .fini_array
0000000000200dc8 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fb8 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000590 l     F .text	0000000000000000              deregister_tm_clones
00000000000005d0 l     F .text	0000000000000000              register_tm_clones
0000000000000620 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201010 l     O .bss	0000000000000001              completed.7696
0000000000200dc0 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000000660 l     F .text	0000000000000000              frame_dummy
0000000000200db8 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              stack_example.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000008cc l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000200dc0 l       .init_array	0000000000000000              __init_array_end
0000000000200dc8 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200db8 l       .init_array	0000000000000000              __init_array_start
0000000000000764 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fb8 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000000750 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data	0000000000000000              data_start
0000000000201010 g       .data	0000000000000000              _edata
0000000000000754 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000201000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000000760 g     O .rodata	0000000000000004              _IO_stdin_used
00000000000006e0 g     F .text	0000000000000065              __libc_csu_init
0000000000201018 g       .bss	0000000000000000              _end
0000000000000560 g     F .text	000000000000002b              _start
0000000000201010 g       .bss	0000000000000000              __bss_start
00000000000006af g     F .text	0000000000000024              main
0000000000201010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000000510 g     F .init	0000000000000000              _init
000000000000066a g     F .text	0000000000000045              test_function


Contents of section .interp:
 0238 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0248 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.ABI-tag:
 0254 04000000 10000000 01000000 474e5500  ............GNU.
 0264 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 0274 04000000 14000000 03000000 474e5500  ............GNU.
 0284 46ed0104 e4b4defe 88840a64 e7fcc240  F..........d...@
 0294 074a5ab0                             .JZ.            
Contents of section .gnu.hash:
 0298 01000000 01000000 01000000 00000000  ................
 02a8 00000000 00000000 00000000           ............    
Contents of section .dynsym:
 02b8 00000000 00000000 00000000 00000000  ................
 02c8 00000000 00000000 53000000 20000000  ........S... ...
 02d8 00000000 00000000 00000000 00000000  ................
 02e8 0b000000 12000000 00000000 00000000  ................
 02f8 00000000 00000000 2b000000 12000000  ........+.......
 0308 00000000 00000000 00000000 00000000  ................
 0318 6f000000 20000000 00000000 00000000  o... ...........
 0328 00000000 00000000 7e000000 20000000  ........~... ...
 0338 00000000 00000000 00000000 00000000  ................
 0348 1c000000 22000000 00000000 00000000  ...."...........
 0358 00000000 00000000                    ........        
Contents of section .dynstr:
 0360 006c6962 632e736f 2e36005f 5f737461  .libc.so.6.__sta
 0370 636b5f63 686b5f66 61696c00 5f5f6378  ck_chk_fail.__cx
 0380 615f6669 6e616c69 7a65005f 5f6c6962  a_finalize.__lib
 0390 635f7374 6172745f 6d61696e 00474c49  c_start_main.GLI
 03a0 42435f32 2e322e35 00474c49 42435f32  BC_2.2.5.GLIBC_2
 03b0 2e34005f 49544d5f 64657265 67697374  .4._ITM_deregist
 03c0 6572544d 436c6f6e 65546162 6c65005f  erTMCloneTable._
 03d0 5f676d6f 6e5f7374 6172745f 5f005f49  _gmon_start__._I
 03e0 544d5f72 65676973 74657254 4d436c6f  TM_registerTMClo
 03f0 6e655461 626c6500                    neTable.        
Contents of section .gnu.version:
 03f8 00000000 02000300 00000000 0300      ..............  
Contents of section .gnu.version_r:
 0408 01000200 01000000 10000000 00000000  ................
 0418 751a6909 00000300 3d000000 10000000  u.i.....=.......
 0428 1469690d 00000200 49000000 00000000  .ii.....I.......
Contents of section .rela.dyn:
 0438 b80d2000 00000000 08000000 00000000  .. .............
 0448 60060000 00000000 c00d2000 00000000  `......... .....
 0458 08000000 00000000 20060000 00000000  ........ .......
 0468 08102000 00000000 08000000 00000000  .. .............
 0478 08102000 00000000 d80f2000 00000000  .. ....... .....
 0488 06000000 01000000 00000000 00000000  ................
 0498 e00f2000 00000000 06000000 03000000  .. .............
 04a8 00000000 00000000 e80f2000 00000000  .......... .....
 04b8 06000000 04000000 00000000 00000000  ................
 04c8 f00f2000 00000000 06000000 05000000  .. .............
 04d8 00000000 00000000 f80f2000 00000000  .......... .....
 04e8 06000000 06000000 00000000 00000000  ................
Contents of section .rela.plt:
 04f8 d00f2000 00000000 07000000 02000000  .. .............
 0508 00000000 00000000                    ........        
Contents of section .init:
 0510 4883ec08 488b05cd 0a200048 85c07402  H...H.... .H..t.
 0520 ffd04883 c408c3                      ..H....         
Contents of section .plt:
 0530 ff358a0a 2000ff25 8c0a2000 0f1f4000  .5.. ..%.. ...@.
 0540 ff258a0a 20006800 000000e9 e0ffffff  .%.. .h.........
Contents of section .plt.got:
 0550 ff25a20a 20006690                    .%.. .f.        
Contents of section .text:
 0560 31ed4989 d15e4889 e24883e4 f050544c  1.I..^H..H...PTL
 0570 8d05da01 0000488d 0d630100 00488d3d  ......H..c...H.=
 0580 2b010000 ff15560a 2000f40f 1f440000  +.....V. ....D..
 0590 488d3d79 0a200055 488d0571 0a200048  H.=y. .UH..q. .H
 05a0 39f84889 e5741948 8b052a0a 20004885  9.H..t.H..*. .H.
 05b0 c0740d5d ffe0662e 0f1f8400 00000000  .t.]..f.........
 05c0 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 05d0 488d3d39 0a200048 8d35320a 20005548  H.=9. .H.52. .UH
 05e0 29fe4889 e548c1fe 034889f0 48c1e83f  ).H..H...H..H..?
 05f0 4801c648 d1fe7418 488b05f1 09200048  H..H..t.H.... .H
 0600 85c0740c 5dffe066 0f1f8400 00000000  ..t.]..f........
 0610 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 0620 803de909 20000075 2f48833d c7092000  .=.. ..u/H.=.. .
 0630 00554889 e5740c48 8b3dca09 2000e80d  .UH..t.H.=.. ...
 0640 ffffffe8 48ffffff c605c109 2000015d  ....H....... ..]
 0650 c30f1f80 00000000 f3c3660f 1f440000  ..........f..D..
 0660 554889e5 5de966ff ffff5548 89e54883  UH..].f...UH..H.
 0670 ec30897d dc8975d8 8955d489 4dd06448  .0.}..u..U..M.dH
 0680 8b042528 00000048 8945f831 c0c745e8  ..%(...H.E.1..E.
 0690 697a0000 c645ee41 90488b45 f8644833  iz...E.A.H.E.dH3
 06a0 04252800 00007405 e893feff ffc9c355  .%(...t........U
 06b0 4889e5b9 04000000 ba030000 00be0200  H...............
 06c0 0000bf01 000000e8 9effffff b8000000  ................
 06d0 005dc366 2e0f1f84 00000000 000f1f00  .].f............
 06e0 41574156 4989d741 5541544c 8d25c606  AWAVI..AUATL.%..
 06f0 20005548 8d2dc606 20005341 89fd4989   .UH.-.. .SA..I.
 0700 f64c29e5 4883ec08 48c1fd03 e8fffdff  .L).H...H.......
 0710 ff4885ed 742031db 0f1f8400 00000000  .H..t 1.........
 0720 4c89fa4c 89f64489 ef41ff14 dc4883c3  L..L..D..A...H..
 0730 014839dd 75ea4883 c4085b5d 415c415d  .H9.u.H...[]A\A]
 0740 415e415f c390662e 0f1f8400 00000000  A^A_..f.........
 0750 f3c3                                 ..              
Contents of section .fini:
 0754 4883ec08 4883c408 c3                 H...H....       
Contents of section .rodata:
 0760 01000200                             ....            
Contents of section .eh_frame_hdr:
 0764 011b033b 40000000 07000000 ccfdffff  ...;@...........
 0774 8c000000 ecfdffff b4000000 fcfdffff  ................
 0784 5c000000 06ffffff cc000000 4bffffff  \...........K...
 0794 ec000000 7cffffff 0c010000 ecffffff  ....|...........
 07a4 54010000                             T...            
Contents of section .eh_frame:
 07a8 14000000 00000000 017a5200 01781001  .........zR..x..
 07b8 1b0c0708 90010710 14000000 1c000000  ................
 07c8 98fdffff 2b000000 00000000 00000000  ....+...........
 07d8 14000000 00000000 017a5200 01781001  .........zR..x..
 07e8 1b0c0708 90010000 24000000 1c000000  ........$.......
 07f8 38fdffff 20000000 000e1046 0e184a0f  8... ......F..J.
 0808 0b770880 003f1a3b 2a332422 00000000  .w...?.;*3$"....
 0818 14000000 44000000 30fdffff 08000000  ....D...0.......
 0828 00000000 00000000 1c000000 5c000000  ............\...
 0838 32feffff 45000000 00410e10 8602430d  2...E....A....C.
 0848 0602400c 07080000 1c000000 7c000000  ..@.........|...
 0858 57feffff 24000000 00410e10 8602430d  W...$....A....C.
 0868 065f0c07 08000000 44000000 9c000000  ._......D.......
 0878 68feffff 65000000 00420e10 8f02420e  h...e....B....B.
 0888 188e0345 0e208d04 420e288c 05480e30  ...E. ..B.(..H.0
 0898 8606480e 3883074d 0e40720e 38410e30  ..H.8..M.@r.8A.0
 08a8 410e2842 0e20420e 18420e10 420e0800  A.(B. B..B..B...
 08b8 10000000 e4000000 90feffff 02000000  ................
 08c8 00000000 00000000                    ........        
Contents of section .init_array:
 200db8 60060000 00000000                    `.......        
Contents of section .fini_array:
 200dc0 20060000 00000000                     .......        
Contents of section .dynamic:
 200dc8 01000000 00000000 01000000 00000000  ................
 200dd8 0c000000 00000000 10050000 00000000  ................
 200de8 0d000000 00000000 54070000 00000000  ........T.......
 200df8 19000000 00000000 b80d2000 00000000  .......... .....
 200e08 1b000000 00000000 08000000 00000000  ................
 200e18 1a000000 00000000 c00d2000 00000000  .......... .....
 200e28 1c000000 00000000 08000000 00000000  ................
 200e38 f5feff6f 00000000 98020000 00000000  ...o............
 200e48 05000000 00000000 60030000 00000000  ........`.......
 200e58 06000000 00000000 b8020000 00000000  ................
 200e68 0a000000 00000000 98000000 00000000  ................
 200e78 0b000000 00000000 18000000 00000000  ................
 200e88 15000000 00000000 00000000 00000000  ................
 200e98 03000000 00000000 b80f2000 00000000  .......... .....
 200ea8 02000000 00000000 18000000 00000000  ................
 200eb8 14000000 00000000 07000000 00000000  ................
 200ec8 17000000 00000000 f8040000 00000000  ................
 200ed8 07000000 00000000 38040000 00000000  ........8.......
 200ee8 08000000 00000000 c0000000 00000000  ................
 200ef8 09000000 00000000 18000000 00000000  ................
 200f08 1e000000 00000000 08000000 00000000  ................
 200f18 fbffff6f 00000000 01000008 00000000  ...o............
 200f28 feffff6f 00000000 08040000 00000000  ...o............
 200f38 ffffff6f 00000000 01000000 00000000  ...o............
 200f48 f0ffff6f 00000000 f8030000 00000000  ...o............
 200f58 f9ffff6f 00000000 03000000 00000000  ...o............
 200f68 00000000 00000000 00000000 00000000  ................
 200f78 00000000 00000000 00000000 00000000  ................
 200f88 00000000 00000000 00000000 00000000  ................
 200f98 00000000 00000000 00000000 00000000  ................
 200fa8 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 200fb8 c80d2000 00000000 00000000 00000000  .. .............
 200fc8 00000000 00000000 46050000 00000000  ........F.......
 200fd8 00000000 00000000 00000000 00000000  ................
 200fe8 00000000 00000000 00000000 00000000  ................
 200ff8 00000000 00000000                    ........        
Contents of section .data:
 201000 00000000 00000000 08102000 00000000  .......... .....
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20372e33  GCC: (Ubuntu 7.3
 0010 2e302d32 37756275 6e747531 7e31382e  .0-27ubuntu1~18.
 0020 30342920 372e332e 3000               04) 7.3.0.      

Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x29b>
 248:	78 38                	js     282 <_init-0x28e>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 46 ed             	add    BYTE PTR [rsi-0x13],al
 286:	01 04 e4             	add    DWORD PTR [rsp+riz*8],eax
 289:	b4 de                	mov    ah,0xde
 28b:	fe 88 84 0a 64 e7    	dec    BYTE PTR [rax-0x189bf57c]
 291:	fc                   	cld    
 292:	c2 40 07             	ret    0x740
 295:	4a 5a                	rex.WX pop rdx
 297:	b0                   	.byte 0xb0

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    DWORD PTR [rax],eax
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	01 00                	add    DWORD PTR [rax],eax
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	53                   	push   rbx
 2d1:	00 00                	add    BYTE PTR [rax],al
 2d3:	00 20                	add    BYTE PTR [rax],ah
	...
 2e5:	00 00                	add    BYTE PTR [rax],al
 2e7:	00 0b                	add    BYTE PTR [rbx],cl
 2e9:	00 00                	add    BYTE PTR [rax],al
 2eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 2fd:	00 00                	add    BYTE PTR [rax],al
 2ff:	00 2b                	add    BYTE PTR [rbx],ch
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 12                	add    BYTE PTR [rdx],dl
	...
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 6f 00             	add    BYTE PTR [rdi+0x0],ch
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	20 00                	and    BYTE PTR [rax],al
	...
 32e:	00 00                	add    BYTE PTR [rax],al
 330:	7e 00                	jle    332 <_init-0x1de>
 332:	00 00                	add    BYTE PTR [rax],al
 334:	20 00                	and    BYTE PTR [rax],al
	...
 346:	00 00                	add    BYTE PTR [rax],al
 348:	1c 00                	sbb    al,0x0
 34a:	00 00                	add    BYTE PTR [rax],al
 34c:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000360 <.dynstr>:
 360:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 364:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 366:	73 6f                	jae    3d7 <_init-0x139>
 368:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 36d:	73 74                	jae    3e3 <_init-0x12d>
 36f:	61                   	(bad)  
 370:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 373:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 376:	5f                   	pop    rdi
 377:	66 61                	data16 (bad) 
 379:	69 6c 00 5f 5f 63 78 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x6178635f
 380:	61 
 381:	5f                   	pop    rdi
 382:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 388:	7a 65                	jp     3ef <_init-0x121>
 38a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 38d:	6c                   	ins    BYTE PTR es:[rdi],dx
 38e:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 395:	72 74                	jb     40b <_init-0x105>
 397:	5f                   	pop    rdi
 398:	6d                   	ins    DWORD PTR es:[rdi],dx
 399:	61                   	(bad)  
 39a:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 3a1:	43 5f                	rex.XB pop r15
 3a3:	32 2e                	xor    ch,BYTE PTR [rsi]
 3a5:	32 2e                	xor    ch,BYTE PTR [rsi]
 3a7:	35 00 47 4c 49       	xor    eax,0x494c4700
 3ac:	42                   	rex.X
 3ad:	43 5f                	rex.XB pop r15
 3af:	32 2e                	xor    ch,BYTE PTR [rsi]
 3b1:	34 00                	xor    al,0x0
 3b3:	5f                   	pop    rdi
 3b4:	49 54                	rex.WB push r12
 3b6:	4d 5f                	rex.WRB pop r15
 3b8:	64 65 72 65          	fs gs jb 421 <_init-0xef>
 3bc:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3c3:	4d 
 3c4:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3c8:	65 54                	gs push rsp
 3ca:	61                   	(bad)  
 3cb:	62                   	(bad)  
 3cc:	6c                   	ins    BYTE PTR es:[rdi],dx
 3cd:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 3d1:	67 6d                	ins    DWORD PTR es:[edi],dx
 3d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3d5:	5f                   	pop    rdi
 3d6:	73 74                	jae    44c <_init-0xc4>
 3d8:	61                   	(bad)  
 3d9:	72 74                	jb     44f <_init-0xc1>
 3db:	5f                   	pop    rdi
 3dc:	5f                   	pop    rdi
 3dd:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 3e0:	54                   	push   rsp
 3e1:	4d 5f                	rex.WRB pop r15
 3e3:	72 65                	jb     44a <_init-0xc6>
 3e5:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3ec:	4d 
 3ed:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3f1:	65 54                	gs push rsp
 3f3:	61                   	(bad)  
 3f4:	62                   	.byte 0x62
 3f5:	6c                   	ins    BYTE PTR es:[rdi],dx
 3f6:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000003f8 <.gnu.version>:
 3f8:	00 00                	add    BYTE PTR [rax],al
 3fa:	00 00                	add    BYTE PTR [rax],al
 3fc:	02 00                	add    al,BYTE PTR [rax]
 3fe:	03 00                	add    eax,DWORD PTR [rax]
 400:	00 00                	add    BYTE PTR [rax],al
 402:	00 00                	add    BYTE PTR [rax],al
 404:	03 00                	add    eax,DWORD PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000408 <.gnu.version_r>:
 408:	01 00                	add    DWORD PTR [rax],eax
 40a:	02 00                	add    al,BYTE PTR [rax]
 40c:	01 00                	add    DWORD PTR [rax],eax
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	10 00                	adc    BYTE PTR [rax],al
 412:	00 00                	add    BYTE PTR [rax],al
 414:	00 00                	add    BYTE PTR [rax],al
 416:	00 00                	add    BYTE PTR [rax],al
 418:	75 1a                	jne    434 <_init-0xdc>
 41a:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 420:	3d 00 00 00 10       	cmp    eax,0x10000000
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 42a:	69 0d 00 00 02 00 49 	imul   ecx,DWORD PTR [rip+0x20000],0x49        # 20434 <__FRAME_END__+0x1fb68>
 431:	00 00 00 
 434:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000438 <.rela.dyn>:
 438:	b8 0d 20 00 00       	mov    eax,0x200d
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 08                	add    BYTE PTR [rax],cl
 441:	00 00                	add    BYTE PTR [rax],al
 443:	00 00                	add    BYTE PTR [rax],al
 445:	00 00                	add    BYTE PTR [rax],al
 447:	00 60 06             	add    BYTE PTR [rax+0x6],ah
 44a:	00 00                	add    BYTE PTR [rax],al
 44c:	00 00                	add    BYTE PTR [rax],al
 44e:	00 00                	add    BYTE PTR [rax],al
 450:	c0 0d 20 00 00 00 00 	ror    BYTE PTR [rip+0x20],0x0        # 477 <_init-0x99>
 457:	00 08                	add    BYTE PTR [rax],cl
 459:	00 00                	add    BYTE PTR [rax],al
 45b:	00 00                	add    BYTE PTR [rax],al
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 20                	add    BYTE PTR [rax],ah
 461:	06                   	(bad)  
 462:	00 00                	add    BYTE PTR [rax],al
 464:	00 00                	add    BYTE PTR [rax],al
 466:	00 00                	add    BYTE PTR [rax],al
 468:	08 10                	or     BYTE PTR [rax],dl
 46a:	20 00                	and    BYTE PTR [rax],al
 46c:	00 00                	add    BYTE PTR [rax],al
 46e:	00 00                	add    BYTE PTR [rax],al
 470:	08 00                	or     BYTE PTR [rax],al
 472:	00 00                	add    BYTE PTR [rax],al
 474:	00 00                	add    BYTE PTR [rax],al
 476:	00 00                	add    BYTE PTR [rax],al
 478:	08 10                	or     BYTE PTR [rax],dl
 47a:	20 00                	and    BYTE PTR [rax],al
 47c:	00 00                	add    BYTE PTR [rax],al
 47e:	00 00                	add    BYTE PTR [rax],al
 480:	d8 0f                	fmul   DWORD PTR [rdi]
 482:	20 00                	and    BYTE PTR [rax],al
 484:	00 00                	add    BYTE PTR [rax],al
 486:	00 00                	add    BYTE PTR [rax],al
 488:	06                   	(bad)  
 489:	00 00                	add    BYTE PTR [rax],al
 48b:	00 01                	add    BYTE PTR [rcx],al
	...
 495:	00 00                	add    BYTE PTR [rax],al
 497:	00 e0                	add    al,ah
 499:	0f 20 00             	mov    rax,cr0
 49c:	00 00                	add    BYTE PTR [rax],al
 49e:	00 00                	add    BYTE PTR [rax],al
 4a0:	06                   	(bad)  
 4a1:	00 00                	add    BYTE PTR [rax],al
 4a3:	00 03                	add    BYTE PTR [rbx],al
	...
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	00 e8                	add    al,ch
 4b1:	0f 20 00             	mov    rax,cr0
 4b4:	00 00                	add    BYTE PTR [rax],al
 4b6:	00 00                	add    BYTE PTR [rax],al
 4b8:	06                   	(bad)  
 4b9:	00 00                	add    BYTE PTR [rax],al
 4bb:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 4c6:	00 00                	add    BYTE PTR [rax],al
 4c8:	f0 0f 20 00          	lock mov rax,cr0
 4cc:	00 00                	add    BYTE PTR [rax],al
 4ce:	00 00                	add    BYTE PTR [rax],al
 4d0:	06                   	(bad)  
 4d1:	00 00                	add    BYTE PTR [rax],al
 4d3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4d9 <_init-0x37>
 4d9:	00 00                	add    BYTE PTR [rax],al
 4db:	00 00                	add    BYTE PTR [rax],al
 4dd:	00 00                	add    BYTE PTR [rax],al
 4df:	00 f8                	add    al,bh
 4e1:	0f 20 00             	mov    rax,cr0
 4e4:	00 00                	add    BYTE PTR [rax],al
 4e6:	00 00                	add    BYTE PTR [rax],al
 4e8:	06                   	(bad)  
 4e9:	00 00                	add    BYTE PTR [rax],al
 4eb:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .rela.plt:

00000000000004f8 <.rela.plt>:
 4f8:	d0 0f                	ror    BYTE PTR [rdi],1
 4fa:	20 00                	and    BYTE PTR [rax],al
 4fc:	00 00                	add    BYTE PTR [rax],al
 4fe:	00 00                	add    BYTE PTR [rax],al
 500:	07                   	(bad)  
 501:	00 00                	add    BYTE PTR [rax],al
 503:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .init:

0000000000000510 <_init>:
 510:	48 83 ec 08          	sub    rsp,0x8
 514:	48 8b 05 cd 0a 20 00 	mov    rax,QWORD PTR [rip+0x200acd]        # 200fe8 <__gmon_start__>
 51b:	48 85 c0             	test   rax,rax
 51e:	74 02                	je     522 <_init+0x12>
 520:	ff d0                	call   rax
 522:	48 83 c4 08          	add    rsp,0x8
 526:	c3                   	ret    

Disassembly of section .plt:

0000000000000530 <.plt>:
 530:	ff 35 8a 0a 20 00    	push   QWORD PTR [rip+0x200a8a]        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
 536:	ff 25 8c 0a 20 00    	jmp    QWORD PTR [rip+0x200a8c]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
 53c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000540 <__stack_chk_fail@plt>:
 540:	ff 25 8a 0a 20 00    	jmp    QWORD PTR [rip+0x200a8a]        # 200fd0 <__stack_chk_fail@GLIBC_2.4>
 546:	68 00 00 00 00       	push   0x0
 54b:	e9 e0 ff ff ff       	jmp    530 <.plt>

Disassembly of section .plt.got:

0000000000000550 <__cxa_finalize@plt>:
 550:	ff 25 a2 0a 20 00    	jmp    QWORD PTR [rip+0x200aa2]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 556:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000560 <_start>:
 560:	31 ed                	xor    ebp,ebp
 562:	49 89 d1             	mov    r9,rdx
 565:	5e                   	pop    rsi
 566:	48 89 e2             	mov    rdx,rsp
 569:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 56d:	50                   	push   rax
 56e:	54                   	push   rsp
 56f:	4c 8d 05 da 01 00 00 	lea    r8,[rip+0x1da]        # 750 <__libc_csu_fini>
 576:	48 8d 0d 63 01 00 00 	lea    rcx,[rip+0x163]        # 6e0 <__libc_csu_init>
 57d:	48 8d 3d 2b 01 00 00 	lea    rdi,[rip+0x12b]        # 6af <main>
 584:	ff 15 56 0a 20 00    	call   QWORD PTR [rip+0x200a56]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 58a:	f4                   	hlt    
 58b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000590 <deregister_tm_clones>:
 590:	48 8d 3d 79 0a 20 00 	lea    rdi,[rip+0x200a79]        # 201010 <__TMC_END__>
 597:	55                   	push   rbp
 598:	48 8d 05 71 0a 20 00 	lea    rax,[rip+0x200a71]        # 201010 <__TMC_END__>
 59f:	48 39 f8             	cmp    rax,rdi
 5a2:	48 89 e5             	mov    rbp,rsp
 5a5:	74 19                	je     5c0 <deregister_tm_clones+0x30>
 5a7:	48 8b 05 2a 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a2a]        # 200fd8 <_ITM_deregisterTMCloneTable>
 5ae:	48 85 c0             	test   rax,rax
 5b1:	74 0d                	je     5c0 <deregister_tm_clones+0x30>
 5b3:	5d                   	pop    rbp
 5b4:	ff e0                	jmp    rax
 5b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 5bd:	00 00 00 
 5c0:	5d                   	pop    rbp
 5c1:	c3                   	ret    
 5c2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 5c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 5cd:	00 00 00 

00000000000005d0 <register_tm_clones>:
 5d0:	48 8d 3d 39 0a 20 00 	lea    rdi,[rip+0x200a39]        # 201010 <__TMC_END__>
 5d7:	48 8d 35 32 0a 20 00 	lea    rsi,[rip+0x200a32]        # 201010 <__TMC_END__>
 5de:	55                   	push   rbp
 5df:	48 29 fe             	sub    rsi,rdi
 5e2:	48 89 e5             	mov    rbp,rsp
 5e5:	48 c1 fe 03          	sar    rsi,0x3
 5e9:	48 89 f0             	mov    rax,rsi
 5ec:	48 c1 e8 3f          	shr    rax,0x3f
 5f0:	48 01 c6             	add    rsi,rax
 5f3:	48 d1 fe             	sar    rsi,1
 5f6:	74 18                	je     610 <register_tm_clones+0x40>
 5f8:	48 8b 05 f1 09 20 00 	mov    rax,QWORD PTR [rip+0x2009f1]        # 200ff0 <_ITM_registerTMCloneTable>
 5ff:	48 85 c0             	test   rax,rax
 602:	74 0c                	je     610 <register_tm_clones+0x40>
 604:	5d                   	pop    rbp
 605:	ff e0                	jmp    rax
 607:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 60e:	00 00 
 610:	5d                   	pop    rbp
 611:	c3                   	ret    
 612:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 616:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 61d:	00 00 00 

0000000000000620 <__do_global_dtors_aux>:
 620:	80 3d e9 09 20 00 00 	cmp    BYTE PTR [rip+0x2009e9],0x0        # 201010 <__TMC_END__>
 627:	75 2f                	jne    658 <__do_global_dtors_aux+0x38>
 629:	48 83 3d c7 09 20 00 	cmp    QWORD PTR [rip+0x2009c7],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 630:	00 
 631:	55                   	push   rbp
 632:	48 89 e5             	mov    rbp,rsp
 635:	74 0c                	je     643 <__do_global_dtors_aux+0x23>
 637:	48 8b 3d ca 09 20 00 	mov    rdi,QWORD PTR [rip+0x2009ca]        # 201008 <__dso_handle>
 63e:	e8 0d ff ff ff       	call   550 <__cxa_finalize@plt>
 643:	e8 48 ff ff ff       	call   590 <deregister_tm_clones>
 648:	c6 05 c1 09 20 00 01 	mov    BYTE PTR [rip+0x2009c1],0x1        # 201010 <__TMC_END__>
 64f:	5d                   	pop    rbp
 650:	c3                   	ret    
 651:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 658:	f3 c3                	repz ret 
 65a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000660 <frame_dummy>:
 660:	55                   	push   rbp
 661:	48 89 e5             	mov    rbp,rsp
 664:	5d                   	pop    rbp
 665:	e9 66 ff ff ff       	jmp    5d0 <register_tm_clones>

000000000000066a <test_function>:
 66a:	55                   	push   rbp
 66b:	48 89 e5             	mov    rbp,rsp
 66e:	48 83 ec 30          	sub    rsp,0x30
 672:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
 675:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
 678:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
 67b:	89 4d d0             	mov    DWORD PTR [rbp-0x30],ecx
 67e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
 685:	00 00 
 687:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 68b:	31 c0                	xor    eax,eax
 68d:	c7 45 e8 69 7a 00 00 	mov    DWORD PTR [rbp-0x18],0x7a69
 694:	c6 45 ee 41          	mov    BYTE PTR [rbp-0x12],0x41
 698:	90                   	nop
 699:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 69d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
 6a4:	00 00 
 6a6:	74 05                	je     6ad <test_function+0x43>
 6a8:	e8 93 fe ff ff       	call   540 <__stack_chk_fail@plt>
 6ad:	c9                   	leave  
 6ae:	c3                   	ret    

00000000000006af <main>:
 6af:	55                   	push   rbp
 6b0:	48 89 e5             	mov    rbp,rsp
 6b3:	b9 04 00 00 00       	mov    ecx,0x4
 6b8:	ba 03 00 00 00       	mov    edx,0x3
 6bd:	be 02 00 00 00       	mov    esi,0x2
 6c2:	bf 01 00 00 00       	mov    edi,0x1
 6c7:	e8 9e ff ff ff       	call   66a <test_function>
 6cc:	b8 00 00 00 00       	mov    eax,0x0
 6d1:	5d                   	pop    rbp
 6d2:	c3                   	ret    
 6d3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6da:	00 00 00 
 6dd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000006e0 <__libc_csu_init>:
 6e0:	41 57                	push   r15
 6e2:	41 56                	push   r14
 6e4:	49 89 d7             	mov    r15,rdx
 6e7:	41 55                	push   r13
 6e9:	41 54                	push   r12
 6eb:	4c 8d 25 c6 06 20 00 	lea    r12,[rip+0x2006c6]        # 200db8 <__frame_dummy_init_array_entry>
 6f2:	55                   	push   rbp
 6f3:	48 8d 2d c6 06 20 00 	lea    rbp,[rip+0x2006c6]        # 200dc0 <__init_array_end>
 6fa:	53                   	push   rbx
 6fb:	41 89 fd             	mov    r13d,edi
 6fe:	49 89 f6             	mov    r14,rsi
 701:	4c 29 e5             	sub    rbp,r12
 704:	48 83 ec 08          	sub    rsp,0x8
 708:	48 c1 fd 03          	sar    rbp,0x3
 70c:	e8 ff fd ff ff       	call   510 <_init>
 711:	48 85 ed             	test   rbp,rbp
 714:	74 20                	je     736 <__libc_csu_init+0x56>
 716:	31 db                	xor    ebx,ebx
 718:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 71f:	00 
 720:	4c 89 fa             	mov    rdx,r15
 723:	4c 89 f6             	mov    rsi,r14
 726:	44 89 ef             	mov    edi,r13d
 729:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 72d:	48 83 c3 01          	add    rbx,0x1
 731:	48 39 dd             	cmp    rbp,rbx
 734:	75 ea                	jne    720 <__libc_csu_init+0x40>
 736:	48 83 c4 08          	add    rsp,0x8
 73a:	5b                   	pop    rbx
 73b:	5d                   	pop    rbp
 73c:	41 5c                	pop    r12
 73e:	41 5d                	pop    r13
 740:	41 5e                	pop    r14
 742:	41 5f                	pop    r15
 744:	c3                   	ret    
 745:	90                   	nop
 746:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 74d:	00 00 00 

0000000000000750 <__libc_csu_fini>:
 750:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000000754 <_fini>:
 754:	48 83 ec 08          	sub    rsp,0x8
 758:	48 83 c4 08          	add    rsp,0x8
 75c:	c3                   	ret    

Disassembly of section .rodata:

0000000000000760 <_IO_stdin_used>:
 760:	01 00                	add    DWORD PTR [rax],eax
 762:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

0000000000000764 <__GNU_EH_FRAME_HDR>:
 764:	01 1b                	add    DWORD PTR [rbx],ebx
 766:	03 3b                	add    edi,DWORD PTR [rbx]
 768:	40 00 00             	add    BYTE PTR [rax],al
 76b:	00 07                	add    BYTE PTR [rdi],al
 76d:	00 00                	add    BYTE PTR [rax],al
 76f:	00 cc                	add    ah,cl
 771:	fd                   	std    
 772:	ff                   	(bad)  
 773:	ff 8c 00 00 00 ec fd 	dec    DWORD PTR [rax+rax*1-0x2140000]
 77a:	ff                   	(bad)  
 77b:	ff b4 00 00 00 fc fd 	push   QWORD PTR [rax+rax*1-0x2040000]
 782:	ff                   	(bad)  
 783:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
 787:	00 06                	add    BYTE PTR [rsi],al
 789:	ff                   	(bad)  
 78a:	ff                   	(bad)  
 78b:	ff cc                	dec    esp
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 4b ff             	add    BYTE PTR [rbx-0x1],cl
 792:	ff                   	(bad)  
 793:	ff                   	(bad)  
 794:	ec                   	in     al,dx
 795:	00 00                	add    BYTE PTR [rax],al
 797:	00 7c ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],bh
 79b:	ff 0c 01             	dec    DWORD PTR [rcx+rax*1]
 79e:	00 00                	add    BYTE PTR [rax],al
 7a0:	ec                   	in     al,dx
 7a1:	ff                   	(bad)  
 7a2:	ff                   	(bad)  
 7a3:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
	...

Disassembly of section .eh_frame:

00000000000007a8 <__FRAME_END__-0x124>:
 7a8:	14 00                	adc    al,0x0
 7aa:	00 00                	add    BYTE PTR [rax],al
 7ac:	00 00                	add    BYTE PTR [rax],al
 7ae:	00 00                	add    BYTE PTR [rax],al
 7b0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 7b3:	00 01                	add    BYTE PTR [rcx],al
 7b5:	78 10                	js     7c7 <__GNU_EH_FRAME_HDR+0x63>
 7b7:	01 1b                	add    DWORD PTR [rbx],ebx
 7b9:	0c 07                	or     al,0x7
 7bb:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 7c1:	00 00                	add    BYTE PTR [rax],al
 7c3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 7c6:	00 00                	add    BYTE PTR [rax],al
 7c8:	98                   	cwde   
 7c9:	fd                   	std    
 7ca:	ff                   	(bad)  
 7cb:	ff 2b                	jmp    FWORD PTR [rbx]
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
 7da:	00 00                	add    BYTE PTR [rax],al
 7dc:	00 00                	add    BYTE PTR [rax],al
 7de:	00 00                	add    BYTE PTR [rax],al
 7e0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 7e3:	00 01                	add    BYTE PTR [rcx],al
 7e5:	78 10                	js     7f7 <__GNU_EH_FRAME_HDR+0x93>
 7e7:	01 1b                	add    DWORD PTR [rbx],ebx
 7e9:	0c 07                	or     al,0x7
 7eb:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 7f1:	00 00                	add    BYTE PTR [rax],al
 7f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 7f6:	00 00                	add    BYTE PTR [rax],al
 7f8:	38 fd                	cmp    ch,bh
 7fa:	ff                   	(bad)  
 7fb:	ff 20                	jmp    QWORD PTR [rax]
 7fd:	00 00                	add    BYTE PTR [rax],al
 7ff:	00 00                	add    BYTE PTR [rax],al
 801:	0e                   	(bad)  
 802:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 805:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 808:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 80b:	80 00 3f             	add    BYTE PTR [rax],0x3f
 80e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 810:	2a 33                	sub    dh,BYTE PTR [rbx]
 812:	24 22                	and    al,0x22
 814:	00 00                	add    BYTE PTR [rax],al
 816:	00 00                	add    BYTE PTR [rax],al
 818:	14 00                	adc    al,0x0
 81a:	00 00                	add    BYTE PTR [rax],al
 81c:	44 00 00             	add    BYTE PTR [rax],r8b
 81f:	00 30                	add    BYTE PTR [rax],dh
 821:	fd                   	std    
 822:	ff                   	(bad)  
 823:	ff 08                	dec    DWORD PTR [rax]
	...
 82d:	00 00                	add    BYTE PTR [rax],al
 82f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 832:	00 00                	add    BYTE PTR [rax],al
 834:	5c                   	pop    rsp
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 32                	add    BYTE PTR [rdx],dh
 839:	fe                   	(bad)  
 83a:	ff                   	(bad)  
 83b:	ff 45 00             	inc    DWORD PTR [rbp+0x0]
 83e:	00 00                	add    BYTE PTR [rax],al
 840:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 843:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 849:	02 40 0c             	add    al,BYTE PTR [rax+0xc]
 84c:	07                   	(bad)  
 84d:	08 00                	or     BYTE PTR [rax],al
 84f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 852:	00 00                	add    BYTE PTR [rax],al
 854:	7c 00                	jl     856 <__GNU_EH_FRAME_HDR+0xf2>
 856:	00 00                	add    BYTE PTR [rax],al
 858:	57                   	push   rdi
 859:	fe                   	(bad)  
 85a:	ff                   	(bad)  
 85b:	ff 24 00             	jmp    QWORD PTR [rax+rax*1]
 85e:	00 00                	add    BYTE PTR [rax],al
 860:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 863:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 869:	5f                   	pop    rdi
 86a:	0c 07                	or     al,0x7
 86c:	08 00                	or     BYTE PTR [rax],al
 86e:	00 00                	add    BYTE PTR [rax],al
 870:	44 00 00             	add    BYTE PTR [rax],r8b
 873:	00 9c 00 00 00 68 fe 	add    BYTE PTR [rax+rax*1-0x1980000],bl
 87a:	ff                   	(bad)  
 87b:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
 87e:	00 00                	add    BYTE PTR [rax],al
 880:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
 883:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 889:	8e 03                	mov    es,WORD PTR [rbx]
 88b:	45 0e                	rex.RB (bad) 
 88d:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 893:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff863016e1 <_end+0xffffffff861006c9>
 899:	06                   	(bad)  
 89a:	48 0e                	rex.W (bad) 
 89c:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 8a2:	72 0e                	jb     8b2 <__GNU_EH_FRAME_HDR+0x14e>
 8a4:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 8a7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 8aa:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 8ad:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 8b0:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 8b3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 8b6:	08 00                	or     BYTE PTR [rax],al
 8b8:	10 00                	adc    BYTE PTR [rax],al
 8ba:	00 00                	add    BYTE PTR [rax],al
 8bc:	e4 00                	in     al,0x0
 8be:	00 00                	add    BYTE PTR [rax],al
 8c0:	90                   	nop
 8c1:	fe                   	(bad)  
 8c2:	ff                   	(bad)  
 8c3:	ff 02                	inc    DWORD PTR [rdx]
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 00                	add    BYTE PTR [rax],al
 8c9:	00 00                	add    BYTE PTR [rax],al
	...

00000000000008cc <__FRAME_END__>:
 8cc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200db8 <__frame_dummy_init_array_entry>:
  200db8:	60                   	(bad)  
  200db9:	06                   	(bad)  
  200dba:	00 00                	add    BYTE PTR [rax],al
  200dbc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000200dc0 <__do_global_dtors_aux_fini_array_entry>:
  200dc0:	20 06                	and    BYTE PTR [rsi],al
  200dc2:	00 00                	add    BYTE PTR [rax],al
  200dc4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000200dc8 <_DYNAMIC>:
  200dc8:	01 00                	add    DWORD PTR [rax],eax
  200dca:	00 00                	add    BYTE PTR [rax],al
  200dcc:	00 00                	add    BYTE PTR [rax],al
  200dce:	00 00                	add    BYTE PTR [rax],al
  200dd0:	01 00                	add    DWORD PTR [rax],eax
  200dd2:	00 00                	add    BYTE PTR [rax],al
  200dd4:	00 00                	add    BYTE PTR [rax],al
  200dd6:	00 00                	add    BYTE PTR [rax],al
  200dd8:	0c 00                	or     al,0x0
  200dda:	00 00                	add    BYTE PTR [rax],al
  200ddc:	00 00                	add    BYTE PTR [rax],al
  200dde:	00 00                	add    BYTE PTR [rax],al
  200de0:	10 05 00 00 00 00    	adc    BYTE PTR [rip+0x0],al        # 200de6 <_DYNAMIC+0x1e>
  200de6:	00 00                	add    BYTE PTR [rax],al
  200de8:	0d 00 00 00 00       	or     eax,0x0
  200ded:	00 00                	add    BYTE PTR [rax],al
  200def:	00 54 07 00          	add    BYTE PTR [rdi+rax*1+0x0],dl
  200df3:	00 00                	add    BYTE PTR [rax],al
  200df5:	00 00                	add    BYTE PTR [rax],al
  200df7:	00 19                	add    BYTE PTR [rcx],bl
  200df9:	00 00                	add    BYTE PTR [rax],al
  200dfb:	00 00                	add    BYTE PTR [rax],al
  200dfd:	00 00                	add    BYTE PTR [rax],al
  200dff:	00 b8 0d 20 00 00    	add    BYTE PTR [rax+0x200d],bh
  200e05:	00 00                	add    BYTE PTR [rax],al
  200e07:	00 1b                	add    BYTE PTR [rbx],bl
  200e09:	00 00                	add    BYTE PTR [rax],al
  200e0b:	00 00                	add    BYTE PTR [rax],al
  200e0d:	00 00                	add    BYTE PTR [rax],al
  200e0f:	00 08                	add    BYTE PTR [rax],cl
  200e11:	00 00                	add    BYTE PTR [rax],al
  200e13:	00 00                	add    BYTE PTR [rax],al
  200e15:	00 00                	add    BYTE PTR [rax],al
  200e17:	00 1a                	add    BYTE PTR [rdx],bl
  200e19:	00 00                	add    BYTE PTR [rax],al
  200e1b:	00 00                	add    BYTE PTR [rax],al
  200e1d:	00 00                	add    BYTE PTR [rax],al
  200e1f:	00 c0                	add    al,al
  200e21:	0d 20 00 00 00       	or     eax,0x20
  200e26:	00 00                	add    BYTE PTR [rax],al
  200e28:	1c 00                	sbb    al,0x0
  200e2a:	00 00                	add    BYTE PTR [rax],al
  200e2c:	00 00                	add    BYTE PTR [rax],al
  200e2e:	00 00                	add    BYTE PTR [rax],al
  200e30:	08 00                	or     BYTE PTR [rax],al
  200e32:	00 00                	add    BYTE PTR [rax],al
  200e34:	00 00                	add    BYTE PTR [rax],al
  200e36:	00 00                	add    BYTE PTR [rax],al
  200e38:	f5                   	cmc    
  200e39:	fe                   	(bad)  
  200e3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e3d:	00 00                	add    BYTE PTR [rax],al
  200e3f:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e45:	00 00                	add    BYTE PTR [rax],al
  200e47:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e4d <_DYNAMIC+0x85>
  200e4d:	00 00                	add    BYTE PTR [rax],al
  200e4f:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  200e52:	00 00                	add    BYTE PTR [rax],al
  200e54:	00 00                	add    BYTE PTR [rax],al
  200e56:	00 00                	add    BYTE PTR [rax],al
  200e58:	06                   	(bad)  
  200e59:	00 00                	add    BYTE PTR [rax],al
  200e5b:	00 00                	add    BYTE PTR [rax],al
  200e5d:	00 00                	add    BYTE PTR [rax],al
  200e5f:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
  200e65:	00 00                	add    BYTE PTR [rax],al
  200e67:	00 0a                	add    BYTE PTR [rdx],cl
  200e69:	00 00                	add    BYTE PTR [rax],al
  200e6b:	00 00                	add    BYTE PTR [rax],al
  200e6d:	00 00                	add    BYTE PTR [rax],al
  200e6f:	00 98 00 00 00 00    	add    BYTE PTR [rax+0x0],bl
  200e75:	00 00                	add    BYTE PTR [rax],al
  200e77:	00 0b                	add    BYTE PTR [rbx],cl
  200e79:	00 00                	add    BYTE PTR [rax],al
  200e7b:	00 00                	add    BYTE PTR [rax],al
  200e7d:	00 00                	add    BYTE PTR [rax],al
  200e7f:	00 18                	add    BYTE PTR [rax],bl
  200e81:	00 00                	add    BYTE PTR [rax],al
  200e83:	00 00                	add    BYTE PTR [rax],al
  200e85:	00 00                	add    BYTE PTR [rax],al
  200e87:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 200e8d <_DYNAMIC+0xc5>
	...
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 03                	add    BYTE PTR [rbx],al
  200e99:	00 00                	add    BYTE PTR [rax],al
  200e9b:	00 00                	add    BYTE PTR [rax],al
  200e9d:	00 00                	add    BYTE PTR [rax],al
  200e9f:	00 b8 0f 20 00 00    	add    BYTE PTR [rax+0x200f],bh
  200ea5:	00 00                	add    BYTE PTR [rax],al
  200ea7:	00 02                	add    BYTE PTR [rdx],al
  200ea9:	00 00                	add    BYTE PTR [rax],al
  200eab:	00 00                	add    BYTE PTR [rax],al
  200ead:	00 00                	add    BYTE PTR [rax],al
  200eaf:	00 18                	add    BYTE PTR [rax],bl
  200eb1:	00 00                	add    BYTE PTR [rax],al
  200eb3:	00 00                	add    BYTE PTR [rax],al
  200eb5:	00 00                	add    BYTE PTR [rax],al
  200eb7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  200eba:	00 00                	add    BYTE PTR [rax],al
  200ebc:	00 00                	add    BYTE PTR [rax],al
  200ebe:	00 00                	add    BYTE PTR [rax],al
  200ec0:	07                   	(bad)  
  200ec1:	00 00                	add    BYTE PTR [rax],al
  200ec3:	00 00                	add    BYTE PTR [rax],al
  200ec5:	00 00                	add    BYTE PTR [rax],al
  200ec7:	00 17                	add    BYTE PTR [rdi],dl
  200ec9:	00 00                	add    BYTE PTR [rax],al
  200ecb:	00 00                	add    BYTE PTR [rax],al
  200ecd:	00 00                	add    BYTE PTR [rax],al
  200ecf:	00 f8                	add    al,bh
  200ed1:	04 00                	add    al,0x0
  200ed3:	00 00                	add    BYTE PTR [rax],al
  200ed5:	00 00                	add    BYTE PTR [rax],al
  200ed7:	00 07                	add    BYTE PTR [rdi],al
  200ed9:	00 00                	add    BYTE PTR [rax],al
  200edb:	00 00                	add    BYTE PTR [rax],al
  200edd:	00 00                	add    BYTE PTR [rax],al
  200edf:	00 38                	add    BYTE PTR [rax],bh
  200ee1:	04 00                	add    al,0x0
  200ee3:	00 00                	add    BYTE PTR [rax],al
  200ee5:	00 00                	add    BYTE PTR [rax],al
  200ee7:	00 08                	add    BYTE PTR [rax],cl
  200ee9:	00 00                	add    BYTE PTR [rax],al
  200eeb:	00 00                	add    BYTE PTR [rax],al
  200eed:	00 00                	add    BYTE PTR [rax],al
  200eef:	00 c0                	add    al,al
  200ef1:	00 00                	add    BYTE PTR [rax],al
  200ef3:	00 00                	add    BYTE PTR [rax],al
  200ef5:	00 00                	add    BYTE PTR [rax],al
  200ef7:	00 09                	add    BYTE PTR [rcx],cl
  200ef9:	00 00                	add    BYTE PTR [rax],al
  200efb:	00 00                	add    BYTE PTR [rax],al
  200efd:	00 00                	add    BYTE PTR [rax],al
  200eff:	00 18                	add    BYTE PTR [rax],bl
  200f01:	00 00                	add    BYTE PTR [rax],al
  200f03:	00 00                	add    BYTE PTR [rax],al
  200f05:	00 00                	add    BYTE PTR [rax],al
  200f07:	00 1e                	add    BYTE PTR [rsi],bl
  200f09:	00 00                	add    BYTE PTR [rax],al
  200f0b:	00 00                	add    BYTE PTR [rax],al
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 08                	add    BYTE PTR [rax],cl
  200f11:	00 00                	add    BYTE PTR [rax],al
  200f13:	00 00                	add    BYTE PTR [rax],al
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 fb                	add    bl,bh
  200f19:	ff                   	(bad)  
  200f1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 01                	add    BYTE PTR [rcx],al
  200f21:	00 00                	add    BYTE PTR [rax],al
  200f23:	08 00                	or     BYTE PTR [rax],al
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 fe                	add    dh,bh
  200f29:	ff                   	(bad)  
  200f2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f2d:	00 00                	add    BYTE PTR [rax],al
  200f2f:	00 08                	add    BYTE PTR [rax],cl
  200f31:	04 00                	add    al,0x0
  200f33:	00 00                	add    BYTE PTR [rax],al
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 ff                	add    bh,bh
  200f39:	ff                   	(bad)  
  200f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f3d:	00 00                	add    BYTE PTR [rax],al
  200f3f:	00 01                	add    BYTE PTR [rcx],al
  200f41:	00 00                	add    BYTE PTR [rax],al
  200f43:	00 00                	add    BYTE PTR [rax],al
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 f0                	add    al,dh
  200f49:	ff                   	(bad)  
  200f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f4d:	00 00                	add    BYTE PTR [rax],al
  200f4f:	00 f8                	add    al,bh
  200f51:	03 00                	add    eax,DWORD PTR [rax]
  200f53:	00 00                	add    BYTE PTR [rax],al
  200f55:	00 00                	add    BYTE PTR [rax],al
  200f57:	00 f9                	add    cl,bh
  200f59:	ff                   	(bad)  
  200f5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f5d:	00 00                	add    BYTE PTR [rax],al
  200f5f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fb8 <_GLOBAL_OFFSET_TABLE_>:
  200fb8:	c8 0d 20 00          	enter  0x200d,0x0
	...
  200fd0:	46 05 00 00 00 00    	rex.RX add eax,0x0
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x498>
   a:	74 75                	je     81 <_init-0x48f>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x489>
  19:	74 75                	je     90 <_init-0x480>
  1b:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 37                	and    BYTE PTR [rdi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al

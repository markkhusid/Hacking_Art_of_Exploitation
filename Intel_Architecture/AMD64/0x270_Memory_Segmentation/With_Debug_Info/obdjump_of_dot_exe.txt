
stack_example_C_AMD64_ggdb3:     file format elf64-x86-64
stack_example_C_AMD64_ggdb3
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000000560

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x00000000000008d0 memsz 0x00000000000008d0 flags r-x
    LOAD off    0x0000000000000db8 vaddr 0x0000000000200db8 paddr 0x0000000000200db8 align 2**21
         filesz 0x0000000000000258 memsz 0x0000000000000260 flags rw-
 DYNAMIC off    0x0000000000000dc8 vaddr 0x0000000000200dc8 paddr 0x0000000000200dc8 align 2**3
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000000764 vaddr 0x0000000000000764 paddr 0x0000000000000764 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000db8 vaddr 0x0000000000200db8 paddr 0x0000000000200db8 align 2**0
         filesz 0x0000000000000248 memsz 0x0000000000000248 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000000510
  FINI                 0x0000000000000754
  INIT_ARRAY           0x0000000000200db8
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200dc0
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000360
  SYMTAB               0x00000000000002b8
  STRSZ                0x0000000000000098
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000200fb8
  PLTRELSZ             0x0000000000000018
  PLTREL               0x0000000000000007
  JMPREL               0x00000000000004f8
  RELA                 0x0000000000000438
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x0000000000000408
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000003f8
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 03 GLIBC_2.2.5
    0x0d696914 0x00 02 GLIBC_2.4

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000a8  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000098  0000000000000360  0000000000000360  00000360  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000e  00000000000003f8  00000000000003f8  000003f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  0000000000000408  0000000000000408  00000408  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  0000000000000438  0000000000000438  00000438  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000018  00000000000004f8  00000000000004f8  000004f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000000510  0000000000000510  00000510  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000020  0000000000000530  0000000000000530  00000530  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  0000000000000550  0000000000000550  00000550  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000001f2  0000000000000560  0000000000000560  00000560  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  0000000000000754  0000000000000754  00000754  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000004  0000000000000760  0000000000000760  00000760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000044  0000000000000764  0000000000000764  00000764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000128  00000000000007a8  00000000000007a8  000007a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000200db8  0000000000200db8  00000db8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000200dc0  0000000000200dc0  00000dc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001f0  0000000000200dc8  0000000000200dc8  00000dc8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000048  0000000000200fb8  0000000000200fb8  00000fb8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000010  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000008  0000000000201010  0000000000201010  00001010  2**0
                  ALLOC
 24 .comment      0000002a  0000000000000000  0000000000000000  00001010  2**0
                  CONTENTS, READONLY
 25 .debug_aranges 00000030  0000000000000000  0000000000000000  0000103a  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_info   000000de  0000000000000000  0000000000000000  0000106a  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_abbrev 0000008f  0000000000000000  0000000000000000  00001148  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_line   0000007a  0000000000000000  0000000000000000  000011d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_str    00002721  0000000000000000  0000000000000000  00001251  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_macro  00000844  0000000000000000  0000000000000000  00003972  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000360 l    d  .dynstr	0000000000000000              .dynstr
00000000000003f8 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000408 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000438 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000004f8 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000000510 l    d  .init	0000000000000000              .init
0000000000000530 l    d  .plt	0000000000000000              .plt
0000000000000550 l    d  .plt.got	0000000000000000              .plt.got
0000000000000560 l    d  .text	0000000000000000              .text
0000000000000754 l    d  .fini	0000000000000000              .fini
0000000000000760 l    d  .rodata	0000000000000000              .rodata
0000000000000764 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000000007a8 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200db8 l    d  .init_array	0000000000000000              .init_array
0000000000200dc0 l    d  .fini_array	0000000000000000              .fini_array
0000000000200dc8 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fb8 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_macro	0000000000000000              .debug_macro
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000590 l     F .text	0000000000000000              deregister_tm_clones
00000000000005d0 l     F .text	0000000000000000              register_tm_clones
0000000000000620 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201010 l     O .bss	0000000000000001              completed.7696
0000000000200dc0 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000000660 l     F .text	0000000000000000              frame_dummy
0000000000200db8 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              stack_example.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000008cc l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000200dc0 l       .init_array	0000000000000000              __init_array_end
0000000000200dc8 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200db8 l       .init_array	0000000000000000              __init_array_start
0000000000000764 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fb8 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000000750 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data	0000000000000000              data_start
0000000000201010 g       .data	0000000000000000              _edata
0000000000000754 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000201000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000000760 g     O .rodata	0000000000000004              _IO_stdin_used
00000000000006e0 g     F .text	0000000000000065              __libc_csu_init
0000000000201018 g       .bss	0000000000000000              _end
0000000000000560 g     F .text	000000000000002b              _start
0000000000201010 g       .bss	0000000000000000              __bss_start
00000000000006af g     F .text	0000000000000024              main
0000000000201010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000000510 g     F .init	0000000000000000              _init
000000000000066a g     F .text	0000000000000045              test_function


Contents of section .interp:
 0238 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0248 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.ABI-tag:
 0254 04000000 10000000 01000000 474e5500  ............GNU.
 0264 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 0274 04000000 14000000 03000000 474e5500  ............GNU.
 0284 00f4237c 6f4111ad 537b93b5 fa7919e5  ..#|oA..S{...y..
 0294 948add1b                             ....            
Contents of section .gnu.hash:
 0298 01000000 01000000 01000000 00000000  ................
 02a8 00000000 00000000 00000000           ............    
Contents of section .dynsym:
 02b8 00000000 00000000 00000000 00000000  ................
 02c8 00000000 00000000 53000000 20000000  ........S... ...
 02d8 00000000 00000000 00000000 00000000  ................
 02e8 0b000000 12000000 00000000 00000000  ................
 02f8 00000000 00000000 2b000000 12000000  ........+.......
 0308 00000000 00000000 00000000 00000000  ................
 0318 6f000000 20000000 00000000 00000000  o... ...........
 0328 00000000 00000000 7e000000 20000000  ........~... ...
 0338 00000000 00000000 00000000 00000000  ................
 0348 1c000000 22000000 00000000 00000000  ...."...........
 0358 00000000 00000000                    ........        
Contents of section .dynstr:
 0360 006c6962 632e736f 2e36005f 5f737461  .libc.so.6.__sta
 0370 636b5f63 686b5f66 61696c00 5f5f6378  ck_chk_fail.__cx
 0380 615f6669 6e616c69 7a65005f 5f6c6962  a_finalize.__lib
 0390 635f7374 6172745f 6d61696e 00474c49  c_start_main.GLI
 03a0 42435f32 2e322e35 00474c49 42435f32  BC_2.2.5.GLIBC_2
 03b0 2e34005f 49544d5f 64657265 67697374  .4._ITM_deregist
 03c0 6572544d 436c6f6e 65546162 6c65005f  erTMCloneTable._
 03d0 5f676d6f 6e5f7374 6172745f 5f005f49  _gmon_start__._I
 03e0 544d5f72 65676973 74657254 4d436c6f  TM_registerTMClo
 03f0 6e655461 626c6500                    neTable.        
Contents of section .gnu.version:
 03f8 00000000 02000300 00000000 0300      ..............  
Contents of section .gnu.version_r:
 0408 01000200 01000000 10000000 00000000  ................
 0418 751a6909 00000300 3d000000 10000000  u.i.....=.......
 0428 1469690d 00000200 49000000 00000000  .ii.....I.......
Contents of section .rela.dyn:
 0438 b80d2000 00000000 08000000 00000000  .. .............
 0448 60060000 00000000 c00d2000 00000000  `......... .....
 0458 08000000 00000000 20060000 00000000  ........ .......
 0468 08102000 00000000 08000000 00000000  .. .............
 0478 08102000 00000000 d80f2000 00000000  .. ....... .....
 0488 06000000 01000000 00000000 00000000  ................
 0498 e00f2000 00000000 06000000 03000000  .. .............
 04a8 00000000 00000000 e80f2000 00000000  .......... .....
 04b8 06000000 04000000 00000000 00000000  ................
 04c8 f00f2000 00000000 06000000 05000000  .. .............
 04d8 00000000 00000000 f80f2000 00000000  .......... .....
 04e8 06000000 06000000 00000000 00000000  ................
Contents of section .rela.plt:
 04f8 d00f2000 00000000 07000000 02000000  .. .............
 0508 00000000 00000000                    ........        
Contents of section .init:
 0510 4883ec08 488b05cd 0a200048 85c07402  H...H.... .H..t.
 0520 ffd04883 c408c3                      ..H....         
Contents of section .plt:
 0530 ff358a0a 2000ff25 8c0a2000 0f1f4000  .5.. ..%.. ...@.
 0540 ff258a0a 20006800 000000e9 e0ffffff  .%.. .h.........
Contents of section .plt.got:
 0550 ff25a20a 20006690                    .%.. .f.        
Contents of section .text:
 0560 31ed4989 d15e4889 e24883e4 f050544c  1.I..^H..H...PTL
 0570 8d05da01 0000488d 0d630100 00488d3d  ......H..c...H.=
 0580 2b010000 ff15560a 2000f40f 1f440000  +.....V. ....D..
 0590 488d3d79 0a200055 488d0571 0a200048  H.=y. .UH..q. .H
 05a0 39f84889 e5741948 8b052a0a 20004885  9.H..t.H..*. .H.
 05b0 c0740d5d ffe0662e 0f1f8400 00000000  .t.]..f.........
 05c0 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 05d0 488d3d39 0a200048 8d35320a 20005548  H.=9. .H.52. .UH
 05e0 29fe4889 e548c1fe 034889f0 48c1e83f  ).H..H...H..H..?
 05f0 4801c648 d1fe7418 488b05f1 09200048  H..H..t.H.... .H
 0600 85c0740c 5dffe066 0f1f8400 00000000  ..t.]..f........
 0610 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 0620 803de909 20000075 2f48833d c7092000  .=.. ..u/H.=.. .
 0630 00554889 e5740c48 8b3dca09 2000e80d  .UH..t.H.=.. ...
 0640 ffffffe8 48ffffff c605c109 2000015d  ....H....... ..]
 0650 c30f1f80 00000000 f3c3660f 1f440000  ..........f..D..
 0660 554889e5 5de966ff ffff5548 89e54883  UH..].f...UH..H.
 0670 ec30897d dc8975d8 8955d489 4dd06448  .0.}..u..U..M.dH
 0680 8b042528 00000048 8945f831 c0c745e8  ..%(...H.E.1..E.
 0690 697a0000 c645ee41 90488b45 f8644833  iz...E.A.H.E.dH3
 06a0 04252800 00007405 e893feff ffc9c355  .%(...t........U
 06b0 4889e5b9 04000000 ba030000 00be0200  H...............
 06c0 0000bf01 000000e8 9effffff b8000000  ................
 06d0 005dc366 2e0f1f84 00000000 000f1f00  .].f............
 06e0 41574156 4989d741 5541544c 8d25c606  AWAVI..AUATL.%..
 06f0 20005548 8d2dc606 20005341 89fd4989   .UH.-.. .SA..I.
 0700 f64c29e5 4883ec08 48c1fd03 e8fffdff  .L).H...H.......
 0710 ff4885ed 742031db 0f1f8400 00000000  .H..t 1.........
 0720 4c89fa4c 89f64489 ef41ff14 dc4883c3  L..L..D..A...H..
 0730 014839dd 75ea4883 c4085b5d 415c415d  .H9.u.H...[]A\A]
 0740 415e415f c390662e 0f1f8400 00000000  A^A_..f.........
 0750 f3c3                                 ..              
Contents of section .fini:
 0754 4883ec08 4883c408 c3                 H...H....       
Contents of section .rodata:
 0760 01000200                             ....            
Contents of section .eh_frame_hdr:
 0764 011b033b 40000000 07000000 ccfdffff  ...;@...........
 0774 8c000000 ecfdffff b4000000 fcfdffff  ................
 0784 5c000000 06ffffff cc000000 4bffffff  \...........K...
 0794 ec000000 7cffffff 0c010000 ecffffff  ....|...........
 07a4 54010000                             T...            
Contents of section .eh_frame:
 07a8 14000000 00000000 017a5200 01781001  .........zR..x..
 07b8 1b0c0708 90010710 14000000 1c000000  ................
 07c8 98fdffff 2b000000 00000000 00000000  ....+...........
 07d8 14000000 00000000 017a5200 01781001  .........zR..x..
 07e8 1b0c0708 90010000 24000000 1c000000  ........$.......
 07f8 38fdffff 20000000 000e1046 0e184a0f  8... ......F..J.
 0808 0b770880 003f1a3b 2a332422 00000000  .w...?.;*3$"....
 0818 14000000 44000000 30fdffff 08000000  ....D...0.......
 0828 00000000 00000000 1c000000 5c000000  ............\...
 0838 32feffff 45000000 00410e10 8602430d  2...E....A....C.
 0848 0602400c 07080000 1c000000 7c000000  ..@.........|...
 0858 57feffff 24000000 00410e10 8602430d  W...$....A....C.
 0868 065f0c07 08000000 44000000 9c000000  ._......D.......
 0878 68feffff 65000000 00420e10 8f02420e  h...e....B....B.
 0888 188e0345 0e208d04 420e288c 05480e30  ...E. ..B.(..H.0
 0898 8606480e 3883074d 0e40720e 38410e30  ..H.8..M.@r.8A.0
 08a8 410e2842 0e20420e 18420e10 420e0800  A.(B. B..B..B...
 08b8 10000000 e4000000 90feffff 02000000  ................
 08c8 00000000 00000000                    ........        
Contents of section .init_array:
 200db8 60060000 00000000                    `.......        
Contents of section .fini_array:
 200dc0 20060000 00000000                     .......        
Contents of section .dynamic:
 200dc8 01000000 00000000 01000000 00000000  ................
 200dd8 0c000000 00000000 10050000 00000000  ................
 200de8 0d000000 00000000 54070000 00000000  ........T.......
 200df8 19000000 00000000 b80d2000 00000000  .......... .....
 200e08 1b000000 00000000 08000000 00000000  ................
 200e18 1a000000 00000000 c00d2000 00000000  .......... .....
 200e28 1c000000 00000000 08000000 00000000  ................
 200e38 f5feff6f 00000000 98020000 00000000  ...o............
 200e48 05000000 00000000 60030000 00000000  ........`.......
 200e58 06000000 00000000 b8020000 00000000  ................
 200e68 0a000000 00000000 98000000 00000000  ................
 200e78 0b000000 00000000 18000000 00000000  ................
 200e88 15000000 00000000 00000000 00000000  ................
 200e98 03000000 00000000 b80f2000 00000000  .......... .....
 200ea8 02000000 00000000 18000000 00000000  ................
 200eb8 14000000 00000000 07000000 00000000  ................
 200ec8 17000000 00000000 f8040000 00000000  ................
 200ed8 07000000 00000000 38040000 00000000  ........8.......
 200ee8 08000000 00000000 c0000000 00000000  ................
 200ef8 09000000 00000000 18000000 00000000  ................
 200f08 1e000000 00000000 08000000 00000000  ................
 200f18 fbffff6f 00000000 01000008 00000000  ...o............
 200f28 feffff6f 00000000 08040000 00000000  ...o............
 200f38 ffffff6f 00000000 01000000 00000000  ...o............
 200f48 f0ffff6f 00000000 f8030000 00000000  ...o............
 200f58 f9ffff6f 00000000 03000000 00000000  ...o............
 200f68 00000000 00000000 00000000 00000000  ................
 200f78 00000000 00000000 00000000 00000000  ................
 200f88 00000000 00000000 00000000 00000000  ................
 200f98 00000000 00000000 00000000 00000000  ................
 200fa8 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 200fb8 c80d2000 00000000 00000000 00000000  .. .............
 200fc8 00000000 00000000 46050000 00000000  ........F.......
 200fd8 00000000 00000000 00000000 00000000  ................
 200fe8 00000000 00000000 00000000 00000000  ................
 200ff8 00000000 00000000                    ........        
Contents of section .data:
 201000 00000000 00000000 08102000 00000000  .......... .....
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20372e33  GCC: (Ubuntu 7.3
 0010 2e302d32 37756275 6e747531 7e31382e  .0-27ubuntu1~18.
 0020 30342920 372e332e 3000               04) 7.3.0.      
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 6a060000 00000000 69000000 00000000  j.......i.......
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_info:
 0000 da000000 04000000 00000801 e1140000  ................
 0010 0c712000 00c30300 006a0600 00000000  .q ......j......
 0020 00690000 00000000 00000000 00000000  .i..............
 0030 00023f26 00000109 4e000000 af060000  ..?&....N.......
 0040 00000000 24000000 00000000 019c0304  ....$...........
 0050 05696e74 00047025 00000101 6a060000  .int..p%....j...
 0060 00000000 45000000 00000000 019cbf00  ....E...........
 0070 00000561 0001014e 00000002 914c0562  ...a...N.....L.b
 0080 0001014e 00000002 91480563 0001014e  ...N.....H.c...N
 0090 00000002 91440564 0001014e 00000002  .....D.d...N....
 00a0 914006af 1c000001 024e0000 00029158  .@.......N.....X
 00b0 066a2000 000103bf 00000002 915e0007  .j ..........^..
 00c0 d6000000 cf000000 08cf0000 00090009  ................
 00d0 08077318 00000901 06a71600 0000      ..s...........  
Contents of section .debug_abbrev:
 0000 01110125 0e130b03 0e1b0e11 01120710  ...%............
 0010 17994217 0000022e 003f1903 0e3a0b3b  ..B......?...:.;
 0020 0b491311 01120740 18964219 00000324  .I.....@..B....$
 0030 000b0b3e 0b030800 00042e01 3f19030e  ...>........?...
 0040 3a0b3b0b 27191101 12074018 96421901  :.;.'.....@..B..
 0050 13000005 05000308 3a0b3b0b 49130218  ........:.;.I...
 0060 00000634 00030e3a 0b3b0b49 13021800  ...4...:.;.I....
 0070 00070101 49130113 00000821 0049132f  ....I......!.I./
 0080 0b000009 24000b0b 3e0b030e 000000    ....$...>...... 
Contents of section .debug_line:
 0000 76000000 02005500 00000101 fb0e0d00  v.....U.........
 0010 01010101 00000001 0000012f 7573722f  .........../usr/
 0020 7838365f 36342d6c 696e7578 2d676e75  x86_64-linux-gnu
 0030 2f696e63 6c756465 00007374 61636b5f  /include..stack_
 0040 6578616d 706c652e 63000000 00737464  example.c....std
 0050 632d7072 65646566 2e680001 00000000  c-predef.h......
 0060 09026a06 00000000 00000108 3ce8754b  ..j.........<.uK
 0070 08684b08 c9020200 0101               .hK.......      
Contents of section .debug_str:
 0000 5f5f5549 4e545f4c 45415354 385f4d41  __UINT_LEAST8_MA
 0010 585f5f20 30786666 005f5f46 4c543634  X__ 0xff.__FLT64
 0020 5f484153 5f44454e 4f524d5f 5f203100  _HAS_DENORM__ 1.
 0030 5f5f464c 54363458 5f4d414e 545f4449  __FLT64X_MANT_DI
 0040 475f5f20 3634005f 5f464c54 33325f44  G__ 64.__FLT32_D
 0050 49475f5f 2036005f 5f464c54 3634585f  IG__ 6.__FLT64X_
 0060 4d494e5f 4558505f 5f20282d 31363338  MIN_EXP__ (-1638
 0070 3129005f 5f55494e 545f4c45 41535433  1).__UINT_LEAST3
 0080 325f4d41 585f5f20 30786666 66666666  2_MAX__ 0xffffff
 0090 66665500 5f5f5349 5a454f46 5f53495a  ffU.__SIZEOF_SIZ
 00a0 455f545f 5f203800 5f5f4743 435f4154  E_T__ 8.__GCC_AT
 00b0 4f4d4943 5f4c4f4e 475f4c4f 434b5f46  OMIC_LONG_LOCK_F
 00c0 52454520 32005f5f 464c5433 32585f48  REE 2.__FLT32X_H
 00d0 41535f44 454e4f52 4d5f5f20 31005f5f  AS_DENORM__ 1.__
 00e0 756e6978 2031005f 5f535444 435f5645  unix 1.__STDC_VE
 00f0 5253494f 4e5f5f20 32303131 31324c00  RSION__ 201112L.
 0100 5f5f5349 5a454f46 5f504f49 4e544552  __SIZEOF_POINTER
 0110 5f5f2038 005f5f57 43484152 5f574944  __ 8.__WCHAR_WID
 0120 54485f5f 20333200 5f5f4445 43313238  TH__ 32.__DEC128
 0130 5f4d494e 5f455850 5f5f2028 2d363134  _MIN_EXP__ (-614
 0140 3229005f 5f636f64 655f6d6f 64656c5f  2).__code_model_
 0150 736d616c 6c5f5f20 31005f5f 44454336  small__ 1.__DEC6
 0160 345f4d41 4e545f44 49475f5f 20313600  4_MANT_DIG__ 16.
 0170 5f5f4445 4336345f 4d494e5f 4558505f  __DEC64_MIN_EXP_
 0180 5f20282d 33383229 005f5f44 424c5f4d  _ (-382).__DBL_M
 0190 494e5f5f 20282864 6f75626c 6529322e  IN__ ((double)2.
 01a0 32323530 37333835 38353037 32303133  2250738585072013
 01b0 38333039 30323332 37313733 33323430  8309023271733240
 01c0 34303665 2d333038 4c29005f 5f55494e  406e-308L).__UIN
 01d0 545f4641 53543634 5f4d4158 5f5f2030  T_FAST64_MAX__ 0
 01e0 78666666 66666666 66666666 66666666  xfffffffffffffff
 01f0 66554c00 5f5f756e 69785f5f 2031005f  fUL.__unix__ 1._
 0200 5f55494e 54505452 5f545950 455f5f20  _UINTPTR_TYPE__ 
 0210 6c6f6e67 20756e73 69676e65 6420696e  long unsigned in
 0220 74005f5f 464c5433 32585f4d 41585f45  t.__FLT32X_MAX_E
 0230 58505f5f 20313032 34005f5f 4c44424c  XP__ 1024.__LDBL
 0240 5f4d4158 5f31305f 4558505f 5f203439  _MAX_10_EXP__ 49
 0250 3332005f 5f444543 33325f4d 494e5f5f  32.__DEC32_MIN__
 0260 2031452d 39354446 005f5f46 4c543634   1E-95DF.__FLT64
 0270 5f4d4158 5f5f2031 2e373937 36393331  _MAX__ 1.7976931
 0280 33343836 32333135 37303831 34353237  3486231570814527
 0290 34323337 33313730 34333537 652b3330  423731704357e+30
 02a0 38463634 005f5f46 4c543332 585f4841  8F64.__FLT32X_HA
 02b0 535f5155 4945545f 4e414e5f 5f203100  S_QUIET_NAN__ 1.
 02c0 5f5f5349 5a454f46 5f57494e 545f545f  __SIZEOF_WINT_T_
 02d0 5f203400 5f5f464c 54313238 5f484153  _ 4.__FLT128_HAS
 02e0 5f494e46 494e4954 595f5f20 31005f5f  _INFINITY__ 1.__
 02f0 44424c5f 4d41585f 31305f45 58505f5f  DBL_MAX_10_EXP__
 0300 20333038 005f5f46 4c543634 5f4d494e   308.__FLT64_MIN
 0310 5f5f2032 2e323235 30373338 35383530  __ 2.22507385850
 0320 37323031 33383330 39303233 32373137  7201383090232717
 0330 33333234 30343036 652d3330 38463634  33240406e-308F64
 0340 005f5f61 6d643634 2031005f 5f4c4442  .__amd64 1.__LDB
 0350 4c5f4d49 4e5f5f20 332e3336 32313033  L_MIN__ 3.362103
 0360 31343331 31323039 33353036 32363236  1431120935062626
 0370 37373831 37333231 37353236 30652d34  7781732175260e-4
 0380 3933324c 005f5f49 4e545f4c 45415354  932L.__INT_LEAST
 0390 33325f57 49445448 5f5f2033 32005f5f  32_WIDTH__ 32.__
 03a0 55494e54 5054525f 4d41585f 5f203078  UINTPTR_MAX__ 0x
 03b0 66666666 66666666 66666666 66666666  ffffffffffffffff
 03c0 554c002f 686f6d65 2f756275 6e74752f  UL./home/ubuntu/
 03d0 456e6769 6e656572 696e672f 50726f67  Engineering/Prog
 03e0 72616d6d 696e672f 4861636b 696e675f  ramming/Hacking_
 03f0 4172745f 6f665f45 78706c6f 69746174  Art_of_Exploitat
 0400 696f6e2f 496e7465 6c5f4172 63686974  ion/Intel_Archit
 0410 65637475 72652f41 4d443634 2f307832  ecture/AMD64/0x2
 0420 37305f4d 656d6f72 795f5365 676d656e  70_Memory_Segmen
 0430 74617469 6f6e2f57 6974685f 44656275  tation/With_Debu
 0440 675f496e 666f005f 5f4c5036 345f5f20  g_Info.__LP64__ 
 0450 31005f5f 55494e54 36345f43 28632920  1.__UINT64_C(c) 
 0460 63202323 20554c00 5f5f4442 4c5f4841  c ## UL.__DBL_HA
 0470 535f494e 46494e49 54595f5f 2031005f  S_INFINITY__ 1._
 0480 5f464c54 3132385f 4841535f 51554945  _FLT128_HAS_QUIE
 0490 545f4e41 4e5f5f20 31005f5f 474e5543  T_NAN__ 1.__GNUC
 04a0 5f5f2037 005f5f46 4c543332 585f4d49  __ 7.__FLT32X_MI
 04b0 4e5f3130 5f455850 5f5f2028 2d333037  N_10_EXP__ (-307
 04c0 29005f5f 494e5433 325f4328 63292063  ).__INT32_C(c) c
 04d0 005f5f46 4c543332 585f4550 53494c4f  .__FLT32X_EPSILO
 04e0 4e5f5f20 322e3232 30343436 30343932  N__ 2.2204460492
 04f0 35303331 33303830 38343732 36333333  5031308084726333
 0500 36313831 36343036 32652d31 36463332  618164062e-16F32
 0510 78005f5f 464c5431 32385f45 5053494c  x.__FLT128_EPSIL
 0520 4f4e5f5f 20312e39 32353932 39393434  ON__ 1.925929944
 0530 33383732 33353835 33303535 39373739  3872358530559779
 0540 34323538 34393237 3332652d 33344631  4258492732e-34F1
 0550 3238005f 5f464c54 3634585f 4841535f  28.__FLT64X_HAS_
 0560 44454e4f 524d5f5f 2031005f 5f494e54  DENORM__ 1.__INT
 0570 5054525f 57494454 485f5f20 3634005f  PTR_WIDTH__ 64._
 0580 5f535444 435f484f 53544544 5f5f2031  _STDC_HOSTED__ 1
 0590 005f5f57 494e545f 4d494e5f 5f203055  .__WINT_MIN__ 0U
 05a0 005f5f46 4c545f45 56414c5f 4d455448  .__FLT_EVAL_METH
 05b0 4f445f54 535f3138 3636315f 335f5f20  OD_TS_18661_3__ 
 05c0 30005f5f 4c44424c 5f44454e 4f524d5f  0.__LDBL_DENORM_
 05d0 4d494e5f 5f20332e 36343531 39393533  MIN__ 3.64519953
 05e0 31383832 34373436 30323532 38343035  1882474602528405
 05f0 39333336 31393431 39383265 2d343935  93361941982e-495
 0600 314c005f 5f44424c 5f455053 494c4f4e  1L.__DBL_EPSILON
 0610 5f5f2028 28646f75 626c6529 322e3232  __ ((double)2.22
 0620 30343436 30343932 35303331 33303830  0446049250313080
 0630 38343732 36333333 36313831 36343036  8472633361816406
 0640 32652d31 364c2900 5f5f494e 545f4c45  2e-16L).__INT_LE
 0650 41535438 5f574944 54485f5f 2038005f  AST8_WIDTH__ 8._
 0660 5f44424c 5f444947 5f5f2031 35005f5f  _DBL_DIG__ 15.__
 0670 4743435f 41544f4d 49435f57 43484152  GCC_ATOMIC_WCHAR
 0680 5f545f4c 4f434b5f 46524545 2032005f  _T_LOCK_FREE 2._
 0690 5f57494e 545f4d41 585f5f20 30786666  _WINT_MAX__ 0xff
 06a0 66666666 66665500 5f5f4658 53525f5f  ffffffU.__FXSR__
 06b0 2031005f 5f464c54 36345f48 41535f51   1.__FLT64_HAS_Q
 06c0 55494554 5f4e414e 5f5f2031 005f5f44  UIET_NAN__ 1.__D
 06d0 45433634 5f535542 4e4f524d 414c5f4d  EC64_SUBNORMAL_M
 06e0 494e5f5f 20302e30 30303030 30303030  IN__ 0.000000000
 06f0 30303030 3031452d 33383344 44005f5f  000001E-383DD.__
 0700 53434841 525f5749 4454485f 5f203800  SCHAR_WIDTH__ 8.
 0710 5f5f4c44 424c5f45 5053494c 4f4e5f5f  __LDBL_EPSILON__
 0720 20312e30 38343230 32313732 34383535   1.0842021724855
 0730 30343433 34303037 34353238 30303836  0443400745280086
 0740 39393431 3731652d 31394c00 5f5f4442  994171e-19L.__DB
 0750 4c5f4d41 4e545f44 49475f5f 20353300  L_MANT_DIG__ 53.
 0760 5f5f464c 5433325f 45505349 4c4f4e5f  __FLT32_EPSILON_
 0770 5f20312e 31393230 39323839 35353037  _ 1.192092895507
 0780 38313235 30303030 30303030 30303030  8125000000000000
 0790 30303030 30303065 2d374633 32005f5f  0000000e-7F32.__
 07a0 464c5433 325f4445 4e4f524d 5f4d494e  FLT32_DENORM_MIN
 07b0 5f5f2031 2e343031 32393834 36343332  __ 1.40129846432
 07c0 34383137 30373039 32333732 39353833  4817070923729583
 07d0 32383939 31363133 652d3435 46333200  28991613e-45F32.
 07e0 5f5f494e 545f4641 5354385f 4d41585f  __INT_FAST8_MAX_
 07f0 5f203078 3766005f 5f55494e 5433325f  _ 0x7f.__UINT32_
 0800 54595045 5f5f2075 6e736967 6e656420  TYPE__ unsigned 
 0810 696e7400 5f5f464c 5436345f 45505349  int.__FLT64_EPSI
 0820 4c4f4e5f 5f20322e 32323034 34363034  LON__ 2.22044604
 0830 39323530 33313330 38303834 37323633  9250313080847263
 0840 33333631 38313634 30363265 2d313646  33618164062e-16F
 0850 3634005f 5f4c4442 4c5f4d49 4e5f3130  64.__LDBL_MIN_10
 0860 5f455850 5f5f2028 2d343933 3129005f  _EXP__ (-4931)._
 0870 5f534852 545f5749 4454485f 5f203136  _SHRT_WIDTH__ 16
 0880 005f5f44 45433332 5f4d4158 5f455850  .__DEC32_MAX_EXP
 0890 5f5f2039 37005f5f 494e5433 325f5459  __ 97.__INT32_TY
 08a0 50455f5f 20696e74 005f5f53 49475f41  PE__ int.__SIG_A
 08b0 544f4d49 435f5459 50455f5f 20696e74  TOMIC_TYPE__ int
 08c0 005f5f44 45433634 5f4d4158 5f455850  .__DEC64_MAX_EXP
 08d0 5f5f2033 3835005f 5f44424c 5f4d494e  __ 385.__DBL_MIN
 08e0 5f455850 5f5f2028 2d313032 3129005f  _EXP__ (-1021)._
 08f0 5f706963 5f5f2032 005f4c50 36342031  _pic__ 2._LP64 1
 0900 005f5f49 4e545f4c 45415354 31365f57  .__INT_LEAST16_W
 0910 49445448 5f5f2031 36005f5f 464c5433  IDTH__ 16.__FLT3
 0920 325f4841 535f494e 46494e49 54595f5f  2_HAS_INFINITY__
 0930 2031005f 5f4c4442 4c5f4841 535f494e   1.__LDBL_HAS_IN
 0940 46494e49 54595f5f 2031005f 5f53495a  FINITY__ 1.__SIZ
 0950 454f465f 4c4f4e47 5f5f2038 005f5f46  EOF_LONG__ 8.__F
 0960 4c545f48 41535f44 454e4f52 4d5f5f20  LT_HAS_DENORM__ 
 0970 31005f5f 464c5431 32385f4d 494e5f45  1.__FLT128_MIN_E
 0980 58505f5f 20282d31 36333831 29005f5f  XP__ (-16381).__
 0990 5353455f 4d415448 5f5f2031 005f5f55  SSE_MATH__ 1.__U
 09a0 494e5431 365f4d41 585f5f20 30786666  INT16_MAX__ 0xff
 09b0 6666005f 5f464c54 3634585f 4841535f  ff.__FLT64X_HAS_
 09c0 51554945 545f4e41 4e5f5f20 31005f5f  QUIET_NAN__ 1.__
 09d0 55494e54 5f464153 5436345f 54595045  UINT_FAST64_TYPE
 09e0 5f5f206c 6f6e6720 756e7369 676e6564  __ long unsigned
 09f0 20696e74 005f5f42 5954455f 4f524445   int.__BYTE_ORDE
 0a00 525f5f20 5f5f4f52 4445525f 4c495454  R__ __ORDER_LITT
 0a10 4c455f45 4e444941 4e5f5f00 5f5f454c  LE_ENDIAN__.__EL
 0a20 465f5f20 31005f5f 464c5433 32585f4d  F__ 1.__FLT32X_M
 0a30 494e5f45 58505f5f 20282d31 30323129  IN_EXP__ (-1021)
 0a40 005f5f46 4c4f4154 5f574f52 445f4f52  .__FLOAT_WORD_OR
 0a50 4445525f 5f205f5f 4f524445 525f4c49  DER__ __ORDER_LI
 0a60 54544c45 5f454e44 49414e5f 5f005f5f  TTLE_ENDIAN__.__
 0a70 55494e54 5f4c4541 53543136 5f4d4158  UINT_LEAST16_MAX
 0a80 5f5f2030 78666666 66005f5f 50524147  __ 0xffff.__PRAG
 0a90 4d415f52 45444546 494e455f 4558544e  MA_REDEFINE_EXTN
 0aa0 414d4520 31005f5f 494e545f 4c454153  AME 1.__INT_LEAS
 0ab0 5431365f 54595045 5f5f2073 686f7274  T16_TYPE__ short
 0ac0 20696e74 005f5f46 4c543332 5f484153   int.__FLT32_HAS
 0ad0 5f515549 45545f4e 414e5f5f 2031005f  _QUIET_NAN__ 1._
 0ae0 5f464c54 5f4d4158 5f455850 5f5f2031  _FLT_MAX_EXP__ 1
 0af0 3238005f 5f686173 5f696e63 6c756465  28.__has_include
 0b00 5f6e6578 74285354 5229205f 5f686173  _next(STR) __has
 0b10 5f696e63 6c756465 5f6e6578 745f5f28  _include_next__(
 0b20 53545229 005f5f49 4e545054 525f4d41  STR).__INTPTR_MA
 0b30 585f5f20 30783766 66666666 66666666  X__ 0x7fffffffff
 0b40 66666666 66664c00 5f5f676e 755f6c69  ffffffL.__gnu_li
 0b50 6e75785f 5f203100 5f5f464c 54333258  nux__ 1.__FLT32X
 0b60 5f4d4158 5f31305f 4558505f 5f203330  _MAX_10_EXP__ 30
 0b70 38005f5f 464c545f 44454e4f 524d5f4d  8.__FLT_DENORM_M
 0b80 494e5f5f 20312e34 30313239 38343634  IN__ 1.401298464
 0b90 33323438 31373037 30393233 37323935  3248170709237295
 0ba0 38333238 39393136 3133652d 34354600  8328991613e-45F.
 0bb0 5f5f4c44 424c5f48 41535f51 55494554  __LDBL_HAS_QUIET
 0bc0 5f4e414e 5f5f2031 005f5f53 495a454f  _NAN__ 1.__SIZEO
 0bd0 465f444f 55424c45 5f5f2038 005f5f56  F_DOUBLE__ 8.__V
 0be0 45525349 4f4e5f5f 2022372e 332e3022  ERSION__ "7.3.0"
 0bf0 005f5f46 4c543332 585f4d41 585f5f20  .__FLT32X_MAX__ 
 0c00 312e3739 37363933 31333438 36323331  1.79769313486231
 0c10 35373038 31343532 37343233 37333137  5708145274237317
 0c20 30343335 37652b33 30384633 3278005f  04357e+308F32x._
 0c30 5f55494e 54385f4d 41585f5f 20307866  _UINT8_MAX__ 0xf
 0c40 66005f5f 57494e54 5f574944 54485f5f  f.__WINT_WIDTH__
 0c50 20333200 5f5f5549 4e543634 5f545950   32.__UINT64_TYP
 0c60 455f5f20 6c6f6e67 20756e73 69676e65  E__ long unsigne
 0c70 6420696e 74005f5f 494e545f 4c454153  d int.__INT_LEAS
 0c80 5433325f 54595045 5f5f2069 6e74005f  T32_TYPE__ int._
 0c90 5f464c54 33325f4d 41585f45 58505f5f  _FLT32_MAX_EXP__
 0ca0 20313238 005f5f50 49435f5f 2032005f   128.__PIC__ 2._
 0cb0 5f464c54 36345f4d 41585f45 58505f5f  _FLT64_MAX_EXP__
 0cc0 20313032 34005f5f 53534532 5f5f2031   1024.__SSE2__ 1
 0cd0 005f5f46 4c543634 5f4d494e 5f455850  .__FLT64_MIN_EXP
 0ce0 5f5f2028 2d313032 3129005f 5f494e54  __ (-1021).__INT
 0cf0 4d41585f 43286329 20632023 23204c00  MAX_C(c) c ## L.
 0d00 5f5f4743 435f4154 4f4d4943 5f434841  __GCC_ATOMIC_CHA
 0d10 5233325f 545f4c4f 434b5f46 52454520  R32_T_LOCK_FREE 
 0d20 32005f5f 53495a45 4f465f49 4e543132  2.__SIZEOF_INT12
 0d30 385f5f20 3136005f 5f505452 44494646  8__ 16.__PTRDIFF
 0d40 5f545950 455f5f20 6c6f6e67 20696e74  _TYPE__ long int
 0d50 005f5f46 4c543332 5f4d4158 5f5f2033  .__FLT32_MAX__ 3
 0d60 2e343032 38323334 36363338 35323838  .402823466385288
 0d70 35393831 31373034 31383334 38343531  5981170418348451
 0d80 36393235 652b3338 46333200 5f5f494e  6925e+38F32.__IN
 0d90 54385f43 28632920 63005f5f 53495a45  T8_C(c) c.__SIZE
 0da0 4f465f4c 4f4e475f 4c4f4e47 5f5f2038  OF_LONG_LONG__ 8
 0db0 005f5f46 4c545f44 49475f5f 2036005f  .__FLT_DIG__ 6._
 0dc0 5f44424c 5f44454e 4f524d5f 4d494e5f  _DBL_DENORM_MIN_
 0dd0 5f202828 646f7562 6c652934 2e393430  _ ((double)4.940
 0de0 36353634 35383431 32343635 34343137  6564584124654417
 0df0 36353638 37393238 36383232 31333732  6568792868221372
 0e00 652d3332 344c2900 5f5f494e 5436345f  e-324L).__INT64_
 0e10 43286329 20632023 23204c00 5f5f5549  C(c) c ## L.__UI
 0e20 4e545f46 41535431 365f4d41 585f5f20  NT_FAST16_MAX__ 
 0e30 30786666 66666666 66666666 66666666  0xffffffffffffff
 0e40 6666554c 005f5f46 4c545f4d 41585f31  ffUL.__FLT_MAX_1
 0e50 305f4558 505f5f20 3338005f 5f4e4f5f  0_EXP__ 38.__NO_
 0e60 494e4c49 4e455f5f 2031005f 5f55494e  INLINE__ 1.__UIN
 0e70 545f4c45 41535436 345f5459 50455f5f  T_LEAST64_TYPE__
 0e80 206c6f6e 6720756e 7369676e 65642069   long unsigned i
 0e90 6e74005f 5f53495a 454f465f 4c4f4e47  nt.__SIZEOF_LONG
 0ea0 5f444f55 424c455f 5f203136 005f5f53  _DOUBLE__ 16.__S
 0eb0 5444435f 49534f5f 31303634 365f5f20  TDC_ISO_10646__ 
 0ec0 32303137 30364c00 5f5f5054 52444946  201706L.__PTRDIF
 0ed0 465f5749 4454485f 5f203634 005f5f53  F_WIDTH__ 64.__S
 0ee0 43484152 5f4d4158 5f5f2030 78376600  CHAR_MAX__ 0x7f.
 0ef0 5f5f464c 5433325f 4d494e5f 5f20312e  __FLT32_MIN__ 1.
 0f00 31373534 39343335 30383232 32383735  1754943508222875
 0f10 30373936 38373336 35333732 32323234  0796873653722224
 0f20 35363865 2d333846 3332005f 5f494e54  568e-38F32.__INT
 0f30 5f4c4541 53543634 5f545950 455f5f20  _LEAST64_TYPE__ 
 0f40 6c6f6e67 20696e74 005f5f47 4e55435f  long int.__GNUC_
 0f50 4d494e4f 525f5f20 33005f5f 464c5436  MINOR__ 3.__FLT6
 0f60 34585f4d 494e5f5f 20332e33 36323130  4X_MIN__ 3.36210
 0f70 33313433 31313230 39333530 36323632  3143112093506262
 0f80 36373738 31373332 31373532 3630652d  67781732175260e-
 0f90 34393332 46363478 005f5f44 45435f45  4932F64x.__DEC_E
 0fa0 56414c5f 4d455448 4f445f5f 2032005f  VAL_METHOD__ 2._
 0fb0 5f444543 33325f4d 41585f5f 20392e39  _DEC32_MAX__ 9.9
 0fc0 39393939 39453936 4446005f 5f4c4f4e  99999E96DF.__LON
 0fd0 475f4c4f 4e475f4d 41585f5f 20307837  G_LONG_MAX__ 0x7
 0fe0 66666666 66666666 66666666 6666664c  fffffffffffffffL
 0ff0 4c005f5f 4743435f 41544f4d 49435f42  L.__GCC_ATOMIC_B
 1000 4f4f4c5f 4c4f434b 5f465245 45203200  OOL_LOCK_FREE 2.
 1010 5f5f5349 5a455f54 5950455f 5f206c6f  __SIZE_TYPE__ lo
 1020 6e672075 6e736967 6e656420 696e7400  ng unsigned int.
 1030 5f5f4c44 424c5f4d 494e5f45 58505f5f  __LDBL_MIN_EXP__
 1040 20282d31 36333831 29005f5f 464c5433   (-16381).__FLT3
 1050 325f4d41 4e545f44 49475f5f 20323400  2_MANT_DIG__ 24.
 1060 5f5f4743 435f4945 435f3535 395f434f  __GCC_IEC_559_CO
 1070 4d504c45 58203200 5f5f464c 545f4841  MPLEX 2.__FLT_HA
 1080 535f5155 4945545f 4e414e5f 5f203100  S_QUIET_NAN__ 1.
 1090 5f5f5354 44435f49 45435f35 35395f43  __STDC_IEC_559_C
 10a0 4f4d504c 45585f5f 2031005f 5f464c54  OMPLEX__ 1.__FLT
 10b0 5f4d494e 5f455850 5f5f2028 2d313235  _MIN_EXP__ (-125
 10c0 29005f5f 6c696e75 785f5f20 31005f5f  ).__linux__ 1.__
 10d0 464c5433 32585f4d 494e5f5f 20322e32  FLT32X_MIN__ 2.2
 10e0 32353037 33383538 35303732 30313338  2507385850720138
 10f0 33303930 32333237 31373333 32343034  3090232717332404
 1100 3036652d 33303846 33327800 5f5f5349  06e-308F32x.__SI
 1110 5a455f4d 41585f5f 20307866 66666666  ZE_MAX__ 0xfffff
 1120 66666666 66666666 66666655 4c005f5f  fffffffffffUL.__
 1130 55494e54 5f4c4541 53543634 5f4d4158  UINT_LEAST64_MAX
 1140 5f5f2030 78666666 66666666 66666666  __ 0xfffffffffff
 1150 66666666 66554c00 5f5f494e 545f4641  fffffUL.__INT_FA
 1160 53543634 5f4d4158 5f5f2030 78376666  ST64_MAX__ 0x7ff
 1170 66666666 66666666 66666666 664c005f  fffffffffffffL._
 1180 5f535345 5f5f2031 005f5f4f 52444552  _SSE__ 1.__ORDER
 1190 5f424947 5f454e44 49414e5f 5f203433  _BIG_ENDIAN__ 43
 11a0 3231005f 5f494e54 5054525f 54595045  21.__INTPTR_TYPE
 11b0 5f5f206c 6f6e6720 696e7400 5f5f4c4f  __ long int.__LO
 11c0 4e475f4d 41585f5f 20307837 66666666  NG_MAX__ 0x7ffff
 11d0 66666666 66666666 6666664c 005f5f49  fffffffffffL.__I
 11e0 4e545f46 41535433 325f5749 4454485f  NT_FAST32_WIDTH_
 11f0 5f203634 005f5f46 4c543634 585f4445  _ 64.__FLT64X_DE
 1200 4e4f524d 5f4d494e 5f5f2033 2e363435  NORM_MIN__ 3.645
 1210 31393935 33313838 32343734 36303235  1995318824746025
 1220 32383430 35393333 36313934 31393832  2840593361941982
 1230 652d3439 35314636 3478005f 5f464c54  e-4951F64x.__FLT
 1240 33325f4d 41585f31 305f4558 505f5f20  32_MAX_10_EXP__ 
 1250 3338005f 5f4c4442 4c5f4d41 585f5f20  38.__LDBL_MAX__ 
 1260 312e3138 39373331 34393533 35373233  1.18973149535723
 1270 31373635 30323132 36333835 33303330  1765021263853030
 1280 39373032 31652b34 3933324c 005f5f53  97021e+4932L.__S
 1290 495a454f 465f5348 4f52545f 5f203200  IZEOF_SHORT__ 2.
 12a0 5f5f464c 545f4d49 4e5f5f20 312e3137  __FLT_MIN__ 1.17
 12b0 35343934 33353038 32323238 37353037  5494350822287507
 12c0 39363837 33363533 37323232 32343536  9687365372222456
 12d0 38652d33 3846005f 5f474343 5f41544f  8e-38F.__GCC_ATO
 12e0 4d49435f 494e545f 4c4f434b 5f465245  MIC_INT_LOCK_FRE
 12f0 45203200 5f5f464c 5436345f 4841535f  E 2.__FLT64_HAS_
 1300 494e4649 4e495459 5f5f2031 005f5f49  INFINITY__ 1.__I
 1310 4e543136 5f432863 29206300 5f5f464c  NT16_C(c) c.__FL
 1320 54363458 5f484153 5f494e46 494e4954  T64X_HAS_INFINIT
 1330 595f5f20 31005f5f 44454349 4d414c5f  Y__ 1.__DECIMAL_
 1340 4449475f 5f203231 005f5f49 4e545f46  DIG__ 21.__INT_F
 1350 41535436 345f5459 50455f5f 206c6f6e  AST64_TYPE__ lon
 1360 6720696e 74005f5f 44454336 345f4d41  g int.__DEC64_MA
 1370 585f5f20 392e3939 39393939 39393939  X__ 9.9999999999
 1380 39393939 39453338 34444400 5f5f4445  99999E384DD.__DE
 1390 4333325f 5355424e 4f524d41 4c5f4d49  C32_SUBNORMAL_MI
 13a0 4e5f5f20 302e3030 30303031 452d3935  N__ 0.000001E-95
 13b0 4446005f 5f464c54 3132385f 4d494e5f  DF.__FLT128_MIN_
 13c0 31305f45 58505f5f 20282d34 39333129  10_EXP__ (-4931)
 13d0 005f5f49 4e545f4d 41585f5f 20307837  .__INT_MAX__ 0x7
 13e0 66666666 66666600 5f5f464c 54313238  fffffff.__FLT128
 13f0 5f484153 5f44454e 4f524d5f 5f203100  _HAS_DENORM__ 1.
 1400 5f5f4743 435f4154 4f4d4943 5f4c4c4f  __GCC_ATOMIC_LLO
 1410 4e475f4c 4f434b5f 46524545 2032005f  NG_LOCK_FREE 2._
 1420 5f464c54 3132385f 4d494e5f 5f20332e  _FLT128_MIN__ 3.
 1430 33363231 30333134 33313132 30393335  3621031431120935
 1440 30363236 32363737 38313733 32313735  0626267781732175
 1450 32363065 2d343933 32463132 38005f5f  260e-4932F128.__
 1460 494e545f 4c454153 5436345f 4d41585f  INT_LEAST64_MAX_
 1470 5f203078 37666666 66666666 66666666  _ 0x7fffffffffff
 1480 66666666 4c005f5f 474e5543 5f504154  ffffL.__GNUC_PAT
 1490 43484c45 56454c5f 5f203000 5f5f4154  CHLEVEL__ 0.__AT
 14a0 4f4d4943 5f52454c 45415345 2033005f  OMIC_RELEASE 3._
 14b0 5f464c54 33325f4d 494e5f31 305f4558  _FLT32_MIN_10_EX
 14c0 505f5f20 282d3337 29005f5f 44424c5f  P__ (-37).__DBL_
 14d0 44454349 4d414c5f 4449475f 5f203137  DECIMAL_DIG__ 17
 14e0 00474e55 20433131 20372e33 2e30202d  .GNU C11 7.3.0 -
 14f0 6d74756e 653d6765 6e657269 63202d6d  mtune=generic -m
 1500 61726368 3d783836 2d363420 2d676764  arch=x86-64 -ggd
 1510 6233202d 66737461 636b2d70 726f7465  b3 -fstack-prote
 1520 63746f72 2d737472 6f6e6700 5f5f464c  ctor-strong.__FL
 1530 545f4445 43494d41 4c5f4449 475f5f20  T_DECIMAL_DIG__ 
 1540 39005f5f 41544f4d 49435f53 45515f43  9.__ATOMIC_SEQ_C
 1550 53542035 005f5f44 45433132 385f4d49  ST 5.__DEC128_MI
 1560 4e5f5f20 31452d36 31343344 4c005f5f  N__ 1E-6143DL.__
 1570 42494747 4553545f 414c4947 4e4d454e  BIGGEST_ALIGNMEN
 1580 545f5f20 3136005f 5f53495a 454f465f  T__ 16.__SIZEOF_
 1590 494e545f 5f203400 5f5f494e 545f4641  INT__ 4.__INT_FA
 15a0 53543332 5f545950 455f5f20 6c6f6e67  ST32_TYPE__ long
 15b0 20696e74 005f5f4c 44424c5f 44454349   int.__LDBL_DECI
 15c0 4d414c5f 4449475f 5f203231 005f5f44  MAL_DIG__ 21.__D
 15d0 45433132 385f4d41 585f4558 505f5f20  EC128_MAX_EXP__ 
 15e0 36313435 005f5f49 4e543136 5f4d4158  6145.__INT16_MAX
 15f0 5f5f2030 78376666 66005f5f 4743435f  __ 0x7fff.__GCC_
 1600 48415645 5f53594e 435f434f 4d504152  HAVE_SYNC_COMPAR
 1610 455f414e 445f5357 41505f34 2031005f  E_AND_SWAP_4 1._
 1620 5f474343 5f41534d 5f464c41 475f4f55  _GCC_ASM_FLAG_OU
 1630 54505554 535f5f20 31005f5f 464c5431  TPUTS__ 1.__FLT1
 1640 32385f4d 41585f45 58505f5f 20313633  28_MAX_EXP__ 163
 1650 3834005f 5f464c54 3132385f 4d41585f  84.__FLT128_MAX_
 1660 5f20312e 31383937 33313439 35333537  _ 1.189731495357
 1670 32333137 36353038 35373539 33323636  2317650857593266
 1680 32383030 37303265 2b343933 32463132  2800702e+4932F12
 1690 38005f5f 494e5438 5f545950 455f5f20  8.__INT8_TYPE__ 
 16a0 7369676e 65642063 68617200 5f5f494e  signed char.__IN
 16b0 545f5749 4454485f 5f203332 005f5f55  T_WIDTH__ 32.__U
 16c0 494e5438 5f545950 455f5f20 756e7369  INT8_TYPE__ unsi
 16d0 676e6564 20636861 72005f5f 494e544d  gned char.__INTM
 16e0 41585f57 49445448 5f5f2036 34005f5f  AX_WIDTH__ 64.__
 16f0 55494e54 4d41585f 54595045 5f5f206c  UINTMAX_TYPE__ l
 1700 6f6e6720 756e7369 676e6564 20696e74  ong unsigned int
 1710 005f5f49 4e543136 5f545950 455f5f20  .__INT16_TYPE__ 
 1720 73686f72 7420696e 74005f5f 4743435f  short int.__GCC_
 1730 41544f4d 49435f53 484f5254 5f4c4f43  ATOMIC_SHORT_LOC
 1740 4b5f4652 45452032 005f5f44 45433132  K_FREE 2.__DEC12
 1750 385f4d41 585f5f20 392e3939 39393939  8_MAX__ 9.999999
 1760 39393939 39393939 39393939 39393939  9999999999999999
 1770 39393939 39393939 39393945 36313434  99999999999E6144
 1780 444c005f 5f535350 5f535452 4f4e475f  DL.__SSP_STRONG_
 1790 5f203300 5f5f5049 455f5f20 32005f5f  _ 3.__PIE__ 2.__
 17a0 55494e54 5f4c4541 53543136 5f545950  UINT_LEAST16_TYP
 17b0 455f5f20 73686f72 7420756e 7369676e  E__ short unsign
 17c0 65642069 6e74005f 5f494e54 5f464153  ed int.__INT_FAS
 17d0 54385f54 5950455f 5f207369 676e6564  T8_TYPE__ signed
 17e0 20636861 72005f5f 44424c5f 4d41585f   char.__DBL_MAX_
 17f0 4558505f 5f203130 3234005f 5f464c54  EXP__ 1024.__FLT
 1800 3332585f 4d414e54 5f444947 5f5f2035  32X_MANT_DIG__ 5
 1810 33005f5f 464c545f 4556414c 5f4d4554  3.__FLT_EVAL_MET
 1820 484f445f 5f203000 5f5f494e 544d4158  HOD__ 0.__INTMAX
 1830 5f4d4158 5f5f2030 78376666 66666666  _MAX__ 0x7ffffff
 1840 66666666 66666666 664c005f 5f41544f  fffffffffL.__ATO
 1850 4d49435f 41435155 49524520 32005f5f  MIC_ACQUIRE 2.__
 1860 55494e54 5f464153 5433325f 54595045  UINT_FAST32_TYPE
 1870 5f5f206c 6f6e6720 756e7369 676e6564  __ long unsigned
 1880 20696e74 005f5f46 4c543332 5f444543   int.__FLT32_DEC
 1890 494d414c 5f444947 5f5f2039 005f5f49  IMAL_DIG__ 9.__I
 18a0 4e545f4c 45415354 33325f4d 41585f5f  NT_LEAST32_MAX__
 18b0 20307837 66666666 66666600 5f5f4743   0x7fffffff.__GC
 18c0 435f4154 4f4d4943 5f434841 525f4c4f  C_ATOMIC_CHAR_LO
 18d0 434b5f46 52454520 32005f5f 44454331  CK_FREE 2.__DEC1
 18e0 32385f45 5053494c 4f4e5f5f 2031452d  28_EPSILON__ 1E-
 18f0 3333444c 005f5f46 4c545f4d 41585f5f  33DL.__FLT_MAX__
 1900 20332e34 30323832 33343636 33383532   3.4028234663852
 1910 38383539 38313137 30343138 33343834  8859811704183484
 1920 35313639 3235652b 33384600 5f5f5349  516925e+38F.__SI
 1930 5a454f46 5f574348 41525f54 5f5f2034  ZEOF_WCHAR_T__ 4
 1940 005f5f46 4c543332 585f4445 43494d41  .__FLT32X_DECIMA
 1950 4c5f4449 475f5f20 3137005f 5f494e54  L_DIG__ 17.__INT
 1960 5f464153 5431365f 54595045 5f5f206c  _FAST16_TYPE__ l
 1970 6f6e6720 696e7400 5f5f4445 4333325f  ong int.__DEC32_
 1980 4d494e5f 4558505f 5f20282d 39342900  MIN_EXP__ (-94).
 1990 5f5f494e 5433325f 4d41585f 5f203078  __INT32_MAX__ 0x
 19a0 37666666 66666666 005f5f53 495a454f  7fffffff.__SIZEO
 19b0 465f464c 4f415431 32385f5f 20313600  F_FLOAT128__ 16.
 19c0 5f5f464c 5436345f 4d494e5f 31305f45  __FLT64_MIN_10_E
 19d0 58505f5f 20282d33 30372900 5f5f5549  XP__ (-307).__UI
 19e0 4e545f46 41535438 5f545950 455f5f20  NT_FAST8_TYPE__ 
 19f0 756e7369 676e6564 20636861 72005f5f  unsigned char.__
 1a00 53544443 5f494543 5f353539 5f5f2031  STDC_IEC_559__ 1
 1a10 005f5f44 45433132 385f5355 424e4f52  .__DEC128_SUBNOR
 1a20 4d414c5f 4d494e5f 5f20302e 30303030  MAL_MIN__ 0.0000
 1a30 30303030 30303030 30303030 30303030  0000000000000000
 1a40 30303030 30303030 30303030 31452d36  0000000000001E-6
 1a50 31343344 4c005f5f 41544f4d 49435f48  143DL.__ATOMIC_H
 1a60 4c455f41 43515549 52452036 35353336  LE_ACQUIRE 65536
 1a70 005f5f41 544f4d49 435f484c 455f5245  .__ATOMIC_HLE_RE
 1a80 4c454153 45203133 31303732 005f5f49  LEASE 131072.__I
 1a90 4e545f46 41535431 365f4d41 585f5f20  NT_FAST16_MAX__ 
 1aa0 30783766 66666666 66666666 66666666  0x7fffffffffffff
 1ab0 66664c00 5f5f494e 545f4c45 41535431  ffL.__INT_LEAST1
 1ac0 365f4d41 585f5f20 30783766 6666005f  6_MAX__ 0x7fff._
 1ad0 5f464c54 3634585f 4d41585f 4558505f  _FLT64X_MAX_EXP_
 1ae0 5f203136 33383400 5f5f4445 43313238  _ 16384.__DEC128
 1af0 5f4d414e 545f4449 475f5f20 3334005f  _MANT_DIG__ 34._
 1b00 5f4c4f4e 475f5749 4454485f 5f203634  _LONG_WIDTH__ 64
 1b10 005f5f53 495a455f 57494454 485f5f20  .__SIZE_WIDTH__ 
 1b20 3634005f 5f464c54 3132385f 44454349  64.__FLT128_DECI
 1b30 4d414c5f 4449475f 5f203336 005f5f57  MAL_DIG__ 36.__W
 1b40 43484152 5f4d494e 5f5f2028 2d5f5f57  CHAR_MIN__ (-__W
 1b50 43484152 5f4d4158 5f5f202d 20312900  CHAR_MAX__ - 1).
 1b60 5f5f4743 435f4841 56455f53 594e435f  __GCC_HAVE_SYNC_
 1b70 434f4d50 4152455f 414e445f 53574150  COMPARE_AND_SWAP
 1b80 5f322031 005f5f4c 44424c5f 4d41585f  _2 1.__LDBL_MAX_
 1b90 4558505f 5f203136 33383400 5f5f464c  EXP__ 16384.__FL
 1ba0 54363458 5f444947 5f5f2031 38005f5f  T64X_DIG__ 18.__
 1bb0 464c5433 32585f44 49475f5f 20313500  FLT32X_DIG__ 15.
 1bc0 5f5f6b38 5f5f2031 005f5f43 48415233  __k8__ 1.__CHAR3
 1bd0 325f5459 50455f5f 20756e73 69676e65  2_TYPE__ unsigne
 1be0 6420696e 74005f5f 464c5436 34585f4d  d int.__FLT64X_M
 1bf0 494e5f31 305f4558 505f5f20 282d3439  IN_10_EXP__ (-49
 1c00 33312900 5f5f7069 655f5f20 32005f5f  31).__pie__ 2.__
 1c10 494e545f 4c454153 54385f54 5950455f  INT_LEAST8_TYPE_
 1c20 5f207369 676e6564 20636861 72005f5f  _ signed char.__
 1c30 55494e54 31365f43 28632920 63005f5f  UINT16_C(c) c.__
 1c40 53485254 5f4d4158 5f5f2030 78376666  SHRT_MAX__ 0x7ff
 1c50 66005f5f 616d6436 345f5f20 31005f5f  f.__amd64__ 1.__
 1c60 53495a45 4f465f46 4c4f4154 5f5f2034  SIZEOF_FLOAT__ 4
 1c70 005f5f47 43435f48 4156455f 53594e43  .__GCC_HAVE_SYNC
 1c80 5f434f4d 50415245 5f414e44 5f535741  _COMPARE_AND_SWA
 1c90 505f3820 31005f5f 57434841 525f4d41  P_8 1.__WCHAR_MA
 1ca0 585f5f20 30783766 66666666 66660066  X__ 0x7fffffff.f
 1cb0 6c616700 5f5f5354 44435f5f 2031005f  lag.__STDC__ 1._
 1cc0 5f4f5244 45525f50 44505f45 4e444941  _ORDER_PDP_ENDIA
 1cd0 4e5f5f20 33343132 005f5f47 43435f41  N__ 3412.__GCC_A
 1ce0 544f4d49 435f504f 494e5445 525f4c4f  TOMIC_POINTER_LO
 1cf0 434b5f46 52454520 32005f5f 4f524445  CK_FREE 2.__ORDE
 1d00 525f4c49 54544c45 5f454e44 49414e5f  R_LITTLE_ENDIAN_
 1d10 5f203132 3334005f 5f57494e 545f5459  _ 1234.__WINT_TY
 1d20 50455f5f 20756e73 69676e65 6420696e  PE__ unsigned in
 1d30 74005f5f 41544f4d 49435f52 454c4158  t.__ATOMIC_RELAX
 1d40 45442030 005f5f46 494e4954 455f4d41  ED 0.__FINITE_MA
 1d50 54485f4f 4e4c595f 5f203000 5f5f6c69  TH_ONLY__ 0.__li
 1d60 6e757820 31005f5f 7838365f 36345f5f  nux 1.__x86_64__
 1d70 2031005f 5f444543 33325f4d 414e545f   1.__DEC32_MANT_
 1d80 4449475f 5f203700 5f5f4445 4336345f  DIG__ 7.__DEC64_
 1d90 45505349 4c4f4e5f 5f203145 2d313544  EPSILON__ 1E-15D
 1da0 44005f5f 53534532 5f4d4154 485f5f20  D.__SSE2_MATH__ 
 1db0 31005f5f 4743435f 4945435f 35353920  1.__GCC_IEC_559 
 1dc0 32005f5f 55494e54 5f464153 5433325f  2.__UINT_FAST32_
 1dd0 4d41585f 5f203078 66666666 66666666  MAX__ 0xffffffff
 1de0 66666666 66666666 554c005f 5f464c54  ffffffffUL.__FLT
 1df0 3332585f 44454e4f 524d5f4d 494e5f5f  32X_DENORM_MIN__
 1e00 20342e39 34303635 36343538 34313234   4.9406564584124
 1e10 36353434 31373635 36383739 32383638  6544176568792868
 1e20 32323133 3732652d 33323446 33327800  221372e-324F32x.
 1e30 5f5f4d4d 585f5f20 31005f5f 494e5436  __MMX__ 1.__INT6
 1e40 345f4d41 585f5f20 30783766 66666666  4_MAX__ 0x7fffff
 1e50 66666666 66666666 66664c00 5f5f464c  ffffffffffL.__FL
 1e60 54363458 5f455053 494c4f4e 5f5f2031  T64X_EPSILON__ 1
 1e70 2e303834 32303231 37323438 35353034  .084202172485504
 1e80 34333430 30373435 32383030 38363939  4340074528008699
 1e90 34313731 652d3139 46363478 005f5f50  4171e-19F64x.__P
 1ea0 54524449 46465f4d 41585f5f 20307837  TRDIFF_MAX__ 0x7
 1eb0 66666666 66666666 66666666 6666664c  fffffffffffffffL
 1ec0 005f5f53 45475f47 53203100 5f5f5349  .__SEG_GS 1.__SI
 1ed0 475f4154 4f4d4943 5f4d4158 5f5f2030  G_ATOMIC_MAX__ 0
 1ee0 78376666 66666666 66005f5f 7838365f  x7fffffff.__x86_
 1ef0 36342031 005f5f53 5444435f 4e4f5f54  64 1.__STDC_NO_T
 1f00 48524541 44535f5f 2031005f 5f55494e  HREADS__ 1.__UIN
 1f10 545f4641 53543136 5f545950 455f5f20  T_FAST16_TYPE__ 
 1f20 6c6f6e67 20756e73 69676e65 6420696e  long unsigned in
 1f30 74005f5f 464c5433 32585f48 41535f49  t.__FLT32X_HAS_I
 1f40 4e46494e 4954595f 5f203100 5f5f494e  NFINITY__ 1.__IN
 1f50 545f4641 53543136 5f574944 54485f5f  T_FAST16_WIDTH__
 1f60 20363400 5f5f464c 5433325f 4841535f   64.__FLT32_HAS_
 1f70 44454e4f 524d5f5f 2031005f 5f464c54  DENORM__ 1.__FLT
 1f80 5f524144 49585f5f 2032005f 5f464c54  _RADIX__ 2.__FLT
 1f90 36345f4d 414e545f 4449475f 5f203533  64_MANT_DIG__ 53
 1fa0 005f5f46 4c545f48 41535f49 4e46494e  .__FLT_HAS_INFIN
 1fb0 4954595f 5f203100 5f5f5349 475f4154  ITY__ 1.__SIG_AT
 1fc0 4f4d4943 5f574944 54485f5f 20333200  OMIC_WIDTH__ 32.
 1fd0 5f5f494e 545f4641 53543332 5f4d4158  __INT_FAST32_MAX
 1fe0 5f5f2030 78376666 66666666 66666666  __ 0x7ffffffffff
 1ff0 66666666 664c005f 5f464c54 36345f44  fffffL.__FLT64_D
 2000 4543494d 414c5f44 49475f5f 20313700  ECIMAL_DIG__ 17.
 2010 5f5f4c4f 4e475f4c 4f4e475f 57494454  __LONG_LONG_WIDT
 2020 485f5f20 3634005f 5f464c54 36345f44  H__ 64.__FLT64_D
 2030 454e4f52 4d5f4d49 4e5f5f20 342e3934  ENORM_MIN__ 4.94
 2040 30363536 34353834 31323436 35343431  0656458412465441
 2050 37363536 38373932 38363832 32313337  7656879286822137
 2060 32652d33 32344636 34006275 66666572  2e-324F64.buffer
 2070 00737461 636b5f65 78616d70 6c652e63  .stack_example.c
 2080 005f5f46 4c545f45 5053494c 4f4e5f5f  .__FLT_EPSILON__
 2090 20312e31 39323039 32383935 35303738   1.1920928955078
 20a0 31323530 30303030 30303030 30303030  1250000000000000
 20b0 30303030 3030652d 3746005f 5f464c54  000000e-7F.__FLT
 20c0 3634585f 4d41585f 5f20312e 31383937  64X_MAX__ 1.1897
 20d0 33313439 35333537 32333137 36353032  3149535723176502
 20e0 31323633 38353330 33303937 30323165  126385303097021e
 20f0 2b343933 32463634 78005f5f 53544443  +4932F64x.__STDC
 2100 5f555446 5f31365f 5f203100 5f5f494e  _UTF_16__ 1.__IN
 2110 544d4158 5f545950 455f5f20 6c6f6e67  TMAX_TYPE__ long
 2120 20696e74 005f5f4c 44424c5f 4841535f   int.__LDBL_HAS_
 2130 44454e4f 524d5f5f 2031005f 5f4c4442  DENORM__ 1.__LDB
 2140 4c5f4d41 4e545f44 49475f5f 20363400  L_MANT_DIG__ 64.
 2150 5f5f6861 735f696e 636c7564 65285354  __has_include(ST
 2160 5229205f 5f686173 5f696e63 6c756465  R) __has_include
 2170 5f5f2853 54522900 5f5f4743 435f4154  __(STR).__GCC_AT
 2180 4f4d4943 5f434841 5231365f 545f4c4f  OMIC_CHAR16_T_LO
 2190 434b5f46 52454520 32005f5f 44454333  CK_FREE 2.__DEC3
 21a0 325f4550 53494c4f 4e5f5f20 31452d36  2_EPSILON__ 1E-6
 21b0 4446005f 5f53495a 454f465f 464c4f41  DF.__SIZEOF_FLOA
 21c0 5438305f 5f203136 005f5f52 45474953  T80__ 16.__REGIS
 21d0 5445525f 50524546 49585f5f 20005f5f  TER_PREFIX__ .__
 21e0 41544f4d 49435f43 4f4e5355 4d452031  ATOMIC_CONSUME 1
 21f0 005f5f55 494e5436 345f4d41 585f5f20  .__UINT64_MAX__ 
 2200 30786666 66666666 66666666 66666666  0xffffffffffffff
 2210 6666554c 005f5f53 5444435f 5554465f  ffUL.__STDC_UTF_
 2220 33325f5f 2031005f 5f55494e 5431365f  32__ 1.__UINT16_
 2230 54595045 5f5f2073 686f7274 20756e73  TYPE__ short uns
 2240 69676e65 6420696e 74005f5f 464c5436  igned int.__FLT6
 2250 34585f4d 41585f31 305f4558 505f5f20  4X_MAX_10_EXP__ 
 2260 34393332 005f5f55 494e5433 325f4328  4932.__UINT32_C(
 2270 63292063 20232320 55005f5f 6b382031  c) c ## U.__k8 1
 2280 005f5f53 45475f46 53203100 5f5f5549  .__SEG_FS 1.__UI
 2290 4e544d41 585f4328 63292063 20232320  NTMAX_C(c) c ## 
 22a0 554c005f 5f475858 5f414249 5f564552  UL.__GXX_ABI_VER
 22b0 53494f4e 20313031 31005f5f 53495a45  SION 1011.__SIZE
 22c0 4f465f50 54524449 46465f54 5f5f2038  OF_PTRDIFF_T__ 8
 22d0 005f5f43 4841525f 4249545f 5f203800  .__CHAR_BIT__ 8.
 22e0 5f5f5349 475f4154 4f4d4943 5f4d494e  __SIG_ATOMIC_MIN
 22f0 5f5f2028 2d5f5f53 49475f41 544f4d49  __ (-__SIG_ATOMI
 2300 435f4d41 585f5f20 2d203129 005f5f49  C_MAX__ - 1).__I
 2310 4e545f46 41535436 345f5749 4454485f  NT_FAST64_WIDTH_
 2320 5f203634 005f5f46 4c543132 385f4445  _ 64.__FLT128_DE
 2330 4e4f524d 5f4d494e 5f5f2036 2e343735  NORM_MIN__ 6.475
 2340 31373531 31393433 38303235 31313039  1751194380251109
 2350 32343433 38393538 32323736 34363535  2443895822764655
 2360 652d3439 36364631 3238005f 5f55494e  e-4966F128.__UIN
 2370 545f4c45 41535433 325f5459 50455f5f  T_LEAST32_TYPE__
 2380 20756e73 69676e65 6420696e 74005f5f   unsigned int.__
 2390 44424c5f 4841535f 44454e4f 524d5f5f  DBL_HAS_DENORM__
 23a0 2031005f 5f464c54 3132385f 4d414e54   1.__FLT128_MANT
 23b0 5f444947 5f5f2031 3133005f 5f464c54  _DIG__ 113.__FLT
 23c0 36345f44 49475f5f 20313500 5f5f5549  64_DIG__ 15.__UI
 23d0 4e544d41 585f4d41 585f5f20 30786666  NTMAX_MAX__ 0xff
 23e0 66666666 66666666 66666666 6666554c  ffffffffffffffUL
 23f0 005f5f47 43435f48 4156455f 53594e43  .__GCC_HAVE_SYNC
 2400 5f434f4d 50415245 5f414e44 5f535741  _COMPARE_AND_SWA
 2410 505f3120 31005f5f 44424c5f 4d41585f  P_1 1.__DBL_MAX_
 2420 5f202828 646f7562 6c652931 2e373937  _ ((double)1.797
 2430 36393331 33343836 32333135 37303831  6931348623157081
 2440 34353237 34323337 33313730 34333537  4527423731704357
 2450 652b3330 384c2900 5f5f494e 54385f4d  e+308L).__INT8_M
 2460 41585f5f 20307837 66005f5f 55494e54  AX__ 0x7f.__UINT
 2470 5f464153 54385f4d 41585f5f 20307866  _FAST8_MAX__ 0xf
 2480 66005f5f 44424c5f 4841535f 51554945  f.__DBL_HAS_QUIE
 2490 545f4e41 4e5f5f20 31005f5f 464c545f  T_NAN__ 1.__FLT_
 24a0 4d494e5f 31305f45 58505f5f 20282d33  MIN_10_EXP__ (-3
 24b0 3729005f 5f474343 5f41544f 4d49435f  7).__GCC_ATOMIC_
 24c0 54455354 5f414e44 5f534554 5f545255  TEST_AND_SET_TRU
 24d0 4556414c 2031005f 5f464c54 3634585f  EVAL 1.__FLT64X_
 24e0 44454349 4d414c5f 4449475f 5f203231  DECIMAL_DIG__ 21
 24f0 005f5f41 544f4d49 435f4143 515f5245  .__ATOMIC_ACQ_RE
 2500 4c203400 5f5f5743 4841525f 54595045  L 4.__WCHAR_TYPE
 2510 5f5f2069 6e74005f 53544443 5f505245  __ int._STDC_PRE
 2520 4445465f 48203100 5f5f494e 545f4641  DEF_H 1.__INT_FA
 2530 5354385f 57494454 485f5f20 38005f5f  ST8_WIDTH__ 8.__
 2540 464c5431 32385f4d 41585f31 305f4558  FLT128_MAX_10_EX
 2550 505f5f20 34393332 005f5f55 5345525f  P__ 4932.__USER_
 2560 4c414245 4c5f5052 45464958 5f5f2000  LABEL_PREFIX__ .
 2570 74657374 5f66756e 6374696f 6e005f5f  test_function.__
 2580 464c5433 325f4d49 4e5f4558 505f5f20  FLT32_MIN_EXP__ 
 2590 282d3132 3529005f 5f434841 5231365f  (-125).__CHAR16_
 25a0 54595045 5f5f2073 686f7274 20756e73  TYPE__ short uns
 25b0 69676e65 6420696e 74005f5f 55494e54  igned int.__UINT
 25c0 385f4328 63292063 005f5f46 4c543132  8_C(c) c.__FLT12
 25d0 385f4449 475f5f20 3333005f 5f55494e  8_DIG__ 33.__UIN
 25e0 545f4c45 41535438 5f545950 455f5f20  T_LEAST8_TYPE__ 
 25f0 756e7369 676e6564 20636861 72005f5f  unsigned char.__
 2600 494e5436 345f5459 50455f5f 206c6f6e  INT64_TYPE__ lon
 2610 6720696e 74005f5f 494e545f 4c454153  g int.__INT_LEAS
 2620 5436345f 57494454 485f5f20 3634005f  T64_WIDTH__ 64._
 2630 5f4c4442 4c5f4449 475f5f20 3138006d  _LDBL_DIG__ 18.m
 2640 61696e00 5f5f5549 4e543332 5f4d4158  ain.__UINT32_MAX
 2650 5f5f2030 78666666 66666666 6655005f  __ 0xffffffffU._
 2660 5f474343 5f484156 455f4457 41524632  _GCC_HAVE_DWARF2
 2670 5f434649 5f41534d 2031005f 5f494e54  _CFI_ASM 1.__INT
 2680 5f4c4541 5354385f 4d41585f 5f203078  _LEAST8_MAX__ 0x
 2690 3766005f 5f444543 36345f4d 494e5f5f  7f.__DEC64_MIN__
 26a0 2031452d 33383344 44005f5f 44424c5f   1E-383DD.__DBL_
 26b0 4d494e5f 31305f45 58505f5f 20282d33  MIN_10_EXP__ (-3
 26c0 30372900 5f5f4445 43494d41 4c5f4249  07).__DECIMAL_BI
 26d0 445f464f 524d4154 5f5f2031 005f5f47  D_FORMAT__ 1.__G
 26e0 4e55435f 53544443 5f494e4c 494e455f  NUC_STDC_INLINE_
 26f0 5f203100 5f5f464c 5436345f 4d41585f  _ 1.__FLT64_MAX_
 2700 31305f45 58505f5f 20333038 005f5f46  10_EXP__ 308.__F
 2710 4c545f4d 414e545f 4449475f 5f203234  LT_MANT_DIG__ 24
 2720 00                                   .               
Contents of section .debug_macro:
 0000 04000200 00000007 1a000000 03000103  ................
 0010 1f020722 08000004 04000400 000500b4  ..."............
 0020 1c000005 00e70000 000500fa 20000005  ............ ...
 0030 00152200 0005007f 05000005 009a0400  ..".............
 0040 00050049 0f000005 00861400 000500dd  ...I............
 0050 0b000005 00321d00 00050042 15000005  .....2.....B....
 0060 004b1800 0005009c 14000005 00f12400  .K............$.
 0070 000500de 21000005 00ef0800 000500a5  ....!...........
 0080 0c000005 00041c00 00050094 17000005  ................
 0090 00451d00 000500f9 08000005 00470400  .E...........G..
 00a0 00050087 15000005 004b0900 0005009a  .........K......
 00b0 0d000005 008d1200 0005005e 1c000005  ...........^....
 00c0 00c90b00 00050093 0e000005 00940000  ................
 00d0 000500d1 22000005 006e1500 000500fa  ...."....n......
 00e0 1c000005 00891100 000500bf 1c000005  ................
 00f0 00f50900 00050041 0a000005 00000100  .......A........
 0100 00050010 10000005 00370d00 00050004  .........7......
 0110 25000005 00171d00 0005000c 21000005  %...........!...
 0120 00ee1600 00050097 25000005 00c91b00  ........%.......
 0130 000500a9 08000005 00921600 00050011  ................
 0140 17000005 00960800 000500fe 25000005  ............%...
 0150 00bd1600 00050027 22000005 00f70700  .......'".......
 0160 00050054 0c000005 000e1c00 000500a6  ...T............
 0170 0a000005 00760c00 0005002b 0f000005  .....v.....+....
 0180 00db2500 0005009e 17000005 006b2300  ..%..........k#.
 0190 0005006b 0e000005 00c71700 0005005b  ...k...........[
 01a0 19000005 00981500 00050049 13000005  ...........I....
 01b0 00dc1900 0005000b 1f000005 005e1800  .............^..
 01c0 000500ce 09000005 00a31100 000500ff  ................
 01d0 01000005 00502100 000500f3 0a000005  .....P!.........
 01e0 00a32200 000500dd 0e000005 003e1c00  .."..........>..
 01f0 000500d1 13000005 00bc1100 000500cb  ................
 0200 0f000005 00961c00 0005003d 1b000005  ...........=....
 0210 008f0600 00050091 05000005 009d1e00  ................
 0220 0005000c 11000005 00fe0600 0005006f  ...............o
 0230 08000005 00ac1600 000500ff 1a000005  ................
 0240 00102000 00050015 01000005 00420c00  .. ..........B..
 0250 000500c8 0e000005 00111b00 00050028  ...............(
 0260 18000005 00eb0c00 000500cc 23000005  ............#...
 0270 008c2200 000500da 16000005 00cc1e00  ..".............
 0280 000500e0 22000005 00b81f00 00050058  ...."..........X
 0290 24000005 00e51500 00050090 19000005  $...............
 02a0 003a1e00 0005002f 0c000005 009d0900  .:...../........
 02b0 00050044 26000005 00f12100 0005007b  ...D&.....!....{
 02c0 26000005 008c0d00 00050048 06000005  &..........H....
 02d0 00b41a00 0005000d 13000005 00010900  ................
 02e0 0005009d 18000005 00c20400 00050085  ................
 02f0 03000005 005e1400 00050008 0e000005  .....^..........
 0300 00162600 00050000 00000005 00ba2500  ..&...........%.
 0310 0005006e 0a000005 002e1c00 00050073  ...n...........s
 0320 00000005 00652200 0005002e 11000005  .....e".........
 0330 00520400 000500e0 07000005 00282500  .R...........(%.
 0340 0005008d 1a000005 004c1f00 000500d0  .........L......
 0350 1f000005 00dd1100 00050058 11000005  ...........X....
 0360 000d2300 0005006a 24000005 001c0e00  ..#....j$.......
 0370 000500c2 1d000005 00cb0100 00050025  ...............%
 0380 0b000005 006b0500 0005009e 03000005  .....k..........
 0390 00b21d00 00050060 10000005 00121800  .......`........
 03a0 000500a1 05000005 00990f00 0005007b  ...............{
 03b0 1f000005 000d2700 000500b1 0d000005  ......'.........
 03c0 00ab1000 0005009a 24000005 00df0a00  ........$.......
 03d0 00050045 0e000005 002c1500 000500f5  ...E.....,......
 03e0 18000005 00a01200 00050081 20000005  ............ ...
 03f0 00720b00 0005005d 09000005 00a11f00  .r.....]........
 0400 00050078 10000005 004c0700 0005005f  ...x.....L....._
 0410 06000005 00d70800 000500aa 26000005  ............&...
 0420 00e61700 000500ee 02000005 00ca1400  ................
 0430 00050016 24000005 00890100 00050003  ....$...........
 0440 06000005 00bf0d00 0005008e 23000005  ............#...
 0450 00680400 00050082 24000005 003b2100  .h......$....;!.
 0460 0005002f 26000005 00301000 00050053  .../&....0.....S
 0470 08000005 00851b00 0005003a 02000005  ...........:....
 0480 00361300 000500b5 15000005 00531200  .6...........S..
 0490 0005004b 03000005 00100700 000500c2  ...K............
 04a0 05000005 00252100 00050033 09000005  .....%!....3....
 04b0 00b00b00 0005004a 10000005 00470000  .......J.....G..
 04c0 0005007e 25000005 00af1400 0005008f  ...~%...........
 04d0 0c000005 003b1200 00050085 18000005  .....;..........
 04e0 00510d00 000500f0 0e000005 00600700  .Q...........`..
 04f0 0005009e 07000005 00641f00 0005001a  .........d......
 0500 09000005 00c50a00 0005008b 1f000005  ................
 0510 00bb2300 000500d1 0c000005 00c01900  ..#.............
 0520 000500af 0c000005 00f42600 000500f7  ..........&.....
 0530 1f000005 00690200 00050005 03000005  .....i..........
 0540 00140800 00050027 20000005 00190000  .......' .......
 0550 000500f4 12000005 00b30600 000500a3  ................
 0560 23000005 00c92500 00050072 09000005  #.....%....r....
 0570 00b31300 0005003a 16000005 003e2500  .......:.....>%.
 0580 00050023 1b000005 00531600 0005001f  ...#.....S......
 0590 14000005 00120500 00050025 23000005  ...........%#...
 05a0 00e81300 000500d4 02000005 007f0400  ................
 05b0 000500fb 17000005 00ae1b00 00050026  ...............&
 05c0 0a000005 00a50400 00050022 02000005  ..........."....
 05d0 00580b00 00050041 19000005 00f10b00  .X.....A........
 05e0 000500ce 10000005 00d10400 000500eb  ................
 05f0 1d000005 00c60000 00050032 1f000005  ...........2....
 0600 00a50200 00050030 00000005 009c1b00  .......0........
 0610 00050057 00000005 00e61b00 000500cf  ...W............
 0620 1a000005 004a2200 000500d7 24000005  .....J".....$...
 0630 00bb2000 0005005a 0f000005 005c1e00  .. ....Z.....\..
 0640 000500f5 11000005 00530500 0005001c  .........S......
 0650 13000005 00b30900 00050073 1d000005  ...........s....
 0660 00781900 00050081 08000005 00530200  .x...........S..
 0670 000500af 0f000005 009a2100 0005008c  ..........!.....
 0680 13000005 005a0100 00050070 01000005  .....Z.....p....
 0690 00c10800 00050093 26000005 00661300  ........&....f..
 06a0 00050088 1d000005 00cd0600 000500e8  ................
 06b0 1a000005 00280100 000500cd 15000005  .....(..........
 06c0 00551500 00050049 17000005 00da1800  .U.....I........
 06d0 00050011 1a000005 00c92100 00050059  ..........!....Y
 06e0 25000005 00dd2600 0005005b 0e000005  %.....&....[....
 06f0 00f12300 00050060 1b000005 00fa1500  ..#....`........
 0700 00050071 1c000005 00f20f00 000500bc  ...q............
 0710 18000005 00782100 00050000 0d000005  .....x!.........
 0720 006e0600 0005002a 17000005 00d71200  .n.....*........
 0730 000500a8 00000005 00001400 000500b3  ................
 0740 24000005 00d91c00 0005005f 26000005  $.........._&...
 0750 008a0a00 00050083 17000005 00220d00  ............."..
 0760 0005002c 19000005 00c00200 000500ba  ...,............
 0770 22000005 00410300 00050052 1c000005  "....A.....R....
 0780 00ea1e00 00050066 1d000005 00b32100  .......f......!.
 0790 000500a9 19000005 00561a00 00050071  .........V.....q
 07a0 1a000005 001f1600 0005007a 22000005  ...........z"...
 07b0 00c01b00 00050043 01000005 00301e00  .......C.....0..
 07c0 0005007f 11000005 00c60c00 000500a8  ................
 07d0 06000005 008e0900 000500a2 1d000005  ................
 07e0 00812200 000500c1 1e000005 00480b00  .."..........H..
 07f0 0005005c 1d000005 00c21000 0005005e  ...\...........^
 0800 1d000005 00de0000 000500f4 01000005  ................
 0810 00e00000 0005001c 0a000005 00c42600  ..............&.
 0820 00000400 00051317 25000005 26fe1900  ........%...&...
 0830 00052e90 10000005 3aad0e00 00053df5  ........:.....=.
 0840 1e000000                             ....            

Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x29b>
 248:	78 38                	js     282 <_init-0x28e>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 00                	add    BYTE PTR [rax],al
 285:	f4                   	hlt    
 286:	23 7c 6f 41          	and    edi,DWORD PTR [rdi+rbp*2+0x41]
 28a:	11 ad 53 7b 93 b5    	adc    DWORD PTR [rbp-0x4a6c84ad],ebp
 290:	fa                   	cli    
 291:	79 19                	jns    2ac <_init-0x264>
 293:	e5 94                	in     eax,0x94
 295:	8a dd                	mov    bl,ch
 297:	1b                   	.byte 0x1b

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    DWORD PTR [rax],eax
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	01 00                	add    DWORD PTR [rax],eax
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	53                   	push   rbx
 2d1:	00 00                	add    BYTE PTR [rax],al
 2d3:	00 20                	add    BYTE PTR [rax],ah
	...
 2e5:	00 00                	add    BYTE PTR [rax],al
 2e7:	00 0b                	add    BYTE PTR [rbx],cl
 2e9:	00 00                	add    BYTE PTR [rax],al
 2eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 2fd:	00 00                	add    BYTE PTR [rax],al
 2ff:	00 2b                	add    BYTE PTR [rbx],ch
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 12                	add    BYTE PTR [rdx],dl
	...
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 6f 00             	add    BYTE PTR [rdi+0x0],ch
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	20 00                	and    BYTE PTR [rax],al
	...
 32e:	00 00                	add    BYTE PTR [rax],al
 330:	7e 00                	jle    332 <_init-0x1de>
 332:	00 00                	add    BYTE PTR [rax],al
 334:	20 00                	and    BYTE PTR [rax],al
	...
 346:	00 00                	add    BYTE PTR [rax],al
 348:	1c 00                	sbb    al,0x0
 34a:	00 00                	add    BYTE PTR [rax],al
 34c:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000360 <.dynstr>:
 360:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 364:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 366:	73 6f                	jae    3d7 <_init-0x139>
 368:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 36d:	73 74                	jae    3e3 <_init-0x12d>
 36f:	61                   	(bad)  
 370:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 373:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 376:	5f                   	pop    rdi
 377:	66 61                	data16 (bad) 
 379:	69 6c 00 5f 5f 63 78 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x6178635f
 380:	61 
 381:	5f                   	pop    rdi
 382:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 388:	7a 65                	jp     3ef <_init-0x121>
 38a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 38d:	6c                   	ins    BYTE PTR es:[rdi],dx
 38e:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 395:	72 74                	jb     40b <_init-0x105>
 397:	5f                   	pop    rdi
 398:	6d                   	ins    DWORD PTR es:[rdi],dx
 399:	61                   	(bad)  
 39a:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 3a1:	43 5f                	rex.XB pop r15
 3a3:	32 2e                	xor    ch,BYTE PTR [rsi]
 3a5:	32 2e                	xor    ch,BYTE PTR [rsi]
 3a7:	35 00 47 4c 49       	xor    eax,0x494c4700
 3ac:	42                   	rex.X
 3ad:	43 5f                	rex.XB pop r15
 3af:	32 2e                	xor    ch,BYTE PTR [rsi]
 3b1:	34 00                	xor    al,0x0
 3b3:	5f                   	pop    rdi
 3b4:	49 54                	rex.WB push r12
 3b6:	4d 5f                	rex.WRB pop r15
 3b8:	64 65 72 65          	fs gs jb 421 <_init-0xef>
 3bc:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3c3:	4d 
 3c4:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3c8:	65 54                	gs push rsp
 3ca:	61                   	(bad)  
 3cb:	62                   	(bad)  
 3cc:	6c                   	ins    BYTE PTR es:[rdi],dx
 3cd:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 3d1:	67 6d                	ins    DWORD PTR es:[edi],dx
 3d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3d5:	5f                   	pop    rdi
 3d6:	73 74                	jae    44c <_init-0xc4>
 3d8:	61                   	(bad)  
 3d9:	72 74                	jb     44f <_init-0xc1>
 3db:	5f                   	pop    rdi
 3dc:	5f                   	pop    rdi
 3dd:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 3e0:	54                   	push   rsp
 3e1:	4d 5f                	rex.WRB pop r15
 3e3:	72 65                	jb     44a <_init-0xc6>
 3e5:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3ec:	4d 
 3ed:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3f1:	65 54                	gs push rsp
 3f3:	61                   	(bad)  
 3f4:	62                   	.byte 0x62
 3f5:	6c                   	ins    BYTE PTR es:[rdi],dx
 3f6:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000003f8 <.gnu.version>:
 3f8:	00 00                	add    BYTE PTR [rax],al
 3fa:	00 00                	add    BYTE PTR [rax],al
 3fc:	02 00                	add    al,BYTE PTR [rax]
 3fe:	03 00                	add    eax,DWORD PTR [rax]
 400:	00 00                	add    BYTE PTR [rax],al
 402:	00 00                	add    BYTE PTR [rax],al
 404:	03 00                	add    eax,DWORD PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000408 <.gnu.version_r>:
 408:	01 00                	add    DWORD PTR [rax],eax
 40a:	02 00                	add    al,BYTE PTR [rax]
 40c:	01 00                	add    DWORD PTR [rax],eax
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	10 00                	adc    BYTE PTR [rax],al
 412:	00 00                	add    BYTE PTR [rax],al
 414:	00 00                	add    BYTE PTR [rax],al
 416:	00 00                	add    BYTE PTR [rax],al
 418:	75 1a                	jne    434 <_init-0xdc>
 41a:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 420:	3d 00 00 00 10       	cmp    eax,0x10000000
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 42a:	69 0d 00 00 02 00 49 	imul   ecx,DWORD PTR [rip+0x20000],0x49        # 20434 <__FRAME_END__+0x1fb68>
 431:	00 00 00 
 434:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000438 <.rela.dyn>:
 438:	b8 0d 20 00 00       	mov    eax,0x200d
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 08                	add    BYTE PTR [rax],cl
 441:	00 00                	add    BYTE PTR [rax],al
 443:	00 00                	add    BYTE PTR [rax],al
 445:	00 00                	add    BYTE PTR [rax],al
 447:	00 60 06             	add    BYTE PTR [rax+0x6],ah
 44a:	00 00                	add    BYTE PTR [rax],al
 44c:	00 00                	add    BYTE PTR [rax],al
 44e:	00 00                	add    BYTE PTR [rax],al
 450:	c0 0d 20 00 00 00 00 	ror    BYTE PTR [rip+0x20],0x0        # 477 <_init-0x99>
 457:	00 08                	add    BYTE PTR [rax],cl
 459:	00 00                	add    BYTE PTR [rax],al
 45b:	00 00                	add    BYTE PTR [rax],al
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 20                	add    BYTE PTR [rax],ah
 461:	06                   	(bad)  
 462:	00 00                	add    BYTE PTR [rax],al
 464:	00 00                	add    BYTE PTR [rax],al
 466:	00 00                	add    BYTE PTR [rax],al
 468:	08 10                	or     BYTE PTR [rax],dl
 46a:	20 00                	and    BYTE PTR [rax],al
 46c:	00 00                	add    BYTE PTR [rax],al
 46e:	00 00                	add    BYTE PTR [rax],al
 470:	08 00                	or     BYTE PTR [rax],al
 472:	00 00                	add    BYTE PTR [rax],al
 474:	00 00                	add    BYTE PTR [rax],al
 476:	00 00                	add    BYTE PTR [rax],al
 478:	08 10                	or     BYTE PTR [rax],dl
 47a:	20 00                	and    BYTE PTR [rax],al
 47c:	00 00                	add    BYTE PTR [rax],al
 47e:	00 00                	add    BYTE PTR [rax],al
 480:	d8 0f                	fmul   DWORD PTR [rdi]
 482:	20 00                	and    BYTE PTR [rax],al
 484:	00 00                	add    BYTE PTR [rax],al
 486:	00 00                	add    BYTE PTR [rax],al
 488:	06                   	(bad)  
 489:	00 00                	add    BYTE PTR [rax],al
 48b:	00 01                	add    BYTE PTR [rcx],al
	...
 495:	00 00                	add    BYTE PTR [rax],al
 497:	00 e0                	add    al,ah
 499:	0f 20 00             	mov    rax,cr0
 49c:	00 00                	add    BYTE PTR [rax],al
 49e:	00 00                	add    BYTE PTR [rax],al
 4a0:	06                   	(bad)  
 4a1:	00 00                	add    BYTE PTR [rax],al
 4a3:	00 03                	add    BYTE PTR [rbx],al
	...
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	00 e8                	add    al,ch
 4b1:	0f 20 00             	mov    rax,cr0
 4b4:	00 00                	add    BYTE PTR [rax],al
 4b6:	00 00                	add    BYTE PTR [rax],al
 4b8:	06                   	(bad)  
 4b9:	00 00                	add    BYTE PTR [rax],al
 4bb:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 4c6:	00 00                	add    BYTE PTR [rax],al
 4c8:	f0 0f 20 00          	lock mov rax,cr0
 4cc:	00 00                	add    BYTE PTR [rax],al
 4ce:	00 00                	add    BYTE PTR [rax],al
 4d0:	06                   	(bad)  
 4d1:	00 00                	add    BYTE PTR [rax],al
 4d3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4d9 <_init-0x37>
 4d9:	00 00                	add    BYTE PTR [rax],al
 4db:	00 00                	add    BYTE PTR [rax],al
 4dd:	00 00                	add    BYTE PTR [rax],al
 4df:	00 f8                	add    al,bh
 4e1:	0f 20 00             	mov    rax,cr0
 4e4:	00 00                	add    BYTE PTR [rax],al
 4e6:	00 00                	add    BYTE PTR [rax],al
 4e8:	06                   	(bad)  
 4e9:	00 00                	add    BYTE PTR [rax],al
 4eb:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .rela.plt:

00000000000004f8 <.rela.plt>:
 4f8:	d0 0f                	ror    BYTE PTR [rdi],1
 4fa:	20 00                	and    BYTE PTR [rax],al
 4fc:	00 00                	add    BYTE PTR [rax],al
 4fe:	00 00                	add    BYTE PTR [rax],al
 500:	07                   	(bad)  
 501:	00 00                	add    BYTE PTR [rax],al
 503:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .init:

0000000000000510 <_init>:
 510:	48 83 ec 08          	sub    rsp,0x8
 514:	48 8b 05 cd 0a 20 00 	mov    rax,QWORD PTR [rip+0x200acd]        # 200fe8 <__gmon_start__>
 51b:	48 85 c0             	test   rax,rax
 51e:	74 02                	je     522 <_init+0x12>
 520:	ff d0                	call   rax
 522:	48 83 c4 08          	add    rsp,0x8
 526:	c3                   	ret    

Disassembly of section .plt:

0000000000000530 <.plt>:
 530:	ff 35 8a 0a 20 00    	push   QWORD PTR [rip+0x200a8a]        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
 536:	ff 25 8c 0a 20 00    	jmp    QWORD PTR [rip+0x200a8c]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
 53c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000540 <__stack_chk_fail@plt>:
 540:	ff 25 8a 0a 20 00    	jmp    QWORD PTR [rip+0x200a8a]        # 200fd0 <__stack_chk_fail@GLIBC_2.4>
 546:	68 00 00 00 00       	push   0x0
 54b:	e9 e0 ff ff ff       	jmp    530 <.plt>

Disassembly of section .plt.got:

0000000000000550 <__cxa_finalize@plt>:
 550:	ff 25 a2 0a 20 00    	jmp    QWORD PTR [rip+0x200aa2]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 556:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000560 <_start>:
 560:	31 ed                	xor    ebp,ebp
 562:	49 89 d1             	mov    r9,rdx
 565:	5e                   	pop    rsi
 566:	48 89 e2             	mov    rdx,rsp
 569:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 56d:	50                   	push   rax
 56e:	54                   	push   rsp
 56f:	4c 8d 05 da 01 00 00 	lea    r8,[rip+0x1da]        # 750 <__libc_csu_fini>
 576:	48 8d 0d 63 01 00 00 	lea    rcx,[rip+0x163]        # 6e0 <__libc_csu_init>
 57d:	48 8d 3d 2b 01 00 00 	lea    rdi,[rip+0x12b]        # 6af <main>
 584:	ff 15 56 0a 20 00    	call   QWORD PTR [rip+0x200a56]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 58a:	f4                   	hlt    
 58b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000590 <deregister_tm_clones>:
 590:	48 8d 3d 79 0a 20 00 	lea    rdi,[rip+0x200a79]        # 201010 <__TMC_END__>
 597:	55                   	push   rbp
 598:	48 8d 05 71 0a 20 00 	lea    rax,[rip+0x200a71]        # 201010 <__TMC_END__>
 59f:	48 39 f8             	cmp    rax,rdi
 5a2:	48 89 e5             	mov    rbp,rsp
 5a5:	74 19                	je     5c0 <deregister_tm_clones+0x30>
 5a7:	48 8b 05 2a 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a2a]        # 200fd8 <_ITM_deregisterTMCloneTable>
 5ae:	48 85 c0             	test   rax,rax
 5b1:	74 0d                	je     5c0 <deregister_tm_clones+0x30>
 5b3:	5d                   	pop    rbp
 5b4:	ff e0                	jmp    rax
 5b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 5bd:	00 00 00 
 5c0:	5d                   	pop    rbp
 5c1:	c3                   	ret    
 5c2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 5c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 5cd:	00 00 00 

00000000000005d0 <register_tm_clones>:
 5d0:	48 8d 3d 39 0a 20 00 	lea    rdi,[rip+0x200a39]        # 201010 <__TMC_END__>
 5d7:	48 8d 35 32 0a 20 00 	lea    rsi,[rip+0x200a32]        # 201010 <__TMC_END__>
 5de:	55                   	push   rbp
 5df:	48 29 fe             	sub    rsi,rdi
 5e2:	48 89 e5             	mov    rbp,rsp
 5e5:	48 c1 fe 03          	sar    rsi,0x3
 5e9:	48 89 f0             	mov    rax,rsi
 5ec:	48 c1 e8 3f          	shr    rax,0x3f
 5f0:	48 01 c6             	add    rsi,rax
 5f3:	48 d1 fe             	sar    rsi,1
 5f6:	74 18                	je     610 <register_tm_clones+0x40>
 5f8:	48 8b 05 f1 09 20 00 	mov    rax,QWORD PTR [rip+0x2009f1]        # 200ff0 <_ITM_registerTMCloneTable>
 5ff:	48 85 c0             	test   rax,rax
 602:	74 0c                	je     610 <register_tm_clones+0x40>
 604:	5d                   	pop    rbp
 605:	ff e0                	jmp    rax
 607:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 60e:	00 00 
 610:	5d                   	pop    rbp
 611:	c3                   	ret    
 612:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 616:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 61d:	00 00 00 

0000000000000620 <__do_global_dtors_aux>:
 620:	80 3d e9 09 20 00 00 	cmp    BYTE PTR [rip+0x2009e9],0x0        # 201010 <__TMC_END__>
 627:	75 2f                	jne    658 <__do_global_dtors_aux+0x38>
 629:	48 83 3d c7 09 20 00 	cmp    QWORD PTR [rip+0x2009c7],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 630:	00 
 631:	55                   	push   rbp
 632:	48 89 e5             	mov    rbp,rsp
 635:	74 0c                	je     643 <__do_global_dtors_aux+0x23>
 637:	48 8b 3d ca 09 20 00 	mov    rdi,QWORD PTR [rip+0x2009ca]        # 201008 <__dso_handle>
 63e:	e8 0d ff ff ff       	call   550 <__cxa_finalize@plt>
 643:	e8 48 ff ff ff       	call   590 <deregister_tm_clones>
 648:	c6 05 c1 09 20 00 01 	mov    BYTE PTR [rip+0x2009c1],0x1        # 201010 <__TMC_END__>
 64f:	5d                   	pop    rbp
 650:	c3                   	ret    
 651:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 658:	f3 c3                	repz ret 
 65a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000660 <frame_dummy>:
 660:	55                   	push   rbp
 661:	48 89 e5             	mov    rbp,rsp
 664:	5d                   	pop    rbp
 665:	e9 66 ff ff ff       	jmp    5d0 <register_tm_clones>

000000000000066a <test_function>:
void test_function(int a, int b, int c, int d) {
 66a:	55                   	push   rbp
 66b:	48 89 e5             	mov    rbp,rsp
 66e:	48 83 ec 30          	sub    rsp,0x30
 672:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
 675:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
 678:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
 67b:	89 4d d0             	mov    DWORD PTR [rbp-0x30],ecx
 67e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
 685:	00 00 
 687:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 68b:	31 c0                	xor    eax,eax
	int flag;
	char buffer[10];

	flag = 31337;
 68d:	c7 45 e8 69 7a 00 00 	mov    DWORD PTR [rbp-0x18],0x7a69
	buffer[0] = 'A';
 694:	c6 45 ee 41          	mov    BYTE PTR [rbp-0x12],0x41
}
 698:	90                   	nop
 699:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 69d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
 6a4:	00 00 
 6a6:	74 05                	je     6ad <test_function+0x43>
 6a8:	e8 93 fe ff ff       	call   540 <__stack_chk_fail@plt>
 6ad:	c9                   	leave  
 6ae:	c3                   	ret    

00000000000006af <main>:

int main() {
 6af:	55                   	push   rbp
 6b0:	48 89 e5             	mov    rbp,rsp
	test_function(1, 2, 3, 4);
 6b3:	b9 04 00 00 00       	mov    ecx,0x4
 6b8:	ba 03 00 00 00       	mov    edx,0x3
 6bd:	be 02 00 00 00       	mov    esi,0x2
 6c2:	bf 01 00 00 00       	mov    edi,0x1
 6c7:	e8 9e ff ff ff       	call   66a <test_function>
 6cc:	b8 00 00 00 00       	mov    eax,0x0
}
 6d1:	5d                   	pop    rbp
 6d2:	c3                   	ret    
 6d3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6da:	00 00 00 
 6dd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000006e0 <__libc_csu_init>:
 6e0:	41 57                	push   r15
 6e2:	41 56                	push   r14
 6e4:	49 89 d7             	mov    r15,rdx
 6e7:	41 55                	push   r13
 6e9:	41 54                	push   r12
 6eb:	4c 8d 25 c6 06 20 00 	lea    r12,[rip+0x2006c6]        # 200db8 <__frame_dummy_init_array_entry>
 6f2:	55                   	push   rbp
 6f3:	48 8d 2d c6 06 20 00 	lea    rbp,[rip+0x2006c6]        # 200dc0 <__init_array_end>
 6fa:	53                   	push   rbx
 6fb:	41 89 fd             	mov    r13d,edi
 6fe:	49 89 f6             	mov    r14,rsi
 701:	4c 29 e5             	sub    rbp,r12
 704:	48 83 ec 08          	sub    rsp,0x8
 708:	48 c1 fd 03          	sar    rbp,0x3
 70c:	e8 ff fd ff ff       	call   510 <_init>
 711:	48 85 ed             	test   rbp,rbp
 714:	74 20                	je     736 <__libc_csu_init+0x56>
 716:	31 db                	xor    ebx,ebx
 718:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 71f:	00 
 720:	4c 89 fa             	mov    rdx,r15
 723:	4c 89 f6             	mov    rsi,r14
 726:	44 89 ef             	mov    edi,r13d
 729:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 72d:	48 83 c3 01          	add    rbx,0x1
 731:	48 39 dd             	cmp    rbp,rbx
 734:	75 ea                	jne    720 <__libc_csu_init+0x40>
 736:	48 83 c4 08          	add    rsp,0x8
 73a:	5b                   	pop    rbx
 73b:	5d                   	pop    rbp
 73c:	41 5c                	pop    r12
 73e:	41 5d                	pop    r13
 740:	41 5e                	pop    r14
 742:	41 5f                	pop    r15
 744:	c3                   	ret    
 745:	90                   	nop
 746:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 74d:	00 00 00 

0000000000000750 <__libc_csu_fini>:
 750:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000000754 <_fini>:
 754:	48 83 ec 08          	sub    rsp,0x8
 758:	48 83 c4 08          	add    rsp,0x8
 75c:	c3                   	ret    

Disassembly of section .rodata:

0000000000000760 <_IO_stdin_used>:
 760:	01 00                	add    DWORD PTR [rax],eax
 762:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

0000000000000764 <__GNU_EH_FRAME_HDR>:
 764:	01 1b                	add    DWORD PTR [rbx],ebx
 766:	03 3b                	add    edi,DWORD PTR [rbx]
 768:	40 00 00             	add    BYTE PTR [rax],al
 76b:	00 07                	add    BYTE PTR [rdi],al
 76d:	00 00                	add    BYTE PTR [rax],al
 76f:	00 cc                	add    ah,cl
 771:	fd                   	std    
 772:	ff                   	(bad)  
 773:	ff 8c 00 00 00 ec fd 	dec    DWORD PTR [rax+rax*1-0x2140000]
 77a:	ff                   	(bad)  
 77b:	ff b4 00 00 00 fc fd 	push   QWORD PTR [rax+rax*1-0x2040000]
 782:	ff                   	(bad)  
 783:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
 787:	00 06                	add    BYTE PTR [rsi],al
 789:	ff                   	(bad)  
 78a:	ff                   	(bad)  
 78b:	ff cc                	dec    esp
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 4b ff             	add    BYTE PTR [rbx-0x1],cl
 792:	ff                   	(bad)  
 793:	ff                   	(bad)  
 794:	ec                   	in     al,dx
 795:	00 00                	add    BYTE PTR [rax],al
 797:	00 7c ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],bh
 79b:	ff 0c 01             	dec    DWORD PTR [rcx+rax*1]
 79e:	00 00                	add    BYTE PTR [rax],al
 7a0:	ec                   	in     al,dx
 7a1:	ff                   	(bad)  
 7a2:	ff                   	(bad)  
 7a3:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
	...

Disassembly of section .eh_frame:

00000000000007a8 <__FRAME_END__-0x124>:
 7a8:	14 00                	adc    al,0x0
 7aa:	00 00                	add    BYTE PTR [rax],al
 7ac:	00 00                	add    BYTE PTR [rax],al
 7ae:	00 00                	add    BYTE PTR [rax],al
 7b0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 7b3:	00 01                	add    BYTE PTR [rcx],al
 7b5:	78 10                	js     7c7 <__GNU_EH_FRAME_HDR+0x63>
 7b7:	01 1b                	add    DWORD PTR [rbx],ebx
 7b9:	0c 07                	or     al,0x7
 7bb:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 7c1:	00 00                	add    BYTE PTR [rax],al
 7c3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 7c6:	00 00                	add    BYTE PTR [rax],al
 7c8:	98                   	cwde   
 7c9:	fd                   	std    
 7ca:	ff                   	(bad)  
 7cb:	ff 2b                	jmp    FWORD PTR [rbx]
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
 7da:	00 00                	add    BYTE PTR [rax],al
 7dc:	00 00                	add    BYTE PTR [rax],al
 7de:	00 00                	add    BYTE PTR [rax],al
 7e0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 7e3:	00 01                	add    BYTE PTR [rcx],al
 7e5:	78 10                	js     7f7 <__GNU_EH_FRAME_HDR+0x93>
 7e7:	01 1b                	add    DWORD PTR [rbx],ebx
 7e9:	0c 07                	or     al,0x7
 7eb:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 7f1:	00 00                	add    BYTE PTR [rax],al
 7f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 7f6:	00 00                	add    BYTE PTR [rax],al
 7f8:	38 fd                	cmp    ch,bh
 7fa:	ff                   	(bad)  
 7fb:	ff 20                	jmp    QWORD PTR [rax]
 7fd:	00 00                	add    BYTE PTR [rax],al
 7ff:	00 00                	add    BYTE PTR [rax],al
 801:	0e                   	(bad)  
 802:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 805:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 808:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 80b:	80 00 3f             	add    BYTE PTR [rax],0x3f
 80e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 810:	2a 33                	sub    dh,BYTE PTR [rbx]
 812:	24 22                	and    al,0x22
 814:	00 00                	add    BYTE PTR [rax],al
 816:	00 00                	add    BYTE PTR [rax],al
 818:	14 00                	adc    al,0x0
 81a:	00 00                	add    BYTE PTR [rax],al
 81c:	44 00 00             	add    BYTE PTR [rax],r8b
 81f:	00 30                	add    BYTE PTR [rax],dh
 821:	fd                   	std    
 822:	ff                   	(bad)  
 823:	ff 08                	dec    DWORD PTR [rax]
	...
 82d:	00 00                	add    BYTE PTR [rax],al
 82f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 832:	00 00                	add    BYTE PTR [rax],al
 834:	5c                   	pop    rsp
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 32                	add    BYTE PTR [rdx],dh
 839:	fe                   	(bad)  
 83a:	ff                   	(bad)  
 83b:	ff 45 00             	inc    DWORD PTR [rbp+0x0]
 83e:	00 00                	add    BYTE PTR [rax],al
 840:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 843:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 849:	02 40 0c             	add    al,BYTE PTR [rax+0xc]
 84c:	07                   	(bad)  
 84d:	08 00                	or     BYTE PTR [rax],al
 84f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 852:	00 00                	add    BYTE PTR [rax],al
 854:	7c 00                	jl     856 <__GNU_EH_FRAME_HDR+0xf2>
 856:	00 00                	add    BYTE PTR [rax],al
 858:	57                   	push   rdi
 859:	fe                   	(bad)  
 85a:	ff                   	(bad)  
 85b:	ff 24 00             	jmp    QWORD PTR [rax+rax*1]
 85e:	00 00                	add    BYTE PTR [rax],al
 860:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 863:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 869:	5f                   	pop    rdi
 86a:	0c 07                	or     al,0x7
 86c:	08 00                	or     BYTE PTR [rax],al
 86e:	00 00                	add    BYTE PTR [rax],al
 870:	44 00 00             	add    BYTE PTR [rax],r8b
 873:	00 9c 00 00 00 68 fe 	add    BYTE PTR [rax+rax*1-0x1980000],bl
 87a:	ff                   	(bad)  
 87b:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
 87e:	00 00                	add    BYTE PTR [rax],al
 880:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
 883:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 889:	8e 03                	mov    es,WORD PTR [rbx]
 88b:	45 0e                	rex.RB (bad) 
 88d:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 893:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff863016e1 <_end+0xffffffff861006c9>
 899:	06                   	(bad)  
 89a:	48 0e                	rex.W (bad) 
 89c:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 8a2:	72 0e                	jb     8b2 <__GNU_EH_FRAME_HDR+0x14e>
 8a4:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 8a7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 8aa:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 8ad:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 8b0:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 8b3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 8b6:	08 00                	or     BYTE PTR [rax],al
 8b8:	10 00                	adc    BYTE PTR [rax],al
 8ba:	00 00                	add    BYTE PTR [rax],al
 8bc:	e4 00                	in     al,0x0
 8be:	00 00                	add    BYTE PTR [rax],al
 8c0:	90                   	nop
 8c1:	fe                   	(bad)  
 8c2:	ff                   	(bad)  
 8c3:	ff 02                	inc    DWORD PTR [rdx]
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 00                	add    BYTE PTR [rax],al
 8c9:	00 00                	add    BYTE PTR [rax],al
	...

00000000000008cc <__FRAME_END__>:
 8cc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200db8 <__frame_dummy_init_array_entry>:
  200db8:	60                   	(bad)  
  200db9:	06                   	(bad)  
  200dba:	00 00                	add    BYTE PTR [rax],al
  200dbc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000200dc0 <__do_global_dtors_aux_fini_array_entry>:
  200dc0:	20 06                	and    BYTE PTR [rsi],al
  200dc2:	00 00                	add    BYTE PTR [rax],al
  200dc4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000200dc8 <_DYNAMIC>:
  200dc8:	01 00                	add    DWORD PTR [rax],eax
  200dca:	00 00                	add    BYTE PTR [rax],al
  200dcc:	00 00                	add    BYTE PTR [rax],al
  200dce:	00 00                	add    BYTE PTR [rax],al
  200dd0:	01 00                	add    DWORD PTR [rax],eax
  200dd2:	00 00                	add    BYTE PTR [rax],al
  200dd4:	00 00                	add    BYTE PTR [rax],al
  200dd6:	00 00                	add    BYTE PTR [rax],al
  200dd8:	0c 00                	or     al,0x0
  200dda:	00 00                	add    BYTE PTR [rax],al
  200ddc:	00 00                	add    BYTE PTR [rax],al
  200dde:	00 00                	add    BYTE PTR [rax],al
  200de0:	10 05 00 00 00 00    	adc    BYTE PTR [rip+0x0],al        # 200de6 <_DYNAMIC+0x1e>
  200de6:	00 00                	add    BYTE PTR [rax],al
  200de8:	0d 00 00 00 00       	or     eax,0x0
  200ded:	00 00                	add    BYTE PTR [rax],al
  200def:	00 54 07 00          	add    BYTE PTR [rdi+rax*1+0x0],dl
  200df3:	00 00                	add    BYTE PTR [rax],al
  200df5:	00 00                	add    BYTE PTR [rax],al
  200df7:	00 19                	add    BYTE PTR [rcx],bl
  200df9:	00 00                	add    BYTE PTR [rax],al
  200dfb:	00 00                	add    BYTE PTR [rax],al
  200dfd:	00 00                	add    BYTE PTR [rax],al
  200dff:	00 b8 0d 20 00 00    	add    BYTE PTR [rax+0x200d],bh
  200e05:	00 00                	add    BYTE PTR [rax],al
  200e07:	00 1b                	add    BYTE PTR [rbx],bl
  200e09:	00 00                	add    BYTE PTR [rax],al
  200e0b:	00 00                	add    BYTE PTR [rax],al
  200e0d:	00 00                	add    BYTE PTR [rax],al
  200e0f:	00 08                	add    BYTE PTR [rax],cl
  200e11:	00 00                	add    BYTE PTR [rax],al
  200e13:	00 00                	add    BYTE PTR [rax],al
  200e15:	00 00                	add    BYTE PTR [rax],al
  200e17:	00 1a                	add    BYTE PTR [rdx],bl
  200e19:	00 00                	add    BYTE PTR [rax],al
  200e1b:	00 00                	add    BYTE PTR [rax],al
  200e1d:	00 00                	add    BYTE PTR [rax],al
  200e1f:	00 c0                	add    al,al
  200e21:	0d 20 00 00 00       	or     eax,0x20
  200e26:	00 00                	add    BYTE PTR [rax],al
  200e28:	1c 00                	sbb    al,0x0
  200e2a:	00 00                	add    BYTE PTR [rax],al
  200e2c:	00 00                	add    BYTE PTR [rax],al
  200e2e:	00 00                	add    BYTE PTR [rax],al
  200e30:	08 00                	or     BYTE PTR [rax],al
  200e32:	00 00                	add    BYTE PTR [rax],al
  200e34:	00 00                	add    BYTE PTR [rax],al
  200e36:	00 00                	add    BYTE PTR [rax],al
  200e38:	f5                   	cmc    
  200e39:	fe                   	(bad)  
  200e3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e3d:	00 00                	add    BYTE PTR [rax],al
  200e3f:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e45:	00 00                	add    BYTE PTR [rax],al
  200e47:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e4d <_DYNAMIC+0x85>
  200e4d:	00 00                	add    BYTE PTR [rax],al
  200e4f:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  200e52:	00 00                	add    BYTE PTR [rax],al
  200e54:	00 00                	add    BYTE PTR [rax],al
  200e56:	00 00                	add    BYTE PTR [rax],al
  200e58:	06                   	(bad)  
  200e59:	00 00                	add    BYTE PTR [rax],al
  200e5b:	00 00                	add    BYTE PTR [rax],al
  200e5d:	00 00                	add    BYTE PTR [rax],al
  200e5f:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
  200e65:	00 00                	add    BYTE PTR [rax],al
  200e67:	00 0a                	add    BYTE PTR [rdx],cl
  200e69:	00 00                	add    BYTE PTR [rax],al
  200e6b:	00 00                	add    BYTE PTR [rax],al
  200e6d:	00 00                	add    BYTE PTR [rax],al
  200e6f:	00 98 00 00 00 00    	add    BYTE PTR [rax+0x0],bl
  200e75:	00 00                	add    BYTE PTR [rax],al
  200e77:	00 0b                	add    BYTE PTR [rbx],cl
  200e79:	00 00                	add    BYTE PTR [rax],al
  200e7b:	00 00                	add    BYTE PTR [rax],al
  200e7d:	00 00                	add    BYTE PTR [rax],al
  200e7f:	00 18                	add    BYTE PTR [rax],bl
  200e81:	00 00                	add    BYTE PTR [rax],al
  200e83:	00 00                	add    BYTE PTR [rax],al
  200e85:	00 00                	add    BYTE PTR [rax],al
  200e87:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 200e8d <_DYNAMIC+0xc5>
	...
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 03                	add    BYTE PTR [rbx],al
  200e99:	00 00                	add    BYTE PTR [rax],al
  200e9b:	00 00                	add    BYTE PTR [rax],al
  200e9d:	00 00                	add    BYTE PTR [rax],al
  200e9f:	00 b8 0f 20 00 00    	add    BYTE PTR [rax+0x200f],bh
  200ea5:	00 00                	add    BYTE PTR [rax],al
  200ea7:	00 02                	add    BYTE PTR [rdx],al
  200ea9:	00 00                	add    BYTE PTR [rax],al
  200eab:	00 00                	add    BYTE PTR [rax],al
  200ead:	00 00                	add    BYTE PTR [rax],al
  200eaf:	00 18                	add    BYTE PTR [rax],bl
  200eb1:	00 00                	add    BYTE PTR [rax],al
  200eb3:	00 00                	add    BYTE PTR [rax],al
  200eb5:	00 00                	add    BYTE PTR [rax],al
  200eb7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  200eba:	00 00                	add    BYTE PTR [rax],al
  200ebc:	00 00                	add    BYTE PTR [rax],al
  200ebe:	00 00                	add    BYTE PTR [rax],al
  200ec0:	07                   	(bad)  
  200ec1:	00 00                	add    BYTE PTR [rax],al
  200ec3:	00 00                	add    BYTE PTR [rax],al
  200ec5:	00 00                	add    BYTE PTR [rax],al
  200ec7:	00 17                	add    BYTE PTR [rdi],dl
  200ec9:	00 00                	add    BYTE PTR [rax],al
  200ecb:	00 00                	add    BYTE PTR [rax],al
  200ecd:	00 00                	add    BYTE PTR [rax],al
  200ecf:	00 f8                	add    al,bh
  200ed1:	04 00                	add    al,0x0
  200ed3:	00 00                	add    BYTE PTR [rax],al
  200ed5:	00 00                	add    BYTE PTR [rax],al
  200ed7:	00 07                	add    BYTE PTR [rdi],al
  200ed9:	00 00                	add    BYTE PTR [rax],al
  200edb:	00 00                	add    BYTE PTR [rax],al
  200edd:	00 00                	add    BYTE PTR [rax],al
  200edf:	00 38                	add    BYTE PTR [rax],bh
  200ee1:	04 00                	add    al,0x0
  200ee3:	00 00                	add    BYTE PTR [rax],al
  200ee5:	00 00                	add    BYTE PTR [rax],al
  200ee7:	00 08                	add    BYTE PTR [rax],cl
  200ee9:	00 00                	add    BYTE PTR [rax],al
  200eeb:	00 00                	add    BYTE PTR [rax],al
  200eed:	00 00                	add    BYTE PTR [rax],al
  200eef:	00 c0                	add    al,al
  200ef1:	00 00                	add    BYTE PTR [rax],al
  200ef3:	00 00                	add    BYTE PTR [rax],al
  200ef5:	00 00                	add    BYTE PTR [rax],al
  200ef7:	00 09                	add    BYTE PTR [rcx],cl
  200ef9:	00 00                	add    BYTE PTR [rax],al
  200efb:	00 00                	add    BYTE PTR [rax],al
  200efd:	00 00                	add    BYTE PTR [rax],al
  200eff:	00 18                	add    BYTE PTR [rax],bl
  200f01:	00 00                	add    BYTE PTR [rax],al
  200f03:	00 00                	add    BYTE PTR [rax],al
  200f05:	00 00                	add    BYTE PTR [rax],al
  200f07:	00 1e                	add    BYTE PTR [rsi],bl
  200f09:	00 00                	add    BYTE PTR [rax],al
  200f0b:	00 00                	add    BYTE PTR [rax],al
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 08                	add    BYTE PTR [rax],cl
  200f11:	00 00                	add    BYTE PTR [rax],al
  200f13:	00 00                	add    BYTE PTR [rax],al
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 fb                	add    bl,bh
  200f19:	ff                   	(bad)  
  200f1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 01                	add    BYTE PTR [rcx],al
  200f21:	00 00                	add    BYTE PTR [rax],al
  200f23:	08 00                	or     BYTE PTR [rax],al
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 fe                	add    dh,bh
  200f29:	ff                   	(bad)  
  200f2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f2d:	00 00                	add    BYTE PTR [rax],al
  200f2f:	00 08                	add    BYTE PTR [rax],cl
  200f31:	04 00                	add    al,0x0
  200f33:	00 00                	add    BYTE PTR [rax],al
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 ff                	add    bh,bh
  200f39:	ff                   	(bad)  
  200f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f3d:	00 00                	add    BYTE PTR [rax],al
  200f3f:	00 01                	add    BYTE PTR [rcx],al
  200f41:	00 00                	add    BYTE PTR [rax],al
  200f43:	00 00                	add    BYTE PTR [rax],al
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 f0                	add    al,dh
  200f49:	ff                   	(bad)  
  200f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f4d:	00 00                	add    BYTE PTR [rax],al
  200f4f:	00 f8                	add    al,bh
  200f51:	03 00                	add    eax,DWORD PTR [rax]
  200f53:	00 00                	add    BYTE PTR [rax],al
  200f55:	00 00                	add    BYTE PTR [rax],al
  200f57:	00 f9                	add    cl,bh
  200f59:	ff                   	(bad)  
  200f5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f5d:	00 00                	add    BYTE PTR [rax],al
  200f5f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fb8 <_GLOBAL_OFFSET_TABLE_>:
  200fb8:	c8 0d 20 00          	enter  0x200d,0x0
	...
  200fd0:	46 05 00 00 00 00    	rex.RX add eax,0x0
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x498>
   a:	74 75                	je     81 <_init-0x48f>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x489>
  19:	74 75                	je     90 <_init-0x480>
  1b:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 37                	and    BYTE PTR [rdi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	6a 06                	push   0x6
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	da 00                	fiadd  DWORD PTR [rax]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	e1 14                	loope  22 <_init-0x4ee>
   e:	00 00                	add    BYTE PTR [rax],al
  10:	0c 71                	or     al,0x71
  12:	20 00                	and    BYTE PTR [rax],al
  14:	00 c3                	add    bl,al
  16:	03 00                	add    eax,DWORD PTR [rax]
  18:	00 6a 06             	add    BYTE PTR [rdx+0x6],ch
  1b:	00 00                	add    BYTE PTR [rax],al
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
	...
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	02 3f                	add    bh,BYTE PTR [rdi]
  33:	26 00 00             	add    BYTE PTR es:[rax],al
  36:	01 09                	add    DWORD PTR [rcx],ecx
  38:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
  3b:	00 af 06 00 00 00    	add    BYTE PTR [rdi+0x6],ch
  41:	00 00                	add    BYTE PTR [rax],al
  43:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  46:	00 00                	add    BYTE PTR [rax],al
  48:	00 00                	add    BYTE PTR [rax],al
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	01 9c 03 04 05 69 6e 	add    DWORD PTR [rbx+rax*1+0x6e690504],ebx
  53:	74 00                	je     55 <_init-0x4bb>
  55:	04 70                	add    al,0x70
  57:	25 00 00 01 01       	and    eax,0x1010000
  5c:	6a 06                	push   0x6
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	00 00                	add    BYTE PTR [rax],al
  62:	00 00                	add    BYTE PTR [rax],al
  64:	45 00 00             	add    BYTE PTR [r8],r8b
  67:	00 00                	add    BYTE PTR [rax],al
  69:	00 00                	add    BYTE PTR [rax],al
  6b:	00 01                	add    BYTE PTR [rcx],al
  6d:	9c                   	pushf  
  6e:	bf 00 00 00 05       	mov    edi,0x5000000
  73:	61                   	(bad)  
  74:	00 01                	add    BYTE PTR [rcx],al
  76:	01 4e 00             	add    DWORD PTR [rsi+0x0],ecx
  79:	00 00                	add    BYTE PTR [rax],al
  7b:	02 91 4c 05 62 00    	add    dl,BYTE PTR [rcx+0x62054c]
  81:	01 01                	add    DWORD PTR [rcx],eax
  83:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
  86:	00 02                	add    BYTE PTR [rdx],al
  88:	91                   	xchg   ecx,eax
  89:	48 05 63 00 01 01    	add    rax,0x1010063
  8f:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
  92:	00 02                	add    BYTE PTR [rdx],al
  94:	91                   	xchg   ecx,eax
  95:	44 05 64 00 01 01    	rex.R add eax,0x1010064
  9b:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
  9e:	00 02                	add    BYTE PTR [rdx],al
  a0:	91                   	xchg   ecx,eax
  a1:	40 06                	rex (bad) 
  a3:	af                   	scas   eax,DWORD PTR es:[rdi]
  a4:	1c 00                	sbb    al,0x0
  a6:	00 01                	add    BYTE PTR [rcx],al
  a8:	02 4e 00             	add    cl,BYTE PTR [rsi+0x0]
  ab:	00 00                	add    BYTE PTR [rax],al
  ad:	02 91 58 06 6a 20    	add    dl,BYTE PTR [rcx+0x206a0658]
  b3:	00 00                	add    BYTE PTR [rax],al
  b5:	01 03                	add    DWORD PTR [rbx],eax
  b7:	bf 00 00 00 02       	mov    edi,0x2000000
  bc:	91                   	xchg   ecx,eax
  bd:	5e                   	pop    rsi
  be:	00 07                	add    BYTE PTR [rdi],al
  c0:	d6                   	(bad)  
  c1:	00 00                	add    BYTE PTR [rax],al
  c3:	00 cf                	add    bh,cl
  c5:	00 00                	add    BYTE PTR [rax],al
  c7:	00 08                	add    BYTE PTR [rax],cl
  c9:	cf                   	iret   
  ca:	00 00                	add    BYTE PTR [rax],al
  cc:	00 09                	add    BYTE PTR [rcx],cl
  ce:	00 09                	add    BYTE PTR [rcx],cl
  d0:	08 07                	or     BYTE PTR [rdi],al
  d2:	73 18                	jae    ec <_init-0x424>
  d4:	00 00                	add    BYTE PTR [rax],al
  d6:	09 01                	or     DWORD PTR [rcx],eax
  d8:	06                   	(bad)  
  d9:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  da:	16                   	(bad)  
  db:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <_end+0x2eb02fe>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	99                   	cdq    
  12:	42 17                	rex.X (bad) 
  14:	00 00                	add    BYTE PTR [rax],al
  16:	02 2e                	add    ch,BYTE PTR [rsi]
  18:	00 3f                	add    BYTE PTR [rdi],bh
  1a:	19 03                	sbb    DWORD PTR [rbx],eax
  1c:	0e                   	(bad)  
  1d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  1f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  21:	49 13 11             	adc    rdx,QWORD PTR [r9]
  24:	01 12                	add    DWORD PTR [rdx],edx
  26:	07                   	(bad)  
  27:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
  2e:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
  31:	0b 0b                	or     ecx,DWORD PTR [rbx]
  33:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  36:	08 00                	or     BYTE PTR [rax],al
  38:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
  3b:	01 3f                	add    DWORD PTR [rdi],edi
  3d:	19 03                	sbb    DWORD PTR [rbx],eax
  3f:	0e                   	(bad)  
  40:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  42:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  44:	27                   	(bad)  
  45:	19 11                	sbb    DWORD PTR [rcx],edx
  47:	01 12                	add    DWORD PTR [rdx],edx
  49:	07                   	(bad)  
  4a:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
  51:	00 00                	add    BYTE PTR [rax],al
  53:	05 05 00 03 08       	add    eax,0x8030005
  58:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  5a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  5c:	49 13 02             	adc    rax,QWORD PTR [r10]
  5f:	18 00                	sbb    BYTE PTR [rax],al
  61:	00 06                	add    BYTE PTR [rsi],al
  63:	34 00                	xor    al,0x0
  65:	03 0e                	add    ecx,DWORD PTR [rsi]
  67:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  69:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  6b:	49 13 02             	adc    rax,QWORD PTR [r10]
  6e:	18 00                	sbb    BYTE PTR [rax],al
  70:	00 07                	add    BYTE PTR [rdi],al
  72:	01 01                	add    DWORD PTR [rcx],eax
  74:	49 13 01             	adc    rax,QWORD PTR [r9]
  77:	13 00                	adc    eax,DWORD PTR [rax]
  79:	00 08                	add    BYTE PTR [rax],cl
  7b:	21 00                	and    DWORD PTR [rax],eax
  7d:	49 13 2f             	adc    rbp,QWORD PTR [r15]
  80:	0b 00                	or     eax,DWORD PTR [rax]
  82:	00 09                	add    BYTE PTR [rcx],cl
  84:	24 00                	and    al,0x0
  86:	0b 0b                	or     ecx,DWORD PTR [rbx]
  88:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  8b:	0e                   	(bad)  
  8c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	76 00                	jbe    2 <_init-0x50e>
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	55                   	push   rbp
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <_init-0x47f>
  1e:	72 2f                	jb     4f <_init-0x4c1>
  20:	78 38                	js     5a <_init-0x4b6>
  22:	36 5f                	ss pop rdi
  24:	36 34 2d             	ss xor al,0x2d
  27:	6c                   	ins    BYTE PTR es:[rdi],dx
  28:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  2f:	75 2f                	jne    60 <_init-0x4b0>
  31:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	73 74                	jae    b0 <_init-0x460>
  3c:	61                   	(bad)  
  3d:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  40:	65 78 61             	gs js  a4 <_init-0x46c>
  43:	6d                   	ins    DWORD PTR es:[rdi],dx
  44:	70 6c                	jo     b2 <_init-0x45e>
  46:	65 2e 63 00          	gs movsxd eax,DWORD PTR cs:[rax]
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
  4f:	64 63 2d 70 72 65 64 	movsxd ebp,DWORD PTR fs:[rip+0x64657270]        # 646572c6 <_end+0x644562ae>
  56:	65 66 2e 68 00 01    	gs cs pushw 0x100
  5c:	00 00                	add    BYTE PTR [rax],al
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	09 02                	or     DWORD PTR [rdx],eax
  62:	6a 06                	push   0x6
  64:	00 00                	add    BYTE PTR [rax],al
  66:	00 00                	add    BYTE PTR [rax],al
  68:	00 00                	add    BYTE PTR [rax],al
  6a:	01 08                	add    DWORD PTR [rax],ecx
  6c:	3c e8                	cmp    al,0xe8
  6e:	75 4b                	jne    bb <_init-0x455>
  70:	08 68 4b             	or     BYTE PTR [rax+0x4b],ch
  73:	08 c9                	or     cl,cl
  75:	02 02                	add    al,BYTE PTR [rdx]
  77:	00 01                	add    BYTE PTR [rcx],al
  79:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	5f                   	pop    rdi
       2:	55                   	push   rbp
       3:	49                   	rex.WB
       4:	4e 54                	rex.WRX push rsp
       6:	5f                   	pop    rdi
       7:	4c                   	rex.WR
       8:	45                   	rex.RB
       9:	41 53                	push   r11
       b:	54                   	push   rsp
       c:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
       f:	41 58                	pop    r8
      11:	5f                   	pop    rdi
      12:	5f                   	pop    rdi
      13:	20 30                	and    BYTE PTR [rax],dh
      15:	78 66                	js     7d <_init-0x493>
      17:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
      1b:	46                   	rex.RX
      1c:	4c 54                	rex.WR push rsp
      1e:	36 34 5f             	ss xor al,0x5f
      21:	48                   	rex.W
      22:	41 53                	push   r11
      24:	5f                   	pop    rdi
      25:	44                   	rex.R
      26:	45                   	rex.RB
      27:	4e                   	rex.WRX
      28:	4f 52                	rex.WRXB push r10
      2a:	4d 5f                	rex.WRB pop r15
      2c:	5f                   	pop    rdi
      2d:	20 31                	and    BYTE PTR [rcx],dh
      2f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      32:	46                   	rex.RX
      33:	4c 54                	rex.WR push rsp
      35:	36 34 58             	ss xor al,0x58
      38:	5f                   	pop    rdi
      39:	4d                   	rex.WRB
      3a:	41                   	rex.B
      3b:	4e 54                	rex.WRX push rsp
      3d:	5f                   	pop    rdi
      3e:	44                   	rex.R
      3f:	49                   	rex.WB
      40:	47 5f                	rex.RXB pop r15
      42:	5f                   	pop    rdi
      43:	20 36                	and    BYTE PTR [rsi],dh
      45:	34 00                	xor    al,0x0
      47:	5f                   	pop    rdi
      48:	5f                   	pop    rdi
      49:	46                   	rex.RX
      4a:	4c 54                	rex.WR push rsp
      4c:	33 32                	xor    esi,DWORD PTR [rdx]
      4e:	5f                   	pop    rdi
      4f:	44                   	rex.R
      50:	49                   	rex.WB
      51:	47 5f                	rex.RXB pop r15
      53:	5f                   	pop    rdi
      54:	20 36                	and    BYTE PTR [rsi],dh
      56:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      59:	46                   	rex.RX
      5a:	4c 54                	rex.WR push rsp
      5c:	36 34 58             	ss xor al,0x58
      5f:	5f                   	pop    rdi
      60:	4d                   	rex.WRB
      61:	49                   	rex.WB
      62:	4e 5f                	rex.WRX pop rdi
      64:	45 58                	rex.RB pop r8
      66:	50                   	push   rax
      67:	5f                   	pop    rdi
      68:	5f                   	pop    rdi
      69:	20 28                	and    BYTE PTR [rax],ch
      6b:	2d 31 36 33 38       	sub    eax,0x38333631
      70:	31 29                	xor    DWORD PTR [rcx],ebp
      72:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      75:	55                   	push   rbp
      76:	49                   	rex.WB
      77:	4e 54                	rex.WRX push rsp
      79:	5f                   	pop    rdi
      7a:	4c                   	rex.WR
      7b:	45                   	rex.RB
      7c:	41 53                	push   r11
      7e:	54                   	push   rsp
      7f:	33 32                	xor    esi,DWORD PTR [rdx]
      81:	5f                   	pop    rdi
      82:	4d                   	rex.WRB
      83:	41 58                	pop    r8
      85:	5f                   	pop    rdi
      86:	5f                   	pop    rdi
      87:	20 30                	and    BYTE PTR [rax],dh
      89:	78 66                	js     f1 <_init-0x41f>
      8b:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
      92:	55 
      93:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      96:	53                   	push   rbx
      97:	49 5a                	rex.WB pop r10
      99:	45                   	rex.RB
      9a:	4f                   	rex.WRXB
      9b:	46 5f                	rex.RX pop rdi
      9d:	53                   	push   rbx
      9e:	49 5a                	rex.WB pop r10
      a0:	45 5f                	rex.RB pop r15
      a2:	54                   	push   rsp
      a3:	5f                   	pop    rdi
      a4:	5f                   	pop    rdi
      a5:	20 38                	and    BYTE PTR [rax],bh
      a7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      aa:	47                   	rex.RXB
      ab:	43                   	rex.XB
      ac:	43 5f                	rex.XB pop r15
      ae:	41 54                	push   r12
      b0:	4f                   	rex.WRXB
      b1:	4d                   	rex.WRB
      b2:	49                   	rex.WB
      b3:	43 5f                	rex.XB pop r15
      b5:	4c                   	rex.WR
      b6:	4f                   	rex.WRXB
      b7:	4e                   	rex.WRX
      b8:	47 5f                	rex.RXB pop r15
      ba:	4c                   	rex.WR
      bb:	4f                   	rex.WRXB
      bc:	43                   	rex.XB
      bd:	4b 5f                	rex.WXB pop r15
      bf:	46 52                	rex.RX push rdx
      c1:	45                   	rex.RB
      c2:	45 20 32             	and    BYTE PTR [r10],r14b
      c5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      c8:	46                   	rex.RX
      c9:	4c 54                	rex.WR push rsp
      cb:	33 32                	xor    esi,DWORD PTR [rdx]
      cd:	58                   	pop    rax
      ce:	5f                   	pop    rdi
      cf:	48                   	rex.W
      d0:	41 53                	push   r11
      d2:	5f                   	pop    rdi
      d3:	44                   	rex.R
      d4:	45                   	rex.RB
      d5:	4e                   	rex.WRX
      d6:	4f 52                	rex.WRXB push r10
      d8:	4d 5f                	rex.WRB pop r15
      da:	5f                   	pop    rdi
      db:	20 31                	and    BYTE PTR [rcx],dh
      dd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      e0:	75 6e                	jne    150 <_init-0x3c0>
      e2:	69 78 20 31 00 5f 5f 	imul   edi,DWORD PTR [rax+0x20],0x5f5f0031
      e9:	53                   	push   rbx
      ea:	54                   	push   rsp
      eb:	44                   	rex.R
      ec:	43 5f                	rex.XB pop r15
      ee:	56                   	push   rsi
      ef:	45 52                	rex.RB push r10
      f1:	53                   	push   rbx
      f2:	49                   	rex.WB
      f3:	4f                   	rex.WRXB
      f4:	4e 5f                	rex.WRX pop rdi
      f6:	5f                   	pop    rdi
      f7:	20 32                	and    BYTE PTR [rdx],dh
      f9:	30 31                	xor    BYTE PTR [rcx],dh
      fb:	31 31                	xor    DWORD PTR [rcx],esi
      fd:	32 4c 00 5f          	xor    cl,BYTE PTR [rax+rax*1+0x5f]
     101:	5f                   	pop    rdi
     102:	53                   	push   rbx
     103:	49 5a                	rex.WB pop r10
     105:	45                   	rex.RB
     106:	4f                   	rex.WRXB
     107:	46 5f                	rex.RX pop rdi
     109:	50                   	push   rax
     10a:	4f                   	rex.WRXB
     10b:	49                   	rex.WB
     10c:	4e 54                	rex.WRX push rsp
     10e:	45 52                	rex.RB push r10
     110:	5f                   	pop    rdi
     111:	5f                   	pop    rdi
     112:	20 38                	and    BYTE PTR [rax],bh
     114:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     117:	57                   	push   rdi
     118:	43                   	rex.XB
     119:	48                   	rex.W
     11a:	41 52                	push   r10
     11c:	5f                   	pop    rdi
     11d:	57                   	push   rdi
     11e:	49                   	rex.WB
     11f:	44 54                	rex.R push rsp
     121:	48 5f                	rex.W pop rdi
     123:	5f                   	pop    rdi
     124:	20 33                	and    BYTE PTR [rbx],dh
     126:	32 00                	xor    al,BYTE PTR [rax]
     128:	5f                   	pop    rdi
     129:	5f                   	pop    rdi
     12a:	44                   	rex.R
     12b:	45                   	rex.RB
     12c:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
     12f:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     132:	49                   	rex.WB
     133:	4e 5f                	rex.WRX pop rdi
     135:	45 58                	rex.RB pop r8
     137:	50                   	push   rax
     138:	5f                   	pop    rdi
     139:	5f                   	pop    rdi
     13a:	20 28                	and    BYTE PTR [rax],ch
     13c:	2d 36 31 34 32       	sub    eax,0x32343136
     141:	29 00                	sub    DWORD PTR [rax],eax
     143:	5f                   	pop    rdi
     144:	5f                   	pop    rdi
     145:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
     148:	65 5f                	gs pop rdi
     14a:	6d                   	ins    DWORD PTR es:[rdi],dx
     14b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     14c:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     14f:	5f                   	pop    rdi
     150:	73 6d                	jae    1bf <_init-0x351>
     152:	61                   	(bad)  
     153:	6c                   	ins    BYTE PTR es:[rdi],dx
     154:	6c                   	ins    BYTE PTR es:[rdi],dx
     155:	5f                   	pop    rdi
     156:	5f                   	pop    rdi
     157:	20 31                	and    BYTE PTR [rcx],dh
     159:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     15c:	44                   	rex.R
     15d:	45                   	rex.RB
     15e:	43                   	rex.XB
     15f:	36 34 5f             	ss xor al,0x5f
     162:	4d                   	rex.WRB
     163:	41                   	rex.B
     164:	4e 54                	rex.WRX push rsp
     166:	5f                   	pop    rdi
     167:	44                   	rex.R
     168:	49                   	rex.WB
     169:	47 5f                	rex.RXB pop r15
     16b:	5f                   	pop    rdi
     16c:	20 31                	and    BYTE PTR [rcx],dh
     16e:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     172:	44                   	rex.R
     173:	45                   	rex.RB
     174:	43                   	rex.XB
     175:	36 34 5f             	ss xor al,0x5f
     178:	4d                   	rex.WRB
     179:	49                   	rex.WB
     17a:	4e 5f                	rex.WRX pop rdi
     17c:	45 58                	rex.RB pop r8
     17e:	50                   	push   rax
     17f:	5f                   	pop    rdi
     180:	5f                   	pop    rdi
     181:	20 28                	and    BYTE PTR [rax],ch
     183:	2d 33 38 32 29       	sub    eax,0x29323833
     188:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     18b:	44                   	rex.R
     18c:	42                   	rex.X
     18d:	4c 5f                	rex.WR pop rdi
     18f:	4d                   	rex.WRB
     190:	49                   	rex.WB
     191:	4e 5f                	rex.WRX pop rdi
     193:	5f                   	pop    rdi
     194:	20 28                	and    BYTE PTR [rax],ch
     196:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     19a:	62                   	(bad)  
     19b:	6c                   	ins    BYTE PTR es:[rdi],dx
     19c:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
     19f:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     1a2:	35 30 37 33 38       	xor    eax,0x38333730
     1a7:	35 38 35 30 37       	xor    eax,0x37303538
     1ac:	32 30                	xor    dh,BYTE PTR [rax]
     1ae:	31 33                	xor    DWORD PTR [rbx],esi
     1b0:	38 33                	cmp    BYTE PTR [rbx],dh
     1b2:	30 39                	xor    BYTE PTR [rcx],bh
     1b4:	30 32                	xor    BYTE PTR [rdx],dh
     1b6:	33 32                	xor    esi,DWORD PTR [rdx]
     1b8:	37                   	(bad)  
     1b9:	31 37                	xor    DWORD PTR [rdi],esi
     1bb:	33 33                	xor    esi,DWORD PTR [rbx]
     1bd:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
     1c0:	34 30                	xor    al,0x30
     1c2:	36 65 2d 33 30 38 4c 	ss gs sub eax,0x4c383033
     1c9:	29 00                	sub    DWORD PTR [rax],eax
     1cb:	5f                   	pop    rdi
     1cc:	5f                   	pop    rdi
     1cd:	55                   	push   rbp
     1ce:	49                   	rex.WB
     1cf:	4e 54                	rex.WRX push rsp
     1d1:	5f                   	pop    rdi
     1d2:	46                   	rex.RX
     1d3:	41 53                	push   r11
     1d5:	54                   	push   rsp
     1d6:	36 34 5f             	ss xor al,0x5f
     1d9:	4d                   	rex.WRB
     1da:	41 58                	pop    r8
     1dc:	5f                   	pop    rdi
     1dd:	5f                   	pop    rdi
     1de:	20 30                	and    BYTE PTR [rax],dh
     1e0:	78 66                	js     248 <_init-0x2c8>
     1e2:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     1e9:	66 66 66 66 66 66 66 
     1f0:	66 55                	push   bp
     1f2:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     1f6:	75 6e                	jne    266 <_init-0x2aa>
     1f8:	69 78 5f 5f 20 31 00 	imul   edi,DWORD PTR [rax+0x5f],0x31205f
     1ff:	5f                   	pop    rdi
     200:	5f                   	pop    rdi
     201:	55                   	push   rbp
     202:	49                   	rex.WB
     203:	4e 54                	rex.WRX push rsp
     205:	50                   	push   rax
     206:	54                   	push   rsp
     207:	52                   	push   rdx
     208:	5f                   	pop    rdi
     209:	54                   	push   rsp
     20a:	59                   	pop    rcx
     20b:	50                   	push   rax
     20c:	45 5f                	rex.RB pop r15
     20e:	5f                   	pop    rdi
     20f:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     213:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     217:	73 69                	jae    282 <_init-0x28e>
     219:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     21b:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     220:	74 00                	je     222 <_init-0x2ee>
     222:	5f                   	pop    rdi
     223:	5f                   	pop    rdi
     224:	46                   	rex.RX
     225:	4c 54                	rex.WR push rsp
     227:	33 32                	xor    esi,DWORD PTR [rdx]
     229:	58                   	pop    rax
     22a:	5f                   	pop    rdi
     22b:	4d                   	rex.WRB
     22c:	41 58                	pop    r8
     22e:	5f                   	pop    rdi
     22f:	45 58                	rex.RB pop r8
     231:	50                   	push   rax
     232:	5f                   	pop    rdi
     233:	5f                   	pop    rdi
     234:	20 31                	and    BYTE PTR [rcx],dh
     236:	30 32                	xor    BYTE PTR [rdx],dh
     238:	34 00                	xor    al,0x0
     23a:	5f                   	pop    rdi
     23b:	5f                   	pop    rdi
     23c:	4c                   	rex.WR
     23d:	44                   	rex.R
     23e:	42                   	rex.X
     23f:	4c 5f                	rex.WR pop rdi
     241:	4d                   	rex.WRB
     242:	41 58                	pop    r8
     244:	5f                   	pop    rdi
     245:	31 30                	xor    DWORD PTR [rax],esi
     247:	5f                   	pop    rdi
     248:	45 58                	rex.RB pop r8
     24a:	50                   	push   rax
     24b:	5f                   	pop    rdi
     24c:	5f                   	pop    rdi
     24d:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
     250:	33 32                	xor    esi,DWORD PTR [rdx]
     252:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     255:	44                   	rex.R
     256:	45                   	rex.RB
     257:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     25a:	5f                   	pop    rdi
     25b:	4d                   	rex.WRB
     25c:	49                   	rex.WB
     25d:	4e 5f                	rex.WRX pop rdi
     25f:	5f                   	pop    rdi
     260:	20 31                	and    BYTE PTR [rcx],dh
     262:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
     268:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     26b:	46                   	rex.RX
     26c:	4c 54                	rex.WR push rsp
     26e:	36 34 5f             	ss xor al,0x5f
     271:	4d                   	rex.WRB
     272:	41 58                	pop    r8
     274:	5f                   	pop    rdi
     275:	5f                   	pop    rdi
     276:	20 31                	and    BYTE PTR [rcx],dh
     278:	2e 37                	cs (bad) 
     27a:	39 37                	cmp    DWORD PTR [rdi],esi
     27c:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
     27f:	31 33                	xor    DWORD PTR [rbx],esi
     281:	34 38                	xor    al,0x38
     283:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
     286:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 313832c3 <_end+0x311822ab>
     28c:	34 35                	xor    al,0x35
     28e:	32 37                	xor    dh,BYTE PTR [rdi]
     290:	34 32                	xor    al,0x32
     292:	33 37                	xor    esi,DWORD PTR [rdi]
     294:	33 31                	xor    esi,DWORD PTR [rcx]
     296:	37                   	(bad)  
     297:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
     29a:	35 37 65 2b 33       	xor    eax,0x332b6537
     29f:	30 38                	xor    BYTE PTR [rax],bh
     2a1:	46                   	rex.RX
     2a2:	36 34 00             	ss xor al,0x0
     2a5:	5f                   	pop    rdi
     2a6:	5f                   	pop    rdi
     2a7:	46                   	rex.RX
     2a8:	4c 54                	rex.WR push rsp
     2aa:	33 32                	xor    esi,DWORD PTR [rdx]
     2ac:	58                   	pop    rax
     2ad:	5f                   	pop    rdi
     2ae:	48                   	rex.W
     2af:	41 53                	push   r11
     2b1:	5f                   	pop    rdi
     2b2:	51                   	push   rcx
     2b3:	55                   	push   rbp
     2b4:	49                   	rex.WB
     2b5:	45 54                	rex.RB push r12
     2b7:	5f                   	pop    rdi
     2b8:	4e                   	rex.WRX
     2b9:	41                   	rex.B
     2ba:	4e 5f                	rex.WRX pop rdi
     2bc:	5f                   	pop    rdi
     2bd:	20 31                	and    BYTE PTR [rcx],dh
     2bf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2c2:	53                   	push   rbx
     2c3:	49 5a                	rex.WB pop r10
     2c5:	45                   	rex.RB
     2c6:	4f                   	rex.WRXB
     2c7:	46 5f                	rex.RX pop rdi
     2c9:	57                   	push   rdi
     2ca:	49                   	rex.WB
     2cb:	4e 54                	rex.WRX push rsp
     2cd:	5f                   	pop    rdi
     2ce:	54                   	push   rsp
     2cf:	5f                   	pop    rdi
     2d0:	5f                   	pop    rdi
     2d1:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
     2d4:	5f                   	pop    rdi
     2d5:	5f                   	pop    rdi
     2d6:	46                   	rex.RX
     2d7:	4c 54                	rex.WR push rsp
     2d9:	31 32                	xor    DWORD PTR [rdx],esi
     2db:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
     2de:	41 53                	push   r11
     2e0:	5f                   	pop    rdi
     2e1:	49                   	rex.WB
     2e2:	4e                   	rex.WRX
     2e3:	46                   	rex.RX
     2e4:	49                   	rex.WB
     2e5:	4e                   	rex.WRX
     2e6:	49 54                	rex.WB push r12
     2e8:	59                   	pop    rcx
     2e9:	5f                   	pop    rdi
     2ea:	5f                   	pop    rdi
     2eb:	20 31                	and    BYTE PTR [rcx],dh
     2ed:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2f0:	44                   	rex.R
     2f1:	42                   	rex.X
     2f2:	4c 5f                	rex.WR pop rdi
     2f4:	4d                   	rex.WRB
     2f5:	41 58                	pop    r8
     2f7:	5f                   	pop    rdi
     2f8:	31 30                	xor    DWORD PTR [rax],esi
     2fa:	5f                   	pop    rdi
     2fb:	45 58                	rex.RB pop r8
     2fd:	50                   	push   rax
     2fe:	5f                   	pop    rdi
     2ff:	5f                   	pop    rdi
     300:	20 33                	and    BYTE PTR [rbx],dh
     302:	30 38                	xor    BYTE PTR [rax],bh
     304:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     307:	46                   	rex.RX
     308:	4c 54                	rex.WR push rsp
     30a:	36 34 5f             	ss xor al,0x5f
     30d:	4d                   	rex.WRB
     30e:	49                   	rex.WB
     30f:	4e 5f                	rex.WRX pop rdi
     311:	5f                   	pop    rdi
     312:	20 32                	and    BYTE PTR [rdx],dh
     314:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     317:	35 30 37 33 38       	xor    eax,0x38333730
     31c:	35 38 35 30 37       	xor    eax,0x37303538
     321:	32 30                	xor    dh,BYTE PTR [rax]
     323:	31 33                	xor    DWORD PTR [rbx],esi
     325:	38 33                	cmp    BYTE PTR [rbx],dh
     327:	30 39                	xor    BYTE PTR [rcx],bh
     329:	30 32                	xor    BYTE PTR [rdx],dh
     32b:	33 32                	xor    esi,DWORD PTR [rdx]
     32d:	37                   	(bad)  
     32e:	31 37                	xor    DWORD PTR [rdi],esi
     330:	33 33                	xor    esi,DWORD PTR [rbx]
     332:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
     335:	34 30                	xor    al,0x30
     337:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
     33e:	36 34 00             	ss xor al,0x0
     341:	5f                   	pop    rdi
     342:	5f                   	pop    rdi
     343:	61                   	(bad)  
     344:	6d                   	ins    DWORD PTR es:[rdi],dx
     345:	64 36 34 20          	fs ss xor al,0x20
     349:	31 00                	xor    DWORD PTR [rax],eax
     34b:	5f                   	pop    rdi
     34c:	5f                   	pop    rdi
     34d:	4c                   	rex.WR
     34e:	44                   	rex.R
     34f:	42                   	rex.X
     350:	4c 5f                	rex.WR pop rdi
     352:	4d                   	rex.WRB
     353:	49                   	rex.WB
     354:	4e 5f                	rex.WRX pop rdi
     356:	5f                   	pop    rdi
     357:	20 33                	and    BYTE PTR [rbx],dh
     359:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
     35c:	32 31                	xor    dh,BYTE PTR [rcx]
     35e:	30 33                	xor    BYTE PTR [rbx],dh
     360:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
     363:	31 31                	xor    DWORD PTR [rcx],esi
     365:	32 30                	xor    dh,BYTE PTR [rax]
     367:	39 33                	cmp    DWORD PTR [rbx],esi
     369:	35 30 36 32 36       	xor    eax,0x36323630
     36e:	32 36                	xor    dh,BYTE PTR [rsi]
     370:	37                   	(bad)  
     371:	37                   	(bad)  
     372:	38 31                	cmp    BYTE PTR [rcx],dh
     374:	37                   	(bad)  
     375:	33 32                	xor    esi,DWORD PTR [rdx]
     377:	31 37                	xor    DWORD PTR [rdi],esi
     379:	35 32 36 30 65       	xor    eax,0x65303632
     37e:	2d 34 39 33 32       	sub    eax,0x32333934
     383:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     387:	49                   	rex.WB
     388:	4e 54                	rex.WRX push rsp
     38a:	5f                   	pop    rdi
     38b:	4c                   	rex.WR
     38c:	45                   	rex.RB
     38d:	41 53                	push   r11
     38f:	54                   	push   rsp
     390:	33 32                	xor    esi,DWORD PTR [rdx]
     392:	5f                   	pop    rdi
     393:	57                   	push   rdi
     394:	49                   	rex.WB
     395:	44 54                	rex.R push rsp
     397:	48 5f                	rex.W pop rdi
     399:	5f                   	pop    rdi
     39a:	20 33                	and    BYTE PTR [rbx],dh
     39c:	32 00                	xor    al,BYTE PTR [rax]
     39e:	5f                   	pop    rdi
     39f:	5f                   	pop    rdi
     3a0:	55                   	push   rbp
     3a1:	49                   	rex.WB
     3a2:	4e 54                	rex.WRX push rsp
     3a4:	50                   	push   rax
     3a5:	54                   	push   rsp
     3a6:	52                   	push   rdx
     3a7:	5f                   	pop    rdi
     3a8:	4d                   	rex.WRB
     3a9:	41 58                	pop    r8
     3ab:	5f                   	pop    rdi
     3ac:	5f                   	pop    rdi
     3ad:	20 30                	and    BYTE PTR [rax],dh
     3af:	78 66                	js     417 <_init-0xf9>
     3b1:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     3b8:	66 66 66 66 66 66 66 
     3bf:	66 55                	push   bp
     3c1:	4c 00 2f             	rex.WR add BYTE PTR [rdi],r13b
     3c4:	68 6f 6d 65 2f       	push   0x2f656d6f
     3c9:	75 62                	jne    42d <_init-0xe3>
     3cb:	75 6e                	jne    43b <_init-0xd5>
     3cd:	74 75                	je     444 <_init-0xcc>
     3cf:	2f                   	(bad)  
     3d0:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
     3d2:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
     3d9:	6e 
     3da:	67 2f                	addr32 (bad) 
     3dc:	50                   	push   rax
     3dd:	72 6f                	jb     44e <_init-0xc2>
     3df:	67 72 61             	addr32 jb 443 <_init-0xcd>
     3e2:	6d                   	ins    DWORD PTR es:[rdi],dx
     3e3:	6d                   	ins    DWORD PTR es:[rdi],dx
     3e4:	69 6e 67 2f 48 61 63 	imul   ebp,DWORD PTR [rsi+0x67],0x6361482f
     3eb:	6b 69 6e 67          	imul   ebp,DWORD PTR [rcx+0x6e],0x67
     3ef:	5f                   	pop    rdi
     3f0:	41 72 74             	rex.B jb 467 <_init-0xa9>
     3f3:	5f                   	pop    rdi
     3f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3f5:	66 5f                	pop    di
     3f7:	45 78 70             	rex.RB js 46a <_init-0xa6>
     3fa:	6c                   	ins    BYTE PTR es:[rdi],dx
     3fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3fc:	69 74 61 74 69 6f 6e 	imul   esi,DWORD PTR [rcx+riz*2+0x74],0x2f6e6f69
     403:	2f 
     404:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
     406:	74 65                	je     46d <_init-0xa3>
     408:	6c                   	ins    BYTE PTR es:[rdi],dx
     409:	5f                   	pop    rdi
     40a:	41 72 63             	rex.B jb 470 <_init-0xa0>
     40d:	68 69 74 65 63       	push   0x63657469
     412:	74 75                	je     489 <_init-0x87>
     414:	72 65                	jb     47b <_init-0x95>
     416:	2f                   	(bad)  
     417:	41                   	rex.B
     418:	4d                   	rex.WRB
     419:	44                   	rex.R
     41a:	36 34 2f             	ss xor al,0x2f
     41d:	30 78 32             	xor    BYTE PTR [rax+0x32],bh
     420:	37                   	(bad)  
     421:	30 5f 4d             	xor    BYTE PTR [rdi+0x4d],bl
     424:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     426:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     427:	72 79                	jb     4a2 <_init-0x6e>
     429:	5f                   	pop    rdi
     42a:	53                   	push   rbx
     42b:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
     42e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     430:	74 61                	je     493 <_init-0x7d>
     432:	74 69                	je     49d <_init-0x73>
     434:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     435:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     436:	2f                   	(bad)  
     437:	57                   	push   rdi
     438:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
     43f:	75 
     440:	67 5f                	addr32 pop rdi
     442:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
     444:	66 6f                	outs   dx,WORD PTR ds:[rsi]
     446:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     449:	4c 50                	rex.WR push rax
     44b:	36 34 5f             	ss xor al,0x5f
     44e:	5f                   	pop    rdi
     44f:	20 31                	and    BYTE PTR [rcx],dh
     451:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     454:	55                   	push   rbp
     455:	49                   	rex.WB
     456:	4e 54                	rex.WRX push rsp
     458:	36 34 5f             	ss xor al,0x5f
     45b:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     45f:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     462:	23 23                	and    esp,DWORD PTR [rbx]
     464:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
     467:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     46a:	44                   	rex.R
     46b:	42                   	rex.X
     46c:	4c 5f                	rex.WR pop rdi
     46e:	48                   	rex.W
     46f:	41 53                	push   r11
     471:	5f                   	pop    rdi
     472:	49                   	rex.WB
     473:	4e                   	rex.WRX
     474:	46                   	rex.RX
     475:	49                   	rex.WB
     476:	4e                   	rex.WRX
     477:	49 54                	rex.WB push r12
     479:	59                   	pop    rcx
     47a:	5f                   	pop    rdi
     47b:	5f                   	pop    rdi
     47c:	20 31                	and    BYTE PTR [rcx],dh
     47e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     481:	46                   	rex.RX
     482:	4c 54                	rex.WR push rsp
     484:	31 32                	xor    DWORD PTR [rdx],esi
     486:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
     489:	41 53                	push   r11
     48b:	5f                   	pop    rdi
     48c:	51                   	push   rcx
     48d:	55                   	push   rbp
     48e:	49                   	rex.WB
     48f:	45 54                	rex.RB push r12
     491:	5f                   	pop    rdi
     492:	4e                   	rex.WRX
     493:	41                   	rex.B
     494:	4e 5f                	rex.WRX pop rdi
     496:	5f                   	pop    rdi
     497:	20 31                	and    BYTE PTR [rcx],dh
     499:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     49c:	47                   	rex.RXB
     49d:	4e 55                	rex.WRX push rbp
     49f:	43 5f                	rex.XB pop r15
     4a1:	5f                   	pop    rdi
     4a2:	20 37                	and    BYTE PTR [rdi],dh
     4a4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     4a7:	46                   	rex.RX
     4a8:	4c 54                	rex.WR push rsp
     4aa:	33 32                	xor    esi,DWORD PTR [rdx]
     4ac:	58                   	pop    rax
     4ad:	5f                   	pop    rdi
     4ae:	4d                   	rex.WRB
     4af:	49                   	rex.WB
     4b0:	4e 5f                	rex.WRX pop rdi
     4b2:	31 30                	xor    DWORD PTR [rax],esi
     4b4:	5f                   	pop    rdi
     4b5:	45 58                	rex.RB pop r8
     4b7:	50                   	push   rax
     4b8:	5f                   	pop    rdi
     4b9:	5f                   	pop    rdi
     4ba:	20 28                	and    BYTE PTR [rax],ch
     4bc:	2d 33 30 37 29       	sub    eax,0x29373033
     4c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     4c4:	49                   	rex.WB
     4c5:	4e 54                	rex.WRX push rsp
     4c7:	33 32                	xor    esi,DWORD PTR [rdx]
     4c9:	5f                   	pop    rdi
     4ca:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     4ce:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
     4d1:	5f                   	pop    rdi
     4d2:	5f                   	pop    rdi
     4d3:	46                   	rex.RX
     4d4:	4c 54                	rex.WR push rsp
     4d6:	33 32                	xor    esi,DWORD PTR [rdx]
     4d8:	58                   	pop    rax
     4d9:	5f                   	pop    rdi
     4da:	45 50                	rex.RB push r8
     4dc:	53                   	push   rbx
     4dd:	49                   	rex.WB
     4de:	4c                   	rex.WR
     4df:	4f                   	rex.WRXB
     4e0:	4e 5f                	rex.WRX pop rdi
     4e2:	5f                   	pop    rdi
     4e3:	20 32                	and    BYTE PTR [rdx],dh
     4e5:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     4e8:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
     4eb:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
     4ef:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33313825 <_end+0x3311280d>
     4f5:	30 38                	xor    BYTE PTR [rax],bh
     4f7:	30 38                	xor    BYTE PTR [rax],bh
     4f9:	34 37                	xor    al,0x37
     4fb:	32 36                	xor    dh,BYTE PTR [rsi]
     4fd:	33 33                	xor    esi,DWORD PTR [rbx]
     4ff:	33 36                	xor    esi,DWORD PTR [rsi]
     501:	31 38                	xor    DWORD PTR [rax],edi
     503:	31 36                	xor    DWORD PTR [rsi],esi
     505:	34 30                	xor    al,0x30
     507:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
     50b:	31 36                	xor    DWORD PTR [rsi],esi
     50d:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     510:	78 00                	js     512 <_init+0x2>
     512:	5f                   	pop    rdi
     513:	5f                   	pop    rdi
     514:	46                   	rex.RX
     515:	4c 54                	rex.WR push rsp
     517:	31 32                	xor    DWORD PTR [rdx],esi
     519:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
     51c:	50                   	push   rax
     51d:	53                   	push   rbx
     51e:	49                   	rex.WB
     51f:	4c                   	rex.WR
     520:	4f                   	rex.WRXB
     521:	4e 5f                	rex.WRX pop rdi
     523:	5f                   	pop    rdi
     524:	20 31                	and    BYTE PTR [rcx],dh
     526:	2e 39 32             	cmp    DWORD PTR cs:[rdx],esi
     529:	35 39 32 39 39       	xor    eax,0x39393239
     52e:	34 34                	xor    al,0x34
     530:	33 38                	xor    edi,DWORD PTR [rax]
     532:	37                   	(bad)  
     533:	32 33                	xor    dh,BYTE PTR [rbx]
     535:	35 38 35 33 30       	xor    eax,0x30333538
     53a:	35 35 39 37 37       	xor    eax,0x37373935
     53f:	39 34 32             	cmp    DWORD PTR [rdx+rsi*1],esi
     542:	35 38 34 39 32       	xor    eax,0x32393438
     547:	37                   	(bad)  
     548:	33 32                	xor    esi,DWORD PTR [rdx]
     54a:	65 2d 33 34 46 31    	gs sub eax,0x31463433
     550:	32 38                	xor    bh,BYTE PTR [rax]
     552:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     555:	46                   	rex.RX
     556:	4c 54                	rex.WR push rsp
     558:	36 34 58             	ss xor al,0x58
     55b:	5f                   	pop    rdi
     55c:	48                   	rex.W
     55d:	41 53                	push   r11
     55f:	5f                   	pop    rdi
     560:	44                   	rex.R
     561:	45                   	rex.RB
     562:	4e                   	rex.WRX
     563:	4f 52                	rex.WRXB push r10
     565:	4d 5f                	rex.WRB pop r15
     567:	5f                   	pop    rdi
     568:	20 31                	and    BYTE PTR [rcx],dh
     56a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     56d:	49                   	rex.WB
     56e:	4e 54                	rex.WRX push rsp
     570:	50                   	push   rax
     571:	54                   	push   rsp
     572:	52                   	push   rdx
     573:	5f                   	pop    rdi
     574:	57                   	push   rdi
     575:	49                   	rex.WB
     576:	44 54                	rex.R push rsp
     578:	48 5f                	rex.W pop rdi
     57a:	5f                   	pop    rdi
     57b:	20 36                	and    BYTE PTR [rsi],dh
     57d:	34 00                	xor    al,0x0
     57f:	5f                   	pop    rdi
     580:	5f                   	pop    rdi
     581:	53                   	push   rbx
     582:	54                   	push   rsp
     583:	44                   	rex.R
     584:	43 5f                	rex.XB pop r15
     586:	48                   	rex.W
     587:	4f 53                	rex.WRXB push r11
     589:	54                   	push   rsp
     58a:	45                   	rex.RB
     58b:	44 5f                	rex.R pop rdi
     58d:	5f                   	pop    rdi
     58e:	20 31                	and    BYTE PTR [rcx],dh
     590:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     593:	57                   	push   rdi
     594:	49                   	rex.WB
     595:	4e 54                	rex.WRX push rsp
     597:	5f                   	pop    rdi
     598:	4d                   	rex.WRB
     599:	49                   	rex.WB
     59a:	4e 5f                	rex.WRX pop rdi
     59c:	5f                   	pop    rdi
     59d:	20 30                	and    BYTE PTR [rax],dh
     59f:	55                   	push   rbp
     5a0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5a3:	46                   	rex.RX
     5a4:	4c 54                	rex.WR push rsp
     5a6:	5f                   	pop    rdi
     5a7:	45 56                	rex.RB push r14
     5a9:	41                   	rex.B
     5aa:	4c 5f                	rex.WR pop rdi
     5ac:	4d                   	rex.WRB
     5ad:	45 54                	rex.RB push r12
     5af:	48                   	rex.W
     5b0:	4f                   	rex.WRXB
     5b1:	44 5f                	rex.R pop rdi
     5b3:	54                   	push   rsp
     5b4:	53                   	push   rbx
     5b5:	5f                   	pop    rdi
     5b6:	31 38                	xor    DWORD PTR [rax],edi
     5b8:	36 36 31 5f 33       	ss xor DWORD PTR ss:[rdi+0x33],ebx
     5bd:	5f                   	pop    rdi
     5be:	5f                   	pop    rdi
     5bf:	20 30                	and    BYTE PTR [rax],dh
     5c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5c4:	4c                   	rex.WR
     5c5:	44                   	rex.R
     5c6:	42                   	rex.X
     5c7:	4c 5f                	rex.WR pop rdi
     5c9:	44                   	rex.R
     5ca:	45                   	rex.RB
     5cb:	4e                   	rex.WRX
     5cc:	4f 52                	rex.WRXB push r10
     5ce:	4d 5f                	rex.WRB pop r15
     5d0:	4d                   	rex.WRB
     5d1:	49                   	rex.WB
     5d2:	4e 5f                	rex.WRX pop rdi
     5d4:	5f                   	pop    rdi
     5d5:	20 33                	and    BYTE PTR [rbx],dh
     5d7:	2e 36 34 35          	cs ss xor al,0x35
     5db:	31 39                	xor    DWORD PTR [rcx],edi
     5dd:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 38383716 <_end+0x381826fe>
     5e3:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
     5e6:	34 36                	xor    al,0x36
     5e8:	30 32                	xor    BYTE PTR [rdx],dh
     5ea:	35 32 38 34 30       	xor    eax,0x30343832
     5ef:	35 39 33 33 36       	xor    eax,0x36333339
     5f4:	31 39                	xor    DWORD PTR [rcx],edi
     5f6:	34 31                	xor    al,0x31
     5f8:	39 38                	cmp    DWORD PTR [rax],edi
     5fa:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
     5fd:	34 39                	xor    al,0x39
     5ff:	35 31 4c 00 5f       	xor    eax,0x5f004c31
     604:	5f                   	pop    rdi
     605:	44                   	rex.R
     606:	42                   	rex.X
     607:	4c 5f                	rex.WR pop rdi
     609:	45 50                	rex.RB push r8
     60b:	53                   	push   rbx
     60c:	49                   	rex.WB
     60d:	4c                   	rex.WR
     60e:	4f                   	rex.WRXB
     60f:	4e 5f                	rex.WRX pop rdi
     611:	5f                   	pop    rdi
     612:	20 28                	and    BYTE PTR [rax],ch
     614:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     618:	62                   	(bad)  
     619:	6c                   	ins    BYTE PTR es:[rdi],dx
     61a:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
     61d:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     620:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
     623:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
     627:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 3331395d <_end+0x33112945>
     62d:	30 38                	xor    BYTE PTR [rax],bh
     62f:	30 38                	xor    BYTE PTR [rax],bh
     631:	34 37                	xor    al,0x37
     633:	32 36                	xor    dh,BYTE PTR [rsi]
     635:	33 33                	xor    esi,DWORD PTR [rbx]
     637:	33 36                	xor    esi,DWORD PTR [rsi]
     639:	31 38                	xor    DWORD PTR [rax],edi
     63b:	31 36                	xor    DWORD PTR [rsi],esi
     63d:	34 30                	xor    al,0x30
     63f:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
     643:	31 36                	xor    DWORD PTR [rsi],esi
     645:	4c 29 00             	sub    QWORD PTR [rax],r8
     648:	5f                   	pop    rdi
     649:	5f                   	pop    rdi
     64a:	49                   	rex.WB
     64b:	4e 54                	rex.WRX push rsp
     64d:	5f                   	pop    rdi
     64e:	4c                   	rex.WR
     64f:	45                   	rex.RB
     650:	41 53                	push   r11
     652:	54                   	push   rsp
     653:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
     656:	49                   	rex.WB
     657:	44 54                	rex.R push rsp
     659:	48 5f                	rex.W pop rdi
     65b:	5f                   	pop    rdi
     65c:	20 38                	and    BYTE PTR [rax],bh
     65e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     661:	44                   	rex.R
     662:	42                   	rex.X
     663:	4c 5f                	rex.WR pop rdi
     665:	44                   	rex.R
     666:	49                   	rex.WB
     667:	47 5f                	rex.RXB pop r15
     669:	5f                   	pop    rdi
void test_function(int a, int b, int c, int d) {
     66a:	20 31                	and    BYTE PTR [rcx],dh
     66c:	35 00 5f 5f 47       	xor    eax,0x475f5f00
     671:	43                   	rex.XB
     672:	43 5f                	rex.XB pop r15
     674:	41 54                	push   r12
     676:	4f                   	rex.WRXB
     677:	4d                   	rex.WRB
     678:	49                   	rex.WB
     679:	43 5f                	rex.XB pop r15
     67b:	57                   	push   rdi
     67c:	43                   	rex.XB
     67d:	48                   	rex.W
     67e:	41 52                	push   r10
     680:	5f                   	pop    rdi
     681:	54                   	push   rsp
     682:	5f                   	pop    rdi
     683:	4c                   	rex.WR
     684:	4f                   	rex.WRXB
     685:	43                   	rex.XB
     686:	4b 5f                	rex.WXB pop r15
     688:	46 52                	rex.RX push rdx
     68a:	45                   	rex.RB
     68b:	45 20 32             	and    BYTE PTR [r10],r14b
	flag = 31337;
     68e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     691:	57                   	push   rdi
     692:	49                   	rex.WB
     693:	4e 54                	rex.WRX push rsp
	buffer[0] = 'A';
     695:	5f                   	pop    rdi
     696:	4d                   	rex.WRB
     697:	41 58                	pop    r8
}
     699:	5f                   	pop    rdi
     69a:	5f                   	pop    rdi
     69b:	20 30                	and    BYTE PTR [rax],dh
     69d:	78 66                	js     705 <__libc_csu_init+0x25>
     69f:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
     6a6:	55 
     6a7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     6aa:	46 58                	rex.RX pop rax
     6ac:	53                   	push   rbx
     6ad:	52                   	push   rdx
     6ae:	5f                   	pop    rdi
int main() {
     6af:	5f                   	pop    rdi
     6b0:	20 31                	and    BYTE PTR [rcx],dh
     6b2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
	test_function(1, 2, 3, 4);
     6b5:	46                   	rex.RX
     6b6:	4c 54                	rex.WR push rsp
     6b8:	36 34 5f             	ss xor al,0x5f
     6bb:	48                   	rex.W
     6bc:	41 53                	push   r11
     6be:	5f                   	pop    rdi
     6bf:	51                   	push   rcx
     6c0:	55                   	push   rbp
     6c1:	49                   	rex.WB
     6c2:	45 54                	rex.RB push r12
     6c4:	5f                   	pop    rdi
     6c5:	4e                   	rex.WRX
     6c6:	41                   	rex.B
     6c7:	4e 5f                	rex.WRX pop rdi
     6c9:	5f                   	pop    rdi
     6ca:	20 31                	and    BYTE PTR [rcx],dh
     6cc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     6cf:	44                   	rex.R
     6d0:	45                   	rex.RB
}
     6d1:	43                   	rex.XB
     6d2:	36 34 5f             	ss xor al,0x5f
     6d5:	53                   	push   rbx
     6d6:	55                   	push   rbp
     6d7:	42                   	rex.X
     6d8:	4e                   	rex.WRX
     6d9:	4f 52                	rex.WRXB push r10
     6db:	4d                   	rex.WRB
     6dc:	41                   	rex.B
     6dd:	4c 5f                	rex.WR pop rdi
     6df:	4d                   	rex.WRB
     6e0:	49                   	rex.WB
     6e1:	4e 5f                	rex.WRX pop rdi
     6e3:	5f                   	pop    rdi
     6e4:	20 30                	and    BYTE PTR [rax],dh
     6e6:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
     6e9:	30 30                	xor    BYTE PTR [rax],dh
     6eb:	30 30                	xor    BYTE PTR [rax],dh
     6ed:	30 30                	xor    BYTE PTR [rax],dh
     6ef:	30 30                	xor    BYTE PTR [rax],dh
     6f1:	30 30                	xor    BYTE PTR [rax],dh
     6f3:	30 30                	xor    BYTE PTR [rax],dh
     6f5:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
     6f8:	33 38                	xor    edi,DWORD PTR [rax]
     6fa:	33 44 44 00          	xor    eax,DWORD PTR [rsp+rax*2+0x0]
     6fe:	5f                   	pop    rdi
     6ff:	5f                   	pop    rdi
     700:	53                   	push   rbx
     701:	43                   	rex.XB
     702:	48                   	rex.W
     703:	41 52                	push   r10
     705:	5f                   	pop    rdi
     706:	57                   	push   rdi
     707:	49                   	rex.WB
     708:	44 54                	rex.R push rsp
     70a:	48 5f                	rex.W pop rdi
     70c:	5f                   	pop    rdi
     70d:	20 38                	and    BYTE PTR [rax],bh
     70f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     712:	4c                   	rex.WR
     713:	44                   	rex.R
     714:	42                   	rex.X
     715:	4c 5f                	rex.WR pop rdi
     717:	45 50                	rex.RB push r8
     719:	53                   	push   rbx
     71a:	49                   	rex.WB
     71b:	4c                   	rex.WR
     71c:	4f                   	rex.WRXB
     71d:	4e 5f                	rex.WRX pop rdi
     71f:	5f                   	pop    rdi
     720:	20 31                	and    BYTE PTR [rcx],dh
     722:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
     725:	34 32                	xor    al,0x32
     727:	30 32                	xor    BYTE PTR [rdx],dh
     729:	31 37                	xor    DWORD PTR [rdi],esi
     72b:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     72e:	35 35 30 34 34       	xor    eax,0x34343035
     733:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
     736:	30 37                	xor    BYTE PTR [rdi],dh
     738:	34 35                	xor    al,0x35
     73a:	32 38                	xor    bh,BYTE PTR [rax]
     73c:	30 30                	xor    BYTE PTR [rax],dh
     73e:	38 36                	cmp    BYTE PTR [rsi],dh
     740:	39 39                	cmp    DWORD PTR [rcx],edi
     742:	34 31                	xor    al,0x31
     744:	37                   	(bad)  
     745:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
     748:	31 39                	xor    DWORD PTR [rcx],edi
     74a:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     74e:	44                   	rex.R
     74f:	42                   	rex.X
     750:	4c 5f                	rex.WR pop rdi
     752:	4d                   	rex.WRB
     753:	41                   	rex.B
     754:	4e 54                	rex.WRX push rsp
     756:	5f                   	pop    rdi
     757:	44                   	rex.R
     758:	49                   	rex.WB
     759:	47 5f                	rex.RXB pop r15
     75b:	5f                   	pop    rdi
     75c:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f0795 <_end+0x5f3ef77d>
     762:	46                   	rex.RX
     763:	4c 54                	rex.WR push rsp
     765:	33 32                	xor    esi,DWORD PTR [rdx]
     767:	5f                   	pop    rdi
     768:	45 50                	rex.RB push r8
     76a:	53                   	push   rbx
     76b:	49                   	rex.WB
     76c:	4c                   	rex.WR
     76d:	4f                   	rex.WRXB
     76e:	4e 5f                	rex.WRX pop rdi
     770:	5f                   	pop    rdi
     771:	20 31                	and    BYTE PTR [rcx],dh
     773:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
     776:	32 30                	xor    dh,BYTE PTR [rax]
     778:	39 32                	cmp    DWORD PTR [rdx],esi
     77a:	38 39                	cmp    BYTE PTR [rcx],bh
     77c:	35 35 30 37 38       	xor    eax,0x38373035
     781:	31 32                	xor    DWORD PTR [rdx],esi
     783:	35 30 30 30 30       	xor    eax,0x30303030
     788:	30 30                	xor    BYTE PTR [rax],dh
     78a:	30 30                	xor    BYTE PTR [rax],dh
     78c:	30 30                	xor    BYTE PTR [rax],dh
     78e:	30 30                	xor    BYTE PTR [rax],dh
     790:	30 30                	xor    BYTE PTR [rax],dh
     792:	30 30                	xor    BYTE PTR [rax],dh
     794:	30 30                	xor    BYTE PTR [rax],dh
     796:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
     799:	37                   	(bad)  
     79a:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     79d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7a0:	46                   	rex.RX
     7a1:	4c 54                	rex.WR push rsp
     7a3:	33 32                	xor    esi,DWORD PTR [rdx]
     7a5:	5f                   	pop    rdi
     7a6:	44                   	rex.R
     7a7:	45                   	rex.RB
     7a8:	4e                   	rex.WRX
     7a9:	4f 52                	rex.WRXB push r10
     7ab:	4d 5f                	rex.WRB pop r15
     7ad:	4d                   	rex.WRB
     7ae:	49                   	rex.WB
     7af:	4e 5f                	rex.WRX pop rdi
     7b1:	5f                   	pop    rdi
     7b2:	20 31                	and    BYTE PTR [rcx],dh
     7b4:	2e 34 30             	cs xor al,0x30
     7b7:	31 32                	xor    DWORD PTR [rdx],esi
     7b9:	39 38                	cmp    DWORD PTR [rax],edi
     7bb:	34 36                	xor    al,0x36
     7bd:	34 33                	xor    al,0x33
     7bf:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     7c2:	31 37                	xor    DWORD PTR [rdi],esi
     7c4:	30 37                	xor    BYTE PTR [rdi],dh
     7c6:	30 39                	xor    BYTE PTR [rcx],bh
     7c8:	32 33                	xor    dh,BYTE PTR [rbx]
     7ca:	37                   	(bad)  
     7cb:	32 39                	xor    bh,BYTE PTR [rcx]
     7cd:	35 38 33 32 38       	xor    eax,0x38323338
     7d2:	39 39                	cmp    DWORD PTR [rcx],edi
     7d4:	31 36                	xor    DWORD PTR [rsi],esi
     7d6:	31 33                	xor    DWORD PTR [rbx],esi
     7d8:	65 2d 34 35 46 33    	gs sub eax,0x33463534
     7de:	32 00                	xor    al,BYTE PTR [rax]
     7e0:	5f                   	pop    rdi
     7e1:	5f                   	pop    rdi
     7e2:	49                   	rex.WB
     7e3:	4e 54                	rex.WRX push rsp
     7e5:	5f                   	pop    rdi
     7e6:	46                   	rex.RX
     7e7:	41 53                	push   r11
     7e9:	54                   	push   rsp
     7ea:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     7ed:	41 58                	pop    r8
     7ef:	5f                   	pop    rdi
     7f0:	5f                   	pop    rdi
     7f1:	20 30                	and    BYTE PTR [rax],dh
     7f3:	78 37                	js     82c <__GNU_EH_FRAME_HDR+0xc8>
     7f5:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     7f9:	55                   	push   rbp
     7fa:	49                   	rex.WB
     7fb:	4e 54                	rex.WRX push rsp
     7fd:	33 32                	xor    esi,DWORD PTR [rdx]
     7ff:	5f                   	pop    rdi
     800:	54                   	push   rsp
     801:	59                   	pop    rcx
     802:	50                   	push   rax
     803:	45 5f                	rex.RB pop r15
     805:	5f                   	pop    rdi
     806:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     809:	73 69                	jae    874 <__GNU_EH_FRAME_HDR+0x110>
     80b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     80d:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     812:	74 00                	je     814 <__GNU_EH_FRAME_HDR+0xb0>
     814:	5f                   	pop    rdi
     815:	5f                   	pop    rdi
     816:	46                   	rex.RX
     817:	4c 54                	rex.WR push rsp
     819:	36 34 5f             	ss xor al,0x5f
     81c:	45 50                	rex.RB push r8
     81e:	53                   	push   rbx
     81f:	49                   	rex.WB
     820:	4c                   	rex.WR
     821:	4f                   	rex.WRXB
     822:	4e 5f                	rex.WRX pop rdi
     824:	5f                   	pop    rdi
     825:	20 32                	and    BYTE PTR [rdx],dh
     827:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     82a:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
     82d:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
     831:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33313b67 <_end+0x33112b4f>
     837:	30 38                	xor    BYTE PTR [rax],bh
     839:	30 38                	xor    BYTE PTR [rax],bh
     83b:	34 37                	xor    al,0x37
     83d:	32 36                	xor    dh,BYTE PTR [rsi]
     83f:	33 33                	xor    esi,DWORD PTR [rbx]
     841:	33 36                	xor    esi,DWORD PTR [rsi]
     843:	31 38                	xor    DWORD PTR [rax],edi
     845:	31 36                	xor    DWORD PTR [rsi],esi
     847:	34 30                	xor    al,0x30
     849:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
     84d:	31 36                	xor    DWORD PTR [rsi],esi
     84f:	46                   	rex.RX
     850:	36 34 00             	ss xor al,0x0
     853:	5f                   	pop    rdi
     854:	5f                   	pop    rdi
     855:	4c                   	rex.WR
     856:	44                   	rex.R
     857:	42                   	rex.X
     858:	4c 5f                	rex.WR pop rdi
     85a:	4d                   	rex.WRB
     85b:	49                   	rex.WB
     85c:	4e 5f                	rex.WRX pop rdi
     85e:	31 30                	xor    DWORD PTR [rax],esi
     860:	5f                   	pop    rdi
     861:	45 58                	rex.RB pop r8
     863:	50                   	push   rax
     864:	5f                   	pop    rdi
     865:	5f                   	pop    rdi
     866:	20 28                	and    BYTE PTR [rax],ch
     868:	2d 34 39 33 31       	sub    eax,0x31333934
     86d:	29 00                	sub    DWORD PTR [rax],eax
     86f:	5f                   	pop    rdi
     870:	5f                   	pop    rdi
     871:	53                   	push   rbx
     872:	48 52                	rex.W push rdx
     874:	54                   	push   rsp
     875:	5f                   	pop    rdi
     876:	57                   	push   rdi
     877:	49                   	rex.WB
     878:	44 54                	rex.R push rsp
     87a:	48 5f                	rex.W pop rdi
     87c:	5f                   	pop    rdi
     87d:	20 31                	and    BYTE PTR [rcx],dh
     87f:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     883:	44                   	rex.R
     884:	45                   	rex.RB
     885:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     888:	5f                   	pop    rdi
     889:	4d                   	rex.WRB
     88a:	41 58                	pop    r8
     88c:	5f                   	pop    rdi
     88d:	45 58                	rex.RB pop r8
     88f:	50                   	push   rax
     890:	5f                   	pop    rdi
     891:	5f                   	pop    rdi
     892:	20 39                	and    BYTE PTR [rcx],bh
     894:	37                   	(bad)  
     895:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     898:	49                   	rex.WB
     899:	4e 54                	rex.WRX push rsp
     89b:	33 32                	xor    esi,DWORD PTR [rdx]
     89d:	5f                   	pop    rdi
     89e:	54                   	push   rsp
     89f:	59                   	pop    rcx
     8a0:	50                   	push   rax
     8a1:	45 5f                	rex.RB pop r15
     8a3:	5f                   	pop    rdi
     8a4:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     8a7:	74 00                	je     8a9 <__GNU_EH_FRAME_HDR+0x145>
     8a9:	5f                   	pop    rdi
     8aa:	5f                   	pop    rdi
     8ab:	53                   	push   rbx
     8ac:	49                   	rex.WB
     8ad:	47 5f                	rex.RXB pop r15
     8af:	41 54                	push   r12
     8b1:	4f                   	rex.WRXB
     8b2:	4d                   	rex.WRB
     8b3:	49                   	rex.WB
     8b4:	43 5f                	rex.XB pop r15
     8b6:	54                   	push   rsp
     8b7:	59                   	pop    rcx
     8b8:	50                   	push   rax
     8b9:	45 5f                	rex.RB pop r15
     8bb:	5f                   	pop    rdi
     8bc:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     8bf:	74 00                	je     8c1 <__GNU_EH_FRAME_HDR+0x15d>
     8c1:	5f                   	pop    rdi
     8c2:	5f                   	pop    rdi
     8c3:	44                   	rex.R
     8c4:	45                   	rex.RB
     8c5:	43                   	rex.XB
     8c6:	36 34 5f             	ss xor al,0x5f
     8c9:	4d                   	rex.WRB
     8ca:	41 58                	pop    r8
     8cc:	5f                   	pop    rdi
     8cd:	45 58                	rex.RB pop r8
     8cf:	50                   	push   rax
     8d0:	5f                   	pop    rdi
     8d1:	5f                   	pop    rdi
     8d2:	20 33                	and    BYTE PTR [rbx],dh
     8d4:	38 35 00 5f 5f 44    	cmp    BYTE PTR [rip+0x445f5f00],dh        # 445f67da <_end+0x443f57c2>
     8da:	42                   	rex.X
     8db:	4c 5f                	rex.WR pop rdi
     8dd:	4d                   	rex.WRB
     8de:	49                   	rex.WB
     8df:	4e 5f                	rex.WRX pop rdi
     8e1:	45 58                	rex.RB pop r8
     8e3:	50                   	push   rax
     8e4:	5f                   	pop    rdi
     8e5:	5f                   	pop    rdi
     8e6:	20 28                	and    BYTE PTR [rax],ch
     8e8:	2d 31 30 32 31       	sub    eax,0x31323031
     8ed:	29 00                	sub    DWORD PTR [rax],eax
     8ef:	5f                   	pop    rdi
     8f0:	5f                   	pop    rdi
     8f1:	70 69                	jo     95c <__FRAME_END__+0x90>
     8f3:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
     8f6:	20 32                	and    BYTE PTR [rdx],dh
     8f8:	00 5f 4c             	add    BYTE PTR [rdi+0x4c],bl
     8fb:	50                   	push   rax
     8fc:	36 34 20             	ss xor al,0x20
     8ff:	31 00                	xor    DWORD PTR [rax],eax
     901:	5f                   	pop    rdi
     902:	5f                   	pop    rdi
     903:	49                   	rex.WB
     904:	4e 54                	rex.WRX push rsp
     906:	5f                   	pop    rdi
     907:	4c                   	rex.WR
     908:	45                   	rex.RB
     909:	41 53                	push   r11
     90b:	54                   	push   rsp
     90c:	31 36                	xor    DWORD PTR [rsi],esi
     90e:	5f                   	pop    rdi
     90f:	57                   	push   rdi
     910:	49                   	rex.WB
     911:	44 54                	rex.R push rsp
     913:	48 5f                	rex.W pop rdi
     915:	5f                   	pop    rdi
     916:	20 31                	and    BYTE PTR [rcx],dh
     918:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     91c:	46                   	rex.RX
     91d:	4c 54                	rex.WR push rsp
     91f:	33 32                	xor    esi,DWORD PTR [rdx]
     921:	5f                   	pop    rdi
     922:	48                   	rex.W
     923:	41 53                	push   r11
     925:	5f                   	pop    rdi
     926:	49                   	rex.WB
     927:	4e                   	rex.WRX
     928:	46                   	rex.RX
     929:	49                   	rex.WB
     92a:	4e                   	rex.WRX
     92b:	49 54                	rex.WB push r12
     92d:	59                   	pop    rcx
     92e:	5f                   	pop    rdi
     92f:	5f                   	pop    rdi
     930:	20 31                	and    BYTE PTR [rcx],dh
     932:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     935:	4c                   	rex.WR
     936:	44                   	rex.R
     937:	42                   	rex.X
     938:	4c 5f                	rex.WR pop rdi
     93a:	48                   	rex.W
     93b:	41 53                	push   r11
     93d:	5f                   	pop    rdi
     93e:	49                   	rex.WB
     93f:	4e                   	rex.WRX
     940:	46                   	rex.RX
     941:	49                   	rex.WB
     942:	4e                   	rex.WRX
     943:	49 54                	rex.WB push r12
     945:	59                   	pop    rcx
     946:	5f                   	pop    rdi
     947:	5f                   	pop    rdi
     948:	20 31                	and    BYTE PTR [rcx],dh
     94a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     94d:	53                   	push   rbx
     94e:	49 5a                	rex.WB pop r10
     950:	45                   	rex.RB
     951:	4f                   	rex.WRXB
     952:	46 5f                	rex.RX pop rdi
     954:	4c                   	rex.WR
     955:	4f                   	rex.WRXB
     956:	4e                   	rex.WRX
     957:	47 5f                	rex.RXB pop r15
     959:	5f                   	pop    rdi
     95a:	20 38                	and    BYTE PTR [rax],bh
     95c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     95f:	46                   	rex.RX
     960:	4c 54                	rex.WR push rsp
     962:	5f                   	pop    rdi
     963:	48                   	rex.W
     964:	41 53                	push   r11
     966:	5f                   	pop    rdi
     967:	44                   	rex.R
     968:	45                   	rex.RB
     969:	4e                   	rex.WRX
     96a:	4f 52                	rex.WRXB push r10
     96c:	4d 5f                	rex.WRB pop r15
     96e:	5f                   	pop    rdi
     96f:	20 31                	and    BYTE PTR [rcx],dh
     971:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     974:	46                   	rex.RX
     975:	4c 54                	rex.WR push rsp
     977:	31 32                	xor    DWORD PTR [rdx],esi
     979:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     97c:	49                   	rex.WB
     97d:	4e 5f                	rex.WRX pop rdi
     97f:	45 58                	rex.RB pop r8
     981:	50                   	push   rax
     982:	5f                   	pop    rdi
     983:	5f                   	pop    rdi
     984:	20 28                	and    BYTE PTR [rax],ch
     986:	2d 31 36 33 38       	sub    eax,0x38333631
     98b:	31 29                	xor    DWORD PTR [rcx],ebp
     98d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     990:	53                   	push   rbx
     991:	53                   	push   rbx
     992:	45 5f                	rex.RB pop r15
     994:	4d                   	rex.WRB
     995:	41 54                	push   r12
     997:	48 5f                	rex.W pop rdi
     999:	5f                   	pop    rdi
     99a:	20 31                	and    BYTE PTR [rcx],dh
     99c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     99f:	55                   	push   rbp
     9a0:	49                   	rex.WB
     9a1:	4e 54                	rex.WRX push rsp
     9a3:	31 36                	xor    DWORD PTR [rsi],esi
     9a5:	5f                   	pop    rdi
     9a6:	4d                   	rex.WRB
     9a7:	41 58                	pop    r8
     9a9:	5f                   	pop    rdi
     9aa:	5f                   	pop    rdi
     9ab:	20 30                	and    BYTE PTR [rax],dh
     9ad:	78 66                	js     a15 <__FRAME_END__+0x149>
     9af:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
     9b5:	46                   	rex.RX
     9b6:	4c 54                	rex.WR push rsp
     9b8:	36 34 58             	ss xor al,0x58
     9bb:	5f                   	pop    rdi
     9bc:	48                   	rex.W
     9bd:	41 53                	push   r11
     9bf:	5f                   	pop    rdi
     9c0:	51                   	push   rcx
     9c1:	55                   	push   rbp
     9c2:	49                   	rex.WB
     9c3:	45 54                	rex.RB push r12
     9c5:	5f                   	pop    rdi
     9c6:	4e                   	rex.WRX
     9c7:	41                   	rex.B
     9c8:	4e 5f                	rex.WRX pop rdi
     9ca:	5f                   	pop    rdi
     9cb:	20 31                	and    BYTE PTR [rcx],dh
     9cd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9d0:	55                   	push   rbp
     9d1:	49                   	rex.WB
     9d2:	4e 54                	rex.WRX push rsp
     9d4:	5f                   	pop    rdi
     9d5:	46                   	rex.RX
     9d6:	41 53                	push   r11
     9d8:	54                   	push   rsp
     9d9:	36 34 5f             	ss xor al,0x5f
     9dc:	54                   	push   rsp
     9dd:	59                   	pop    rcx
     9de:	50                   	push   rax
     9df:	45 5f                	rex.RB pop r15
     9e1:	5f                   	pop    rdi
     9e2:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     9e6:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     9ea:	73 69                	jae    a55 <__FRAME_END__+0x189>
     9ec:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     9ee:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     9f3:	74 00                	je     9f5 <__FRAME_END__+0x129>
     9f5:	5f                   	pop    rdi
     9f6:	5f                   	pop    rdi
     9f7:	42 59                	rex.X pop rcx
     9f9:	54                   	push   rsp
     9fa:	45 5f                	rex.RB pop r15
     9fc:	4f 52                	rex.WRXB push r10
     9fe:	44                   	rex.R
     9ff:	45 52                	rex.RB push r10
     a01:	5f                   	pop    rdi
     a02:	5f                   	pop    rdi
     a03:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     a06:	4f 52                	rex.WRXB push r10
     a08:	44                   	rex.R
     a09:	45 52                	rex.RB push r10
     a0b:	5f                   	pop    rdi
     a0c:	4c                   	rex.WR
     a0d:	49 54                	rex.WB push r12
     a0f:	54                   	push   rsp
     a10:	4c                   	rex.WR
     a11:	45 5f                	rex.RB pop r15
     a13:	45                   	rex.RB
     a14:	4e                   	rex.WRX
     a15:	44                   	rex.R
     a16:	49                   	rex.WB
     a17:	41                   	rex.B
     a18:	4e 5f                	rex.WRX pop rdi
     a1a:	5f                   	pop    rdi
     a1b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a1e:	45                   	rex.RB
     a1f:	4c                   	rex.WR
     a20:	46 5f                	rex.RX pop rdi
     a22:	5f                   	pop    rdi
     a23:	20 31                	and    BYTE PTR [rcx],dh
     a25:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a28:	46                   	rex.RX
     a29:	4c 54                	rex.WR push rsp
     a2b:	33 32                	xor    esi,DWORD PTR [rdx]
     a2d:	58                   	pop    rax
     a2e:	5f                   	pop    rdi
     a2f:	4d                   	rex.WRB
     a30:	49                   	rex.WB
     a31:	4e 5f                	rex.WRX pop rdi
     a33:	45 58                	rex.RB pop r8
     a35:	50                   	push   rax
     a36:	5f                   	pop    rdi
     a37:	5f                   	pop    rdi
     a38:	20 28                	and    BYTE PTR [rax],ch
     a3a:	2d 31 30 32 31       	sub    eax,0x31323031
     a3f:	29 00                	sub    DWORD PTR [rax],eax
     a41:	5f                   	pop    rdi
     a42:	5f                   	pop    rdi
     a43:	46                   	rex.RX
     a44:	4c                   	rex.WR
     a45:	4f                   	rex.WRXB
     a46:	41 54                	push   r12
     a48:	5f                   	pop    rdi
     a49:	57                   	push   rdi
     a4a:	4f 52                	rex.WRXB push r10
     a4c:	44 5f                	rex.R pop rdi
     a4e:	4f 52                	rex.WRXB push r10
     a50:	44                   	rex.R
     a51:	45 52                	rex.RB push r10
     a53:	5f                   	pop    rdi
     a54:	5f                   	pop    rdi
     a55:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     a58:	4f 52                	rex.WRXB push r10
     a5a:	44                   	rex.R
     a5b:	45 52                	rex.RB push r10
     a5d:	5f                   	pop    rdi
     a5e:	4c                   	rex.WR
     a5f:	49 54                	rex.WB push r12
     a61:	54                   	push   rsp
     a62:	4c                   	rex.WR
     a63:	45 5f                	rex.RB pop r15
     a65:	45                   	rex.RB
     a66:	4e                   	rex.WRX
     a67:	44                   	rex.R
     a68:	49                   	rex.WB
     a69:	41                   	rex.B
     a6a:	4e 5f                	rex.WRX pop rdi
     a6c:	5f                   	pop    rdi
     a6d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a70:	55                   	push   rbp
     a71:	49                   	rex.WB
     a72:	4e 54                	rex.WRX push rsp
     a74:	5f                   	pop    rdi
     a75:	4c                   	rex.WR
     a76:	45                   	rex.RB
     a77:	41 53                	push   r11
     a79:	54                   	push   rsp
     a7a:	31 36                	xor    DWORD PTR [rsi],esi
     a7c:	5f                   	pop    rdi
     a7d:	4d                   	rex.WRB
     a7e:	41 58                	pop    r8
     a80:	5f                   	pop    rdi
     a81:	5f                   	pop    rdi
     a82:	20 30                	and    BYTE PTR [rax],dh
     a84:	78 66                	js     aec <__FRAME_END__+0x220>
     a86:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
     a8c:	50                   	push   rax
     a8d:	52                   	push   rdx
     a8e:	41                   	rex.B
     a8f:	47                   	rex.RXB
     a90:	4d                   	rex.WRB
     a91:	41 5f                	pop    r15
     a93:	52                   	push   rdx
     a94:	45                   	rex.RB
     a95:	44                   	rex.R
     a96:	45                   	rex.RB
     a97:	46                   	rex.RX
     a98:	49                   	rex.WB
     a99:	4e                   	rex.WRX
     a9a:	45 5f                	rex.RB pop r15
     a9c:	45 58                	rex.RB pop r8
     a9e:	54                   	push   rsp
     a9f:	4e                   	rex.WRX
     aa0:	41                   	rex.B
     aa1:	4d                   	rex.WRB
     aa2:	45 20 31             	and    BYTE PTR [r9],r14b
     aa5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     aa8:	49                   	rex.WB
     aa9:	4e 54                	rex.WRX push rsp
     aab:	5f                   	pop    rdi
     aac:	4c                   	rex.WR
     aad:	45                   	rex.RB
     aae:	41 53                	push   r11
     ab0:	54                   	push   rsp
     ab1:	31 36                	xor    DWORD PTR [rsi],esi
     ab3:	5f                   	pop    rdi
     ab4:	54                   	push   rsp
     ab5:	59                   	pop    rcx
     ab6:	50                   	push   rax
     ab7:	45 5f                	rex.RB pop r15
     ab9:	5f                   	pop    rdi
     aba:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
     abd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     abe:	72 74                	jb     b34 <__FRAME_END__+0x268>
     ac0:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     ac3:	74 00                	je     ac5 <__FRAME_END__+0x1f9>
     ac5:	5f                   	pop    rdi
     ac6:	5f                   	pop    rdi
     ac7:	46                   	rex.RX
     ac8:	4c 54                	rex.WR push rsp
     aca:	33 32                	xor    esi,DWORD PTR [rdx]
     acc:	5f                   	pop    rdi
     acd:	48                   	rex.W
     ace:	41 53                	push   r11
     ad0:	5f                   	pop    rdi
     ad1:	51                   	push   rcx
     ad2:	55                   	push   rbp
     ad3:	49                   	rex.WB
     ad4:	45 54                	rex.RB push r12
     ad6:	5f                   	pop    rdi
     ad7:	4e                   	rex.WRX
     ad8:	41                   	rex.B
     ad9:	4e 5f                	rex.WRX pop rdi
     adb:	5f                   	pop    rdi
     adc:	20 31                	and    BYTE PTR [rcx],dh
     ade:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ae1:	46                   	rex.RX
     ae2:	4c 54                	rex.WR push rsp
     ae4:	5f                   	pop    rdi
     ae5:	4d                   	rex.WRB
     ae6:	41 58                	pop    r8
     ae8:	5f                   	pop    rdi
     ae9:	45 58                	rex.RB pop r8
     aeb:	50                   	push   rax
     aec:	5f                   	pop    rdi
     aed:	5f                   	pop    rdi
     aee:	20 31                	and    BYTE PTR [rcx],dh
     af0:	32 38                	xor    bh,BYTE PTR [rax]
     af2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     af5:	68 61 73 5f 69       	push   0x695f7361
     afa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     afb:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     aff:	65 5f                	gs pop rdi
     b01:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b02:	65 78 74             	gs js  b79 <__FRAME_END__+0x2ad>
     b05:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     b08:	52                   	push   rdx
     b09:	29 20                	sub    DWORD PTR [rax],esp
     b0b:	5f                   	pop    rdi
     b0c:	5f                   	pop    rdi
     b0d:	68 61 73 5f 69       	push   0x695f7361
     b12:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b13:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     b17:	65 5f                	gs pop rdi
     b19:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b1a:	65 78 74             	gs js  b91 <__FRAME_END__+0x2c5>
     b1d:	5f                   	pop    rdi
     b1e:	5f                   	pop    rdi
     b1f:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     b22:	52                   	push   rdx
     b23:	29 00                	sub    DWORD PTR [rax],eax
     b25:	5f                   	pop    rdi
     b26:	5f                   	pop    rdi
     b27:	49                   	rex.WB
     b28:	4e 54                	rex.WRX push rsp
     b2a:	50                   	push   rax
     b2b:	54                   	push   rsp
     b2c:	52                   	push   rdx
     b2d:	5f                   	pop    rdi
     b2e:	4d                   	rex.WRB
     b2f:	41 58                	pop    r8
     b31:	5f                   	pop    rdi
     b32:	5f                   	pop    rdi
     b33:	20 30                	and    BYTE PTR [rax],dh
     b35:	78 37                	js     b6e <__FRAME_END__+0x2a2>
     b37:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     b3e:	66 66 66 66 66 66 66 
     b45:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     b4a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     b4c:	75 5f                	jne    bad <__FRAME_END__+0x2e1>
     b4e:	6c                   	ins    BYTE PTR es:[rdi],dx
     b4f:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
     b56:	31 00                	xor    DWORD PTR [rax],eax
     b58:	5f                   	pop    rdi
     b59:	5f                   	pop    rdi
     b5a:	46                   	rex.RX
     b5b:	4c 54                	rex.WR push rsp
     b5d:	33 32                	xor    esi,DWORD PTR [rdx]
     b5f:	58                   	pop    rax
     b60:	5f                   	pop    rdi
     b61:	4d                   	rex.WRB
     b62:	41 58                	pop    r8
     b64:	5f                   	pop    rdi
     b65:	31 30                	xor    DWORD PTR [rax],esi
     b67:	5f                   	pop    rdi
     b68:	45 58                	rex.RB pop r8
     b6a:	50                   	push   rax
     b6b:	5f                   	pop    rdi
     b6c:	5f                   	pop    rdi
     b6d:	20 33                	and    BYTE PTR [rbx],dh
     b6f:	30 38                	xor    BYTE PTR [rax],bh
     b71:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b74:	46                   	rex.RX
     b75:	4c 54                	rex.WR push rsp
     b77:	5f                   	pop    rdi
     b78:	44                   	rex.R
     b79:	45                   	rex.RB
     b7a:	4e                   	rex.WRX
     b7b:	4f 52                	rex.WRXB push r10
     b7d:	4d 5f                	rex.WRB pop r15
     b7f:	4d                   	rex.WRB
     b80:	49                   	rex.WB
     b81:	4e 5f                	rex.WRX pop rdi
     b83:	5f                   	pop    rdi
     b84:	20 31                	and    BYTE PTR [rcx],dh
     b86:	2e 34 30             	cs xor al,0x30
     b89:	31 32                	xor    DWORD PTR [rdx],esi
     b8b:	39 38                	cmp    DWORD PTR [rax],edi
     b8d:	34 36                	xor    al,0x36
     b8f:	34 33                	xor    al,0x33
     b91:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     b94:	31 37                	xor    DWORD PTR [rdi],esi
     b96:	30 37                	xor    BYTE PTR [rdi],dh
     b98:	30 39                	xor    BYTE PTR [rcx],bh
     b9a:	32 33                	xor    dh,BYTE PTR [rbx]
     b9c:	37                   	(bad)  
     b9d:	32 39                	xor    bh,BYTE PTR [rcx]
     b9f:	35 38 33 32 38       	xor    eax,0x38323338
     ba4:	39 39                	cmp    DWORD PTR [rcx],edi
     ba6:	31 36                	xor    DWORD PTR [rsi],esi
     ba8:	31 33                	xor    DWORD PTR [rbx],esi
     baa:	65 2d 34 35 46 00    	gs sub eax,0x463534
     bb0:	5f                   	pop    rdi
     bb1:	5f                   	pop    rdi
     bb2:	4c                   	rex.WR
     bb3:	44                   	rex.R
     bb4:	42                   	rex.X
     bb5:	4c 5f                	rex.WR pop rdi
     bb7:	48                   	rex.W
     bb8:	41 53                	push   r11
     bba:	5f                   	pop    rdi
     bbb:	51                   	push   rcx
     bbc:	55                   	push   rbp
     bbd:	49                   	rex.WB
     bbe:	45 54                	rex.RB push r12
     bc0:	5f                   	pop    rdi
     bc1:	4e                   	rex.WRX
     bc2:	41                   	rex.B
     bc3:	4e 5f                	rex.WRX pop rdi
     bc5:	5f                   	pop    rdi
     bc6:	20 31                	and    BYTE PTR [rcx],dh
     bc8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     bcb:	53                   	push   rbx
     bcc:	49 5a                	rex.WB pop r10
     bce:	45                   	rex.RB
     bcf:	4f                   	rex.WRXB
     bd0:	46 5f                	rex.RX pop rdi
     bd2:	44                   	rex.R
     bd3:	4f 55                	rex.WRXB push r13
     bd5:	42                   	rex.X
     bd6:	4c                   	rex.WR
     bd7:	45 5f                	rex.RB pop r15
     bd9:	5f                   	pop    rdi
     bda:	20 38                	and    BYTE PTR [rax],bh
     bdc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     bdf:	56                   	push   rsi
     be0:	45 52                	rex.RB push r10
     be2:	53                   	push   rbx
     be3:	49                   	rex.WB
     be4:	4f                   	rex.WRXB
     be5:	4e 5f                	rex.WRX pop rdi
     be7:	5f                   	pop    rdi
     be8:	20 22                	and    BYTE PTR [rdx],ah
     bea:	37                   	(bad)  
     beb:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
     bee:	30 22                	xor    BYTE PTR [rdx],ah
     bf0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     bf3:	46                   	rex.RX
     bf4:	4c 54                	rex.WR push rsp
     bf6:	33 32                	xor    esi,DWORD PTR [rdx]
     bf8:	58                   	pop    rax
     bf9:	5f                   	pop    rdi
     bfa:	4d                   	rex.WRB
     bfb:	41 58                	pop    r8
     bfd:	5f                   	pop    rdi
     bfe:	5f                   	pop    rdi
     bff:	20 31                	and    BYTE PTR [rcx],dh
     c01:	2e 37                	cs (bad) 
     c03:	39 37                	cmp    DWORD PTR [rdi],esi
     c05:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
     c08:	31 33                	xor    DWORD PTR [rbx],esi
     c0a:	34 38                	xor    al,0x38
     c0c:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
     c0f:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31383c4c <_end+0x31182c34>
     c15:	34 35                	xor    al,0x35
     c17:	32 37                	xor    dh,BYTE PTR [rdi]
     c19:	34 32                	xor    al,0x32
     c1b:	33 37                	xor    esi,DWORD PTR [rdi]
     c1d:	33 31                	xor    esi,DWORD PTR [rcx]
     c1f:	37                   	(bad)  
     c20:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
     c23:	35 37 65 2b 33       	xor    eax,0x332b6537
     c28:	30 38                	xor    BYTE PTR [rax],bh
     c2a:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     c2d:	78 00                	js     c2f <__FRAME_END__+0x363>
     c2f:	5f                   	pop    rdi
     c30:	5f                   	pop    rdi
     c31:	55                   	push   rbp
     c32:	49                   	rex.WB
     c33:	4e 54                	rex.WRX push rsp
     c35:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     c38:	41 58                	pop    r8
     c3a:	5f                   	pop    rdi
     c3b:	5f                   	pop    rdi
     c3c:	20 30                	and    BYTE PTR [rax],dh
     c3e:	78 66                	js     ca6 <__FRAME_END__+0x3da>
     c40:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     c44:	57                   	push   rdi
     c45:	49                   	rex.WB
     c46:	4e 54                	rex.WRX push rsp
     c48:	5f                   	pop    rdi
     c49:	57                   	push   rdi
     c4a:	49                   	rex.WB
     c4b:	44 54                	rex.R push rsp
     c4d:	48 5f                	rex.W pop rdi
     c4f:	5f                   	pop    rdi
     c50:	20 33                	and    BYTE PTR [rbx],dh
     c52:	32 00                	xor    al,BYTE PTR [rax]
     c54:	5f                   	pop    rdi
     c55:	5f                   	pop    rdi
     c56:	55                   	push   rbp
     c57:	49                   	rex.WB
     c58:	4e 54                	rex.WRX push rsp
     c5a:	36 34 5f             	ss xor al,0x5f
     c5d:	54                   	push   rsp
     c5e:	59                   	pop    rcx
     c5f:	50                   	push   rax
     c60:	45 5f                	rex.RB pop r15
     c62:	5f                   	pop    rdi
     c63:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     c67:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     c6b:	73 69                	jae    cd6 <__FRAME_END__+0x40a>
     c6d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c6f:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     c74:	74 00                	je     c76 <__FRAME_END__+0x3aa>
     c76:	5f                   	pop    rdi
     c77:	5f                   	pop    rdi
     c78:	49                   	rex.WB
     c79:	4e 54                	rex.WRX push rsp
     c7b:	5f                   	pop    rdi
     c7c:	4c                   	rex.WR
     c7d:	45                   	rex.RB
     c7e:	41 53                	push   r11
     c80:	54                   	push   rsp
     c81:	33 32                	xor    esi,DWORD PTR [rdx]
     c83:	5f                   	pop    rdi
     c84:	54                   	push   rsp
     c85:	59                   	pop    rcx
     c86:	50                   	push   rax
     c87:	45 5f                	rex.RB pop r15
     c89:	5f                   	pop    rdi
     c8a:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     c8d:	74 00                	je     c8f <__FRAME_END__+0x3c3>
     c8f:	5f                   	pop    rdi
     c90:	5f                   	pop    rdi
     c91:	46                   	rex.RX
     c92:	4c 54                	rex.WR push rsp
     c94:	33 32                	xor    esi,DWORD PTR [rdx]
     c96:	5f                   	pop    rdi
     c97:	4d                   	rex.WRB
     c98:	41 58                	pop    r8
     c9a:	5f                   	pop    rdi
     c9b:	45 58                	rex.RB pop r8
     c9d:	50                   	push   rax
     c9e:	5f                   	pop    rdi
     c9f:	5f                   	pop    rdi
     ca0:	20 31                	and    BYTE PTR [rcx],dh
     ca2:	32 38                	xor    bh,BYTE PTR [rax]
     ca4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ca7:	50                   	push   rax
     ca8:	49                   	rex.WB
     ca9:	43 5f                	rex.XB pop r15
     cab:	5f                   	pop    rdi
     cac:	20 32                	and    BYTE PTR [rdx],dh
     cae:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cb1:	46                   	rex.RX
     cb2:	4c 54                	rex.WR push rsp
     cb4:	36 34 5f             	ss xor al,0x5f
     cb7:	4d                   	rex.WRB
     cb8:	41 58                	pop    r8
     cba:	5f                   	pop    rdi
     cbb:	45 58                	rex.RB pop r8
     cbd:	50                   	push   rax
     cbe:	5f                   	pop    rdi
     cbf:	5f                   	pop    rdi
     cc0:	20 31                	and    BYTE PTR [rcx],dh
     cc2:	30 32                	xor    BYTE PTR [rdx],dh
     cc4:	34 00                	xor    al,0x0
     cc6:	5f                   	pop    rdi
     cc7:	5f                   	pop    rdi
     cc8:	53                   	push   rbx
     cc9:	53                   	push   rbx
     cca:	45 32 5f 5f          	xor    r11b,BYTE PTR [r15+0x5f]
     cce:	20 31                	and    BYTE PTR [rcx],dh
     cd0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cd3:	46                   	rex.RX
     cd4:	4c 54                	rex.WR push rsp
     cd6:	36 34 5f             	ss xor al,0x5f
     cd9:	4d                   	rex.WRB
     cda:	49                   	rex.WB
     cdb:	4e 5f                	rex.WRX pop rdi
     cdd:	45 58                	rex.RB pop r8
     cdf:	50                   	push   rax
     ce0:	5f                   	pop    rdi
     ce1:	5f                   	pop    rdi
     ce2:	20 28                	and    BYTE PTR [rax],ch
     ce4:	2d 31 30 32 31       	sub    eax,0x31323031
     ce9:	29 00                	sub    DWORD PTR [rax],eax
     ceb:	5f                   	pop    rdi
     cec:	5f                   	pop    rdi
     ced:	49                   	rex.WB
     cee:	4e 54                	rex.WRX push rsp
     cf0:	4d                   	rex.WRB
     cf1:	41 58                	pop    r8
     cf3:	5f                   	pop    rdi
     cf4:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     cf8:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     cfb:	23 23                	and    esp,DWORD PTR [rbx]
     cfd:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
     d01:	5f                   	pop    rdi
     d02:	47                   	rex.RXB
     d03:	43                   	rex.XB
     d04:	43 5f                	rex.XB pop r15
     d06:	41 54                	push   r12
     d08:	4f                   	rex.WRXB
     d09:	4d                   	rex.WRB
     d0a:	49                   	rex.WB
     d0b:	43 5f                	rex.XB pop r15
     d0d:	43                   	rex.XB
     d0e:	48                   	rex.W
     d0f:	41 52                	push   r10
     d11:	33 32                	xor    esi,DWORD PTR [rdx]
     d13:	5f                   	pop    rdi
     d14:	54                   	push   rsp
     d15:	5f                   	pop    rdi
     d16:	4c                   	rex.WR
     d17:	4f                   	rex.WRXB
     d18:	43                   	rex.XB
     d19:	4b 5f                	rex.WXB pop r15
     d1b:	46 52                	rex.RX push rdx
     d1d:	45                   	rex.RB
     d1e:	45 20 32             	and    BYTE PTR [r10],r14b
     d21:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     d24:	53                   	push   rbx
     d25:	49 5a                	rex.WB pop r10
     d27:	45                   	rex.RB
     d28:	4f                   	rex.WRXB
     d29:	46 5f                	rex.RX pop rdi
     d2b:	49                   	rex.WB
     d2c:	4e 54                	rex.WRX push rsp
     d2e:	31 32                	xor    DWORD PTR [rdx],esi
     d30:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
     d33:	20 31                	and    BYTE PTR [rcx],dh
     d35:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     d39:	50                   	push   rax
     d3a:	54                   	push   rsp
     d3b:	52                   	push   rdx
     d3c:	44                   	rex.R
     d3d:	49                   	rex.WB
     d3e:	46                   	rex.RX
     d3f:	46 5f                	rex.RX pop rdi
     d41:	54                   	push   rsp
     d42:	59                   	pop    rcx
     d43:	50                   	push   rax
     d44:	45 5f                	rex.RB pop r15
     d46:	5f                   	pop    rdi
     d47:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     d4b:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     d4f:	74 00                	je     d51 <__FRAME_END__+0x485>
     d51:	5f                   	pop    rdi
     d52:	5f                   	pop    rdi
     d53:	46                   	rex.RX
     d54:	4c 54                	rex.WR push rsp
     d56:	33 32                	xor    esi,DWORD PTR [rdx]
     d58:	5f                   	pop    rdi
     d59:	4d                   	rex.WRB
     d5a:	41 58                	pop    r8
     d5c:	5f                   	pop    rdi
     d5d:	5f                   	pop    rdi
     d5e:	20 33                	and    BYTE PTR [rbx],dh
     d60:	2e 34 30             	cs xor al,0x30
     d63:	32 38                	xor    bh,BYTE PTR [rax]
     d65:	32 33                	xor    dh,BYTE PTR [rbx]
     d67:	34 36                	xor    al,0x36
     d69:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
     d6c:	35 32 38 38 35       	xor    eax,0x35383832
     d71:	39 38                	cmp    DWORD PTR [rax],edi
     d73:	31 31                	xor    DWORD PTR [rcx],esi
     d75:	37                   	(bad)  
     d76:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
     d79:	38 33                	cmp    BYTE PTR [rbx],dh
     d7b:	34 38                	xor    al,0x38
     d7d:	34 35                	xor    al,0x35
     d7f:	31 36                	xor    DWORD PTR [rsi],esi
     d81:	39 32                	cmp    DWORD PTR [rdx],esi
     d83:	35 65 2b 33 38       	xor    eax,0x38332b65
     d88:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     d8b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     d8e:	49                   	rex.WB
     d8f:	4e 54                	rex.WRX push rsp
     d91:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
     d94:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
     d97:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
     d9a:	5f                   	pop    rdi
     d9b:	5f                   	pop    rdi
     d9c:	53                   	push   rbx
     d9d:	49 5a                	rex.WB pop r10
     d9f:	45                   	rex.RB
     da0:	4f                   	rex.WRXB
     da1:	46 5f                	rex.RX pop rdi
     da3:	4c                   	rex.WR
     da4:	4f                   	rex.WRXB
     da5:	4e                   	rex.WRX
     da6:	47 5f                	rex.RXB pop r15
     da8:	4c                   	rex.WR
     da9:	4f                   	rex.WRXB
     daa:	4e                   	rex.WRX
     dab:	47 5f                	rex.RXB pop r15
     dad:	5f                   	pop    rdi
     dae:	20 38                	and    BYTE PTR [rax],bh
     db0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     db3:	46                   	rex.RX
     db4:	4c 54                	rex.WR push rsp
     db6:	5f                   	pop    rdi
     db7:	44                   	rex.R
     db8:	49                   	rex.WB
     db9:	47 5f                	rex.RXB pop r15
     dbb:	5f                   	pop    rdi
     dbc:	20 36                	and    BYTE PTR [rsi],dh
     dbe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     dc1:	44                   	rex.R
     dc2:	42                   	rex.X
     dc3:	4c 5f                	rex.WR pop rdi
     dc5:	44                   	rex.R
     dc6:	45                   	rex.RB
     dc7:	4e                   	rex.WRX
     dc8:	4f 52                	rex.WRXB push r10
     dca:	4d 5f                	rex.WRB pop r15
     dcc:	4d                   	rex.WRB
     dcd:	49                   	rex.WB
     dce:	4e 5f                	rex.WRX pop rdi
     dd0:	5f                   	pop    rdi
     dd1:	20 28                	and    BYTE PTR [rax],ch
     dd3:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     dd7:	62                   	(bad)  
     dd8:	6c                   	ins    BYTE PTR es:[rdi],dx
     dd9:	65 29 34 2e          	sub    DWORD PTR gs:[rsi+rbp*1],esi
     ddd:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
     de0:	36 35 36 34 35 38    	ss xor eax,0x38353436
     de6:	34 31                	xor    al,0x31
     de8:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
     deb:	35 34 34 31 37       	xor    eax,0x37313434
     df0:	36 35 36 38 37 39    	ss xor eax,0x39373836
     df6:	32 38                	xor    bh,BYTE PTR [rax]
     df8:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
     dfb:	32 31                	xor    dh,BYTE PTR [rcx]
     dfd:	33 37                	xor    esi,DWORD PTR [rdi]
     dff:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
     e02:	33 32                	xor    esi,DWORD PTR [rdx]
     e04:	34 4c                	xor    al,0x4c
     e06:	29 00                	sub    DWORD PTR [rax],eax
     e08:	5f                   	pop    rdi
     e09:	5f                   	pop    rdi
     e0a:	49                   	rex.WB
     e0b:	4e 54                	rex.WRX push rsp
     e0d:	36 34 5f             	ss xor al,0x5f
     e10:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     e14:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     e17:	23 23                	and    esp,DWORD PTR [rbx]
     e19:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
     e1d:	5f                   	pop    rdi
     e1e:	55                   	push   rbp
     e1f:	49                   	rex.WB
     e20:	4e 54                	rex.WRX push rsp
     e22:	5f                   	pop    rdi
     e23:	46                   	rex.RX
     e24:	41 53                	push   r11
     e26:	54                   	push   rsp
     e27:	31 36                	xor    DWORD PTR [rsi],esi
     e29:	5f                   	pop    rdi
     e2a:	4d                   	rex.WRB
     e2b:	41 58                	pop    r8
     e2d:	5f                   	pop    rdi
     e2e:	5f                   	pop    rdi
     e2f:	20 30                	and    BYTE PTR [rax],dh
     e31:	78 66                	js     e99 <__FRAME_END__+0x5cd>
     e33:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     e3a:	66 66 66 66 66 66 66 
     e41:	66 55                	push   bp
     e43:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     e47:	46                   	rex.RX
     e48:	4c 54                	rex.WR push rsp
     e4a:	5f                   	pop    rdi
     e4b:	4d                   	rex.WRB
     e4c:	41 58                	pop    r8
     e4e:	5f                   	pop    rdi
     e4f:	31 30                	xor    DWORD PTR [rax],esi
     e51:	5f                   	pop    rdi
     e52:	45 58                	rex.RB pop r8
     e54:	50                   	push   rax
     e55:	5f                   	pop    rdi
     e56:	5f                   	pop    rdi
     e57:	20 33                	and    BYTE PTR [rbx],dh
     e59:	38 00                	cmp    BYTE PTR [rax],al
     e5b:	5f                   	pop    rdi
     e5c:	5f                   	pop    rdi
     e5d:	4e                   	rex.WRX
     e5e:	4f 5f                	rex.WRXB pop r15
     e60:	49                   	rex.WB
     e61:	4e                   	rex.WRX
     e62:	4c                   	rex.WR
     e63:	49                   	rex.WB
     e64:	4e                   	rex.WRX
     e65:	45 5f                	rex.RB pop r15
     e67:	5f                   	pop    rdi
     e68:	20 31                	and    BYTE PTR [rcx],dh
     e6a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     e6d:	55                   	push   rbp
     e6e:	49                   	rex.WB
     e6f:	4e 54                	rex.WRX push rsp
     e71:	5f                   	pop    rdi
     e72:	4c                   	rex.WR
     e73:	45                   	rex.RB
     e74:	41 53                	push   r11
     e76:	54                   	push   rsp
     e77:	36 34 5f             	ss xor al,0x5f
     e7a:	54                   	push   rsp
     e7b:	59                   	pop    rcx
     e7c:	50                   	push   rax
     e7d:	45 5f                	rex.RB pop r15
     e7f:	5f                   	pop    rdi
     e80:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     e84:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     e88:	73 69                	jae    ef3 <__FRAME_END__+0x627>
     e8a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     e8c:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     e91:	74 00                	je     e93 <__FRAME_END__+0x5c7>
     e93:	5f                   	pop    rdi
     e94:	5f                   	pop    rdi
     e95:	53                   	push   rbx
     e96:	49 5a                	rex.WB pop r10
     e98:	45                   	rex.RB
     e99:	4f                   	rex.WRXB
     e9a:	46 5f                	rex.RX pop rdi
     e9c:	4c                   	rex.WR
     e9d:	4f                   	rex.WRXB
     e9e:	4e                   	rex.WRX
     e9f:	47 5f                	rex.RXB pop r15
     ea1:	44                   	rex.R
     ea2:	4f 55                	rex.WRXB push r13
     ea4:	42                   	rex.X
     ea5:	4c                   	rex.WR
     ea6:	45 5f                	rex.RB pop r15
     ea8:	5f                   	pop    rdi
     ea9:	20 31                	and    BYTE PTR [rcx],dh
     eab:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     eaf:	53                   	push   rbx
     eb0:	54                   	push   rsp
     eb1:	44                   	rex.R
     eb2:	43 5f                	rex.XB pop r15
     eb4:	49 53                	rex.WB push r11
     eb6:	4f 5f                	rex.WRXB pop r15
     eb8:	31 30                	xor    DWORD PTR [rax],esi
     eba:	36 34 36             	ss xor al,0x36
     ebd:	5f                   	pop    rdi
     ebe:	5f                   	pop    rdi
     ebf:	20 32                	and    BYTE PTR [rdx],dh
     ec1:	30 31                	xor    BYTE PTR [rcx],dh
     ec3:	37                   	(bad)  
     ec4:	30 36                	xor    BYTE PTR [rsi],dh
     ec6:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     eca:	50                   	push   rax
     ecb:	54                   	push   rsp
     ecc:	52                   	push   rdx
     ecd:	44                   	rex.R
     ece:	49                   	rex.WB
     ecf:	46                   	rex.RX
     ed0:	46 5f                	rex.RX pop rdi
     ed2:	57                   	push   rdi
     ed3:	49                   	rex.WB
     ed4:	44 54                	rex.R push rsp
     ed6:	48 5f                	rex.W pop rdi
     ed8:	5f                   	pop    rdi
     ed9:	20 36                	and    BYTE PTR [rsi],dh
     edb:	34 00                	xor    al,0x0
     edd:	5f                   	pop    rdi
     ede:	5f                   	pop    rdi
     edf:	53                   	push   rbx
     ee0:	43                   	rex.XB
     ee1:	48                   	rex.W
     ee2:	41 52                	push   r10
     ee4:	5f                   	pop    rdi
     ee5:	4d                   	rex.WRB
     ee6:	41 58                	pop    r8
     ee8:	5f                   	pop    rdi
     ee9:	5f                   	pop    rdi
     eea:	20 30                	and    BYTE PTR [rax],dh
     eec:	78 37                	js     f25 <__FRAME_END__+0x659>
     eee:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     ef2:	46                   	rex.RX
     ef3:	4c 54                	rex.WR push rsp
     ef5:	33 32                	xor    esi,DWORD PTR [rdx]
     ef7:	5f                   	pop    rdi
     ef8:	4d                   	rex.WRB
     ef9:	49                   	rex.WB
     efa:	4e 5f                	rex.WRX pop rdi
     efc:	5f                   	pop    rdi
     efd:	20 31                	and    BYTE PTR [rcx],dh
     eff:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
     f02:	35 34 39 34 33       	xor    eax,0x33343934
     f07:	35 30 38 32 32       	xor    eax,0x32323830
     f0c:	32 38                	xor    bh,BYTE PTR [rax]
     f0e:	37                   	(bad)  
     f0f:	35 30 37 39 36       	xor    eax,0x36393730
     f14:	38 37                	cmp    BYTE PTR [rdi],dh
     f16:	33 36                	xor    esi,DWORD PTR [rsi]
     f18:	35 33 37 32 32       	xor    eax,0x32323733
     f1d:	32 32                	xor    dh,BYTE PTR [rdx]
     f1f:	34 35                	xor    al,0x35
     f21:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
     f25:	33 38                	xor    edi,DWORD PTR [rax]
     f27:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     f2a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     f2d:	49                   	rex.WB
     f2e:	4e 54                	rex.WRX push rsp
     f30:	5f                   	pop    rdi
     f31:	4c                   	rex.WR
     f32:	45                   	rex.RB
     f33:	41 53                	push   r11
     f35:	54                   	push   rsp
     f36:	36 34 5f             	ss xor al,0x5f
     f39:	54                   	push   rsp
     f3a:	59                   	pop    rcx
     f3b:	50                   	push   rax
     f3c:	45 5f                	rex.RB pop r15
     f3e:	5f                   	pop    rdi
     f3f:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     f43:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     f47:	74 00                	je     f49 <__FRAME_END__+0x67d>
     f49:	5f                   	pop    rdi
     f4a:	5f                   	pop    rdi
     f4b:	47                   	rex.RXB
     f4c:	4e 55                	rex.WRX push rbp
     f4e:	43 5f                	rex.XB pop r15
     f50:	4d                   	rex.WRB
     f51:	49                   	rex.WB
     f52:	4e                   	rex.WRX
     f53:	4f 52                	rex.WRXB push r10
     f55:	5f                   	pop    rdi
     f56:	5f                   	pop    rdi
     f57:	20 33                	and    BYTE PTR [rbx],dh
     f59:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     f5c:	46                   	rex.RX
     f5d:	4c 54                	rex.WR push rsp
     f5f:	36 34 58             	ss xor al,0x58
     f62:	5f                   	pop    rdi
     f63:	4d                   	rex.WRB
     f64:	49                   	rex.WB
     f65:	4e 5f                	rex.WRX pop rdi
     f67:	5f                   	pop    rdi
     f68:	20 33                	and    BYTE PTR [rbx],dh
     f6a:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
     f6d:	32 31                	xor    dh,BYTE PTR [rcx]
     f6f:	30 33                	xor    BYTE PTR [rbx],dh
     f71:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
     f74:	31 31                	xor    DWORD PTR [rcx],esi
     f76:	32 30                	xor    dh,BYTE PTR [rax]
     f78:	39 33                	cmp    DWORD PTR [rbx],esi
     f7a:	35 30 36 32 36       	xor    eax,0x36323630
     f7f:	32 36                	xor    dh,BYTE PTR [rsi]
     f81:	37                   	(bad)  
     f82:	37                   	(bad)  
     f83:	38 31                	cmp    BYTE PTR [rcx],dh
     f85:	37                   	(bad)  
     f86:	33 32                	xor    esi,DWORD PTR [rdx]
     f88:	31 37                	xor    DWORD PTR [rdi],esi
     f8a:	35 32 36 30 65       	xor    eax,0x65303632
     f8f:	2d 34 39 33 32       	sub    eax,0x32333934
     f94:	46                   	rex.RX
     f95:	36 34 78             	ss xor al,0x78
     f98:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     f9b:	44                   	rex.R
     f9c:	45                   	rex.RB
     f9d:	43 5f                	rex.XB pop r15
     f9f:	45 56                	rex.RB push r14
     fa1:	41                   	rex.B
     fa2:	4c 5f                	rex.WR pop rdi
     fa4:	4d                   	rex.WRB
     fa5:	45 54                	rex.RB push r12
     fa7:	48                   	rex.W
     fa8:	4f                   	rex.WRXB
     fa9:	44 5f                	rex.R pop rdi
     fab:	5f                   	pop    rdi
     fac:	20 32                	and    BYTE PTR [rdx],dh
     fae:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     fb1:	44                   	rex.R
     fb2:	45                   	rex.RB
     fb3:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     fb6:	5f                   	pop    rdi
     fb7:	4d                   	rex.WRB
     fb8:	41 58                	pop    r8
     fba:	5f                   	pop    rdi
     fbb:	5f                   	pop    rdi
     fbc:	20 39                	and    BYTE PTR [rcx],bh
     fbe:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
     fc1:	39 39                	cmp    DWORD PTR [rcx],edi
     fc3:	39 39                	cmp    DWORD PTR [rcx],edi
     fc5:	45 39 36             	cmp    DWORD PTR [r14],r14d
     fc8:	44                   	rex.R
     fc9:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
     fcd:	4c                   	rex.WR
     fce:	4f                   	rex.WRXB
     fcf:	4e                   	rex.WRX
     fd0:	47 5f                	rex.RXB pop r15
     fd2:	4c                   	rex.WR
     fd3:	4f                   	rex.WRXB
     fd4:	4e                   	rex.WRX
     fd5:	47 5f                	rex.RXB pop r15
     fd7:	4d                   	rex.WRB
     fd8:	41 58                	pop    r8
     fda:	5f                   	pop    rdi
     fdb:	5f                   	pop    rdi
     fdc:	20 30                	and    BYTE PTR [rax],dh
     fde:	78 37                	js     1017 <__FRAME_END__+0x74b>
     fe0:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     fe7:	66 66 66 66 66 66 66 
     fee:	66 4c                	data16 rex.WR
     ff0:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     ff4:	47                   	rex.RXB
     ff5:	43                   	rex.XB
     ff6:	43 5f                	rex.XB pop r15
     ff8:	41 54                	push   r12
     ffa:	4f                   	rex.WRXB
     ffb:	4d                   	rex.WRB
     ffc:	49                   	rex.WB
     ffd:	43 5f                	rex.XB pop r15
     fff:	42                   	rex.X
    1000:	4f                   	rex.WRXB
    1001:	4f                   	rex.WRXB
    1002:	4c 5f                	rex.WR pop rdi
    1004:	4c                   	rex.WR
    1005:	4f                   	rex.WRXB
    1006:	43                   	rex.XB
    1007:	4b 5f                	rex.WXB pop r15
    1009:	46 52                	rex.RX push rdx
    100b:	45                   	rex.RB
    100c:	45 20 32             	and    BYTE PTR [r10],r14b
    100f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1012:	53                   	push   rbx
    1013:	49 5a                	rex.WB pop r10
    1015:	45 5f                	rex.RB pop r15
    1017:	54                   	push   rsp
    1018:	59                   	pop    rcx
    1019:	50                   	push   rax
    101a:	45 5f                	rex.RB pop r15
    101c:	5f                   	pop    rdi
    101d:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1021:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1025:	73 69                	jae    1090 <__FRAME_END__+0x7c4>
    1027:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1029:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    102e:	74 00                	je     1030 <__FRAME_END__+0x764>
    1030:	5f                   	pop    rdi
    1031:	5f                   	pop    rdi
    1032:	4c                   	rex.WR
    1033:	44                   	rex.R
    1034:	42                   	rex.X
    1035:	4c 5f                	rex.WR pop rdi
    1037:	4d                   	rex.WRB
    1038:	49                   	rex.WB
    1039:	4e 5f                	rex.WRX pop rdi
    103b:	45 58                	rex.RB pop r8
    103d:	50                   	push   rax
    103e:	5f                   	pop    rdi
    103f:	5f                   	pop    rdi
    1040:	20 28                	and    BYTE PTR [rax],ch
    1042:	2d 31 36 33 38       	sub    eax,0x38333631
    1047:	31 29                	xor    DWORD PTR [rcx],ebp
    1049:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    104c:	46                   	rex.RX
    104d:	4c 54                	rex.WR push rsp
    104f:	33 32                	xor    esi,DWORD PTR [rdx]
    1051:	5f                   	pop    rdi
    1052:	4d                   	rex.WRB
    1053:	41                   	rex.B
    1054:	4e 54                	rex.WRX push rsp
    1056:	5f                   	pop    rdi
    1057:	44                   	rex.R
    1058:	49                   	rex.WB
    1059:	47 5f                	rex.RXB pop r15
    105b:	5f                   	pop    rdi
    105c:	20 32                	and    BYTE PTR [rdx],dh
    105e:	34 00                	xor    al,0x0
    1060:	5f                   	pop    rdi
    1061:	5f                   	pop    rdi
    1062:	47                   	rex.RXB
    1063:	43                   	rex.XB
    1064:	43 5f                	rex.XB pop r15
    1066:	49                   	rex.WB
    1067:	45                   	rex.RB
    1068:	43 5f                	rex.XB pop r15
    106a:	35 35 39 5f 43       	xor    eax,0x435f3935
    106f:	4f                   	rex.WRXB
    1070:	4d 50                	rex.WRB push r8
    1072:	4c                   	rex.WR
    1073:	45 58                	rex.RB pop r8
    1075:	20 32                	and    BYTE PTR [rdx],dh
    1077:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    107a:	46                   	rex.RX
    107b:	4c 54                	rex.WR push rsp
    107d:	5f                   	pop    rdi
    107e:	48                   	rex.W
    107f:	41 53                	push   r11
    1081:	5f                   	pop    rdi
    1082:	51                   	push   rcx
    1083:	55                   	push   rbp
    1084:	49                   	rex.WB
    1085:	45 54                	rex.RB push r12
    1087:	5f                   	pop    rdi
    1088:	4e                   	rex.WRX
    1089:	41                   	rex.B
    108a:	4e 5f                	rex.WRX pop rdi
    108c:	5f                   	pop    rdi
    108d:	20 31                	and    BYTE PTR [rcx],dh
    108f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1092:	53                   	push   rbx
    1093:	54                   	push   rsp
    1094:	44                   	rex.R
    1095:	43 5f                	rex.XB pop r15
    1097:	49                   	rex.WB
    1098:	45                   	rex.RB
    1099:	43 5f                	rex.XB pop r15
    109b:	35 35 39 5f 43       	xor    eax,0x435f3935
    10a0:	4f                   	rex.WRXB
    10a1:	4d 50                	rex.WRB push r8
    10a3:	4c                   	rex.WR
    10a4:	45 58                	rex.RB pop r8
    10a6:	5f                   	pop    rdi
    10a7:	5f                   	pop    rdi
    10a8:	20 31                	and    BYTE PTR [rcx],dh
    10aa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10ad:	46                   	rex.RX
    10ae:	4c 54                	rex.WR push rsp
    10b0:	5f                   	pop    rdi
    10b1:	4d                   	rex.WRB
    10b2:	49                   	rex.WB
    10b3:	4e 5f                	rex.WRX pop rdi
    10b5:	45 58                	rex.RB pop r8
    10b7:	50                   	push   rax
    10b8:	5f                   	pop    rdi
    10b9:	5f                   	pop    rdi
    10ba:	20 28                	and    BYTE PTR [rax],ch
    10bc:	2d 31 32 35 29       	sub    eax,0x29353231
    10c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    10c5:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    10cc:	31 00                	xor    DWORD PTR [rax],eax
    10ce:	5f                   	pop    rdi
    10cf:	5f                   	pop    rdi
    10d0:	46                   	rex.RX
    10d1:	4c 54                	rex.WR push rsp
    10d3:	33 32                	xor    esi,DWORD PTR [rdx]
    10d5:	58                   	pop    rax
    10d6:	5f                   	pop    rdi
    10d7:	4d                   	rex.WRB
    10d8:	49                   	rex.WB
    10d9:	4e 5f                	rex.WRX pop rdi
    10db:	5f                   	pop    rdi
    10dc:	20 32                	and    BYTE PTR [rdx],dh
    10de:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    10e1:	35 30 37 33 38       	xor    eax,0x38333730
    10e6:	35 38 35 30 37       	xor    eax,0x37303538
    10eb:	32 30                	xor    dh,BYTE PTR [rax]
    10ed:	31 33                	xor    DWORD PTR [rbx],esi
    10ef:	38 33                	cmp    BYTE PTR [rbx],dh
    10f1:	30 39                	xor    BYTE PTR [rcx],bh
    10f3:	30 32                	xor    BYTE PTR [rdx],dh
    10f5:	33 32                	xor    esi,DWORD PTR [rdx]
    10f7:	37                   	(bad)  
    10f8:	31 37                	xor    DWORD PTR [rdi],esi
    10fa:	33 33                	xor    esi,DWORD PTR [rbx]
    10fc:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    10ff:	34 30                	xor    al,0x30
    1101:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
    1108:	33 32                	xor    esi,DWORD PTR [rdx]
    110a:	78 00                	js     110c <__FRAME_END__+0x840>
    110c:	5f                   	pop    rdi
    110d:	5f                   	pop    rdi
    110e:	53                   	push   rbx
    110f:	49 5a                	rex.WB pop r10
    1111:	45 5f                	rex.RB pop r15
    1113:	4d                   	rex.WRB
    1114:	41 58                	pop    r8
    1116:	5f                   	pop    rdi
    1117:	5f                   	pop    rdi
    1118:	20 30                	and    BYTE PTR [rax],dh
    111a:	78 66                	js     1182 <__FRAME_END__+0x8b6>
    111c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1123:	66 66 66 66 66 66 66 
    112a:	66 55                	push   bp
    112c:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1130:	55                   	push   rbp
    1131:	49                   	rex.WB
    1132:	4e 54                	rex.WRX push rsp
    1134:	5f                   	pop    rdi
    1135:	4c                   	rex.WR
    1136:	45                   	rex.RB
    1137:	41 53                	push   r11
    1139:	54                   	push   rsp
    113a:	36 34 5f             	ss xor al,0x5f
    113d:	4d                   	rex.WRB
    113e:	41 58                	pop    r8
    1140:	5f                   	pop    rdi
    1141:	5f                   	pop    rdi
    1142:	20 30                	and    BYTE PTR [rax],dh
    1144:	78 66                	js     11ac <__FRAME_END__+0x8e0>
    1146:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    114d:	66 66 66 66 66 66 66 
    1154:	66 55                	push   bp
    1156:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    115a:	49                   	rex.WB
    115b:	4e 54                	rex.WRX push rsp
    115d:	5f                   	pop    rdi
    115e:	46                   	rex.RX
    115f:	41 53                	push   r11
    1161:	54                   	push   rsp
    1162:	36 34 5f             	ss xor al,0x5f
    1165:	4d                   	rex.WRB
    1166:	41 58                	pop    r8
    1168:	5f                   	pop    rdi
    1169:	5f                   	pop    rdi
    116a:	20 30                	and    BYTE PTR [rax],dh
    116c:	78 37                	js     11a5 <__FRAME_END__+0x8d9>
    116e:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1175:	66 66 66 66 66 66 66 
    117c:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1181:	53                   	push   rbx
    1182:	53                   	push   rbx
    1183:	45 5f                	rex.RB pop r15
    1185:	5f                   	pop    rdi
    1186:	20 31                	and    BYTE PTR [rcx],dh
    1188:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    118b:	4f 52                	rex.WRXB push r10
    118d:	44                   	rex.R
    118e:	45 52                	rex.RB push r10
    1190:	5f                   	pop    rdi
    1191:	42                   	rex.X
    1192:	49                   	rex.WB
    1193:	47 5f                	rex.RXB pop r15
    1195:	45                   	rex.RB
    1196:	4e                   	rex.WRX
    1197:	44                   	rex.R
    1198:	49                   	rex.WB
    1199:	41                   	rex.B
    119a:	4e 5f                	rex.WRX pop rdi
    119c:	5f                   	pop    rdi
    119d:	20 34 33             	and    BYTE PTR [rbx+rsi*1],dh
    11a0:	32 31                	xor    dh,BYTE PTR [rcx]
    11a2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    11a5:	49                   	rex.WB
    11a6:	4e 54                	rex.WRX push rsp
    11a8:	50                   	push   rax
    11a9:	54                   	push   rsp
    11aa:	52                   	push   rdx
    11ab:	5f                   	pop    rdi
    11ac:	54                   	push   rsp
    11ad:	59                   	pop    rcx
    11ae:	50                   	push   rax
    11af:	45 5f                	rex.RB pop r15
    11b1:	5f                   	pop    rdi
    11b2:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    11b6:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    11ba:	74 00                	je     11bc <__FRAME_END__+0x8f0>
    11bc:	5f                   	pop    rdi
    11bd:	5f                   	pop    rdi
    11be:	4c                   	rex.WR
    11bf:	4f                   	rex.WRXB
    11c0:	4e                   	rex.WRX
    11c1:	47 5f                	rex.RXB pop r15
    11c3:	4d                   	rex.WRB
    11c4:	41 58                	pop    r8
    11c6:	5f                   	pop    rdi
    11c7:	5f                   	pop    rdi
    11c8:	20 30                	and    BYTE PTR [rax],dh
    11ca:	78 37                	js     1203 <__FRAME_END__+0x937>
    11cc:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    11d3:	66 66 66 66 66 66 66 
    11da:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    11df:	49                   	rex.WB
    11e0:	4e 54                	rex.WRX push rsp
    11e2:	5f                   	pop    rdi
    11e3:	46                   	rex.RX
    11e4:	41 53                	push   r11
    11e6:	54                   	push   rsp
    11e7:	33 32                	xor    esi,DWORD PTR [rdx]
    11e9:	5f                   	pop    rdi
    11ea:	57                   	push   rdi
    11eb:	49                   	rex.WB
    11ec:	44 54                	rex.R push rsp
    11ee:	48 5f                	rex.W pop rdi
    11f0:	5f                   	pop    rdi
    11f1:	20 36                	and    BYTE PTR [rsi],dh
    11f3:	34 00                	xor    al,0x0
    11f5:	5f                   	pop    rdi
    11f6:	5f                   	pop    rdi
    11f7:	46                   	rex.RX
    11f8:	4c 54                	rex.WR push rsp
    11fa:	36 34 58             	ss xor al,0x58
    11fd:	5f                   	pop    rdi
    11fe:	44                   	rex.R
    11ff:	45                   	rex.RB
    1200:	4e                   	rex.WRX
    1201:	4f 52                	rex.WRXB push r10
    1203:	4d 5f                	rex.WRB pop r15
    1205:	4d                   	rex.WRB
    1206:	49                   	rex.WB
    1207:	4e 5f                	rex.WRX pop rdi
    1209:	5f                   	pop    rdi
    120a:	20 33                	and    BYTE PTR [rbx],dh
    120c:	2e 36 34 35          	cs ss xor al,0x35
    1210:	31 39                	xor    DWORD PTR [rcx],edi
    1212:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 3838434b <_end+0x38183333>
    1218:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    121b:	34 36                	xor    al,0x36
    121d:	30 32                	xor    BYTE PTR [rdx],dh
    121f:	35 32 38 34 30       	xor    eax,0x30343832
    1224:	35 39 33 33 36       	xor    eax,0x36333339
    1229:	31 39                	xor    DWORD PTR [rcx],edi
    122b:	34 31                	xor    al,0x31
    122d:	39 38                	cmp    DWORD PTR [rax],edi
    122f:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    1232:	34 39                	xor    al,0x39
    1234:	35 31 46 36 34       	xor    eax,0x34364631
    1239:	78 00                	js     123b <__FRAME_END__+0x96f>
    123b:	5f                   	pop    rdi
    123c:	5f                   	pop    rdi
    123d:	46                   	rex.RX
    123e:	4c 54                	rex.WR push rsp
    1240:	33 32                	xor    esi,DWORD PTR [rdx]
    1242:	5f                   	pop    rdi
    1243:	4d                   	rex.WRB
    1244:	41 58                	pop    r8
    1246:	5f                   	pop    rdi
    1247:	31 30                	xor    DWORD PTR [rax],esi
    1249:	5f                   	pop    rdi
    124a:	45 58                	rex.RB pop r8
    124c:	50                   	push   rax
    124d:	5f                   	pop    rdi
    124e:	5f                   	pop    rdi
    124f:	20 33                	and    BYTE PTR [rbx],dh
    1251:	38 00                	cmp    BYTE PTR [rax],al
    1253:	5f                   	pop    rdi
    1254:	5f                   	pop    rdi
    1255:	4c                   	rex.WR
    1256:	44                   	rex.R
    1257:	42                   	rex.X
    1258:	4c 5f                	rex.WR pop rdi
    125a:	4d                   	rex.WRB
    125b:	41 58                	pop    r8
    125d:	5f                   	pop    rdi
    125e:	5f                   	pop    rdi
    125f:	20 31                	and    BYTE PTR [rcx],dh
    1261:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    1264:	39 37                	cmp    DWORD PTR [rdi],esi
    1266:	33 31                	xor    esi,DWORD PTR [rcx]
    1268:	34 39                	xor    al,0x39
    126a:	35 33 35 37 32       	xor    eax,0x32373533
    126f:	33 31                	xor    esi,DWORD PTR [rcx]
    1271:	37                   	(bad)  
    1272:	36 35 30 32 31 32    	ss xor eax,0x32313230
    1278:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    127b:	35 33 30 33 30       	xor    eax,0x30333033
    1280:	39 37                	cmp    DWORD PTR [rdi],esi
    1282:	30 32                	xor    BYTE PTR [rdx],dh
    1284:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    1287:	34 39                	xor    al,0x39
    1289:	33 32                	xor    esi,DWORD PTR [rdx]
    128b:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    128f:	53                   	push   rbx
    1290:	49 5a                	rex.WB pop r10
    1292:	45                   	rex.RB
    1293:	4f                   	rex.WRXB
    1294:	46 5f                	rex.RX pop rdi
    1296:	53                   	push   rbx
    1297:	48                   	rex.W
    1298:	4f 52                	rex.WRXB push r10
    129a:	54                   	push   rsp
    129b:	5f                   	pop    rdi
    129c:	5f                   	pop    rdi
    129d:	20 32                	and    BYTE PTR [rdx],dh
    129f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    12a2:	46                   	rex.RX
    12a3:	4c 54                	rex.WR push rsp
    12a5:	5f                   	pop    rdi
    12a6:	4d                   	rex.WRB
    12a7:	49                   	rex.WB
    12a8:	4e 5f                	rex.WRX pop rdi
    12aa:	5f                   	pop    rdi
    12ab:	20 31                	and    BYTE PTR [rcx],dh
    12ad:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    12b0:	35 34 39 34 33       	xor    eax,0x33343934
    12b5:	35 30 38 32 32       	xor    eax,0x32323830
    12ba:	32 38                	xor    bh,BYTE PTR [rax]
    12bc:	37                   	(bad)  
    12bd:	35 30 37 39 36       	xor    eax,0x36393730
    12c2:	38 37                	cmp    BYTE PTR [rdi],dh
    12c4:	33 36                	xor    esi,DWORD PTR [rsi]
    12c6:	35 33 37 32 32       	xor    eax,0x32323733
    12cb:	32 32                	xor    dh,BYTE PTR [rdx]
    12cd:	34 35                	xor    al,0x35
    12cf:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    12d3:	33 38                	xor    edi,DWORD PTR [rax]
    12d5:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    12d9:	47                   	rex.RXB
    12da:	43                   	rex.XB
    12db:	43 5f                	rex.XB pop r15
    12dd:	41 54                	push   r12
    12df:	4f                   	rex.WRXB
    12e0:	4d                   	rex.WRB
    12e1:	49                   	rex.WB
    12e2:	43 5f                	rex.XB pop r15
    12e4:	49                   	rex.WB
    12e5:	4e 54                	rex.WRX push rsp
    12e7:	5f                   	pop    rdi
    12e8:	4c                   	rex.WR
    12e9:	4f                   	rex.WRXB
    12ea:	43                   	rex.XB
    12eb:	4b 5f                	rex.WXB pop r15
    12ed:	46 52                	rex.RX push rdx
    12ef:	45                   	rex.RB
    12f0:	45 20 32             	and    BYTE PTR [r10],r14b
    12f3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    12f6:	46                   	rex.RX
    12f7:	4c 54                	rex.WR push rsp
    12f9:	36 34 5f             	ss xor al,0x5f
    12fc:	48                   	rex.W
    12fd:	41 53                	push   r11
    12ff:	5f                   	pop    rdi
    1300:	49                   	rex.WB
    1301:	4e                   	rex.WRX
    1302:	46                   	rex.RX
    1303:	49                   	rex.WB
    1304:	4e                   	rex.WRX
    1305:	49 54                	rex.WB push r12
    1307:	59                   	pop    rcx
    1308:	5f                   	pop    rdi
    1309:	5f                   	pop    rdi
    130a:	20 31                	and    BYTE PTR [rcx],dh
    130c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    130f:	49                   	rex.WB
    1310:	4e 54                	rex.WRX push rsp
    1312:	31 36                	xor    DWORD PTR [rsi],esi
    1314:	5f                   	pop    rdi
    1315:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    1319:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    131c:	5f                   	pop    rdi
    131d:	5f                   	pop    rdi
    131e:	46                   	rex.RX
    131f:	4c 54                	rex.WR push rsp
    1321:	36 34 58             	ss xor al,0x58
    1324:	5f                   	pop    rdi
    1325:	48                   	rex.W
    1326:	41 53                	push   r11
    1328:	5f                   	pop    rdi
    1329:	49                   	rex.WB
    132a:	4e                   	rex.WRX
    132b:	46                   	rex.RX
    132c:	49                   	rex.WB
    132d:	4e                   	rex.WRX
    132e:	49 54                	rex.WB push r12
    1330:	59                   	pop    rcx
    1331:	5f                   	pop    rdi
    1332:	5f                   	pop    rdi
    1333:	20 31                	and    BYTE PTR [rcx],dh
    1335:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1338:	44                   	rex.R
    1339:	45                   	rex.RB
    133a:	43                   	rex.XB
    133b:	49                   	rex.WB
    133c:	4d                   	rex.WRB
    133d:	41                   	rex.B
    133e:	4c 5f                	rex.WR pop rdi
    1340:	44                   	rex.R
    1341:	49                   	rex.WB
    1342:	47 5f                	rex.RXB pop r15
    1344:	5f                   	pop    rdi
    1345:	20 32                	and    BYTE PTR [rdx],dh
    1347:	31 00                	xor    DWORD PTR [rax],eax
    1349:	5f                   	pop    rdi
    134a:	5f                   	pop    rdi
    134b:	49                   	rex.WB
    134c:	4e 54                	rex.WRX push rsp
    134e:	5f                   	pop    rdi
    134f:	46                   	rex.RX
    1350:	41 53                	push   r11
    1352:	54                   	push   rsp
    1353:	36 34 5f             	ss xor al,0x5f
    1356:	54                   	push   rsp
    1357:	59                   	pop    rcx
    1358:	50                   	push   rax
    1359:	45 5f                	rex.RB pop r15
    135b:	5f                   	pop    rdi
    135c:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1360:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1364:	74 00                	je     1366 <__FRAME_END__+0xa9a>
    1366:	5f                   	pop    rdi
    1367:	5f                   	pop    rdi
    1368:	44                   	rex.R
    1369:	45                   	rex.RB
    136a:	43                   	rex.XB
    136b:	36 34 5f             	ss xor al,0x5f
    136e:	4d                   	rex.WRB
    136f:	41 58                	pop    r8
    1371:	5f                   	pop    rdi
    1372:	5f                   	pop    rdi
    1373:	20 39                	and    BYTE PTR [rcx],bh
    1375:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    1378:	39 39                	cmp    DWORD PTR [rcx],edi
    137a:	39 39                	cmp    DWORD PTR [rcx],edi
    137c:	39 39                	cmp    DWORD PTR [rcx],edi
    137e:	39 39                	cmp    DWORD PTR [rcx],edi
    1380:	39 39                	cmp    DWORD PTR [rcx],edi
    1382:	39 39                	cmp    DWORD PTR [rcx],edi
    1384:	39 45 33             	cmp    DWORD PTR [rbp+0x33],eax
    1387:	38 34 44             	cmp    BYTE PTR [rsp+rax*2],dh
    138a:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    138e:	44                   	rex.R
    138f:	45                   	rex.RB
    1390:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    1393:	5f                   	pop    rdi
    1394:	53                   	push   rbx
    1395:	55                   	push   rbp
    1396:	42                   	rex.X
    1397:	4e                   	rex.WRX
    1398:	4f 52                	rex.WRXB push r10
    139a:	4d                   	rex.WRB
    139b:	41                   	rex.B
    139c:	4c 5f                	rex.WR pop rdi
    139e:	4d                   	rex.WRB
    139f:	49                   	rex.WB
    13a0:	4e 5f                	rex.WRX pop rdi
    13a2:	5f                   	pop    rdi
    13a3:	20 30                	and    BYTE PTR [rax],dh
    13a5:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    13a8:	30 30                	xor    BYTE PTR [rax],dh
    13aa:	30 31                	xor    BYTE PTR [rcx],dh
    13ac:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    13b2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    13b5:	46                   	rex.RX
    13b6:	4c 54                	rex.WR push rsp
    13b8:	31 32                	xor    DWORD PTR [rdx],esi
    13ba:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    13bd:	49                   	rex.WB
    13be:	4e 5f                	rex.WRX pop rdi
    13c0:	31 30                	xor    DWORD PTR [rax],esi
    13c2:	5f                   	pop    rdi
    13c3:	45 58                	rex.RB pop r8
    13c5:	50                   	push   rax
    13c6:	5f                   	pop    rdi
    13c7:	5f                   	pop    rdi
    13c8:	20 28                	and    BYTE PTR [rax],ch
    13ca:	2d 34 39 33 31       	sub    eax,0x31333934
    13cf:	29 00                	sub    DWORD PTR [rax],eax
    13d1:	5f                   	pop    rdi
    13d2:	5f                   	pop    rdi
    13d3:	49                   	rex.WB
    13d4:	4e 54                	rex.WRX push rsp
    13d6:	5f                   	pop    rdi
    13d7:	4d                   	rex.WRB
    13d8:	41 58                	pop    r8
    13da:	5f                   	pop    rdi
    13db:	5f                   	pop    rdi
    13dc:	20 30                	and    BYTE PTR [rax],dh
    13de:	78 37                	js     1417 <__FRAME_END__+0xb4b>
    13e0:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    13e7:	00 5f 5f 
    13ea:	46                   	rex.RX
    13eb:	4c 54                	rex.WR push rsp
    13ed:	31 32                	xor    DWORD PTR [rdx],esi
    13ef:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    13f2:	41 53                	push   r11
    13f4:	5f                   	pop    rdi
    13f5:	44                   	rex.R
    13f6:	45                   	rex.RB
    13f7:	4e                   	rex.WRX
    13f8:	4f 52                	rex.WRXB push r10
    13fa:	4d 5f                	rex.WRB pop r15
    13fc:	5f                   	pop    rdi
    13fd:	20 31                	and    BYTE PTR [rcx],dh
    13ff:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1402:	47                   	rex.RXB
    1403:	43                   	rex.XB
    1404:	43 5f                	rex.XB pop r15
    1406:	41 54                	push   r12
    1408:	4f                   	rex.WRXB
    1409:	4d                   	rex.WRB
    140a:	49                   	rex.WB
    140b:	43 5f                	rex.XB pop r15
    140d:	4c                   	rex.WR
    140e:	4c                   	rex.WR
    140f:	4f                   	rex.WRXB
    1410:	4e                   	rex.WRX
    1411:	47 5f                	rex.RXB pop r15
    1413:	4c                   	rex.WR
    1414:	4f                   	rex.WRXB
    1415:	43                   	rex.XB
    1416:	4b 5f                	rex.WXB pop r15
    1418:	46 52                	rex.RX push rdx
    141a:	45                   	rex.RB
    141b:	45 20 32             	and    BYTE PTR [r10],r14b
    141e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1421:	46                   	rex.RX
    1422:	4c 54                	rex.WR push rsp
    1424:	31 32                	xor    DWORD PTR [rdx],esi
    1426:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1429:	49                   	rex.WB
    142a:	4e 5f                	rex.WRX pop rdi
    142c:	5f                   	pop    rdi
    142d:	20 33                	and    BYTE PTR [rbx],dh
    142f:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    1432:	32 31                	xor    dh,BYTE PTR [rcx]
    1434:	30 33                	xor    BYTE PTR [rbx],dh
    1436:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    1439:	31 31                	xor    DWORD PTR [rcx],esi
    143b:	32 30                	xor    dh,BYTE PTR [rax]
    143d:	39 33                	cmp    DWORD PTR [rbx],esi
    143f:	35 30 36 32 36       	xor    eax,0x36323630
    1444:	32 36                	xor    dh,BYTE PTR [rsi]
    1446:	37                   	(bad)  
    1447:	37                   	(bad)  
    1448:	38 31                	cmp    BYTE PTR [rcx],dh
    144a:	37                   	(bad)  
    144b:	33 32                	xor    esi,DWORD PTR [rdx]
    144d:	31 37                	xor    DWORD PTR [rdi],esi
    144f:	35 32 36 30 65       	xor    eax,0x65303632
    1454:	2d 34 39 33 32       	sub    eax,0x32333934
    1459:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    145c:	38 00                	cmp    BYTE PTR [rax],al
    145e:	5f                   	pop    rdi
    145f:	5f                   	pop    rdi
    1460:	49                   	rex.WB
    1461:	4e 54                	rex.WRX push rsp
    1463:	5f                   	pop    rdi
    1464:	4c                   	rex.WR
    1465:	45                   	rex.RB
    1466:	41 53                	push   r11
    1468:	54                   	push   rsp
    1469:	36 34 5f             	ss xor al,0x5f
    146c:	4d                   	rex.WRB
    146d:	41 58                	pop    r8
    146f:	5f                   	pop    rdi
    1470:	5f                   	pop    rdi
    1471:	20 30                	and    BYTE PTR [rax],dh
    1473:	78 37                	js     14ac <__FRAME_END__+0xbe0>
    1475:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    147c:	66 66 66 66 66 66 66 
    1483:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1488:	47                   	rex.RXB
    1489:	4e 55                	rex.WRX push rbp
    148b:	43 5f                	rex.XB pop r15
    148d:	50                   	push   rax
    148e:	41 54                	push   r12
    1490:	43                   	rex.XB
    1491:	48                   	rex.W
    1492:	4c                   	rex.WR
    1493:	45 56                	rex.RB push r14
    1495:	45                   	rex.RB
    1496:	4c 5f                	rex.WR pop rdi
    1498:	5f                   	pop    rdi
    1499:	20 30                	and    BYTE PTR [rax],dh
    149b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    149e:	41 54                	push   r12
    14a0:	4f                   	rex.WRXB
    14a1:	4d                   	rex.WRB
    14a2:	49                   	rex.WB
    14a3:	43 5f                	rex.XB pop r15
    14a5:	52                   	push   rdx
    14a6:	45                   	rex.RB
    14a7:	4c                   	rex.WR
    14a8:	45                   	rex.RB
    14a9:	41 53                	push   r11
    14ab:	45 20 33             	and    BYTE PTR [r11],r14b
    14ae:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    14b1:	46                   	rex.RX
    14b2:	4c 54                	rex.WR push rsp
    14b4:	33 32                	xor    esi,DWORD PTR [rdx]
    14b6:	5f                   	pop    rdi
    14b7:	4d                   	rex.WRB
    14b8:	49                   	rex.WB
    14b9:	4e 5f                	rex.WRX pop rdi
    14bb:	31 30                	xor    DWORD PTR [rax],esi
    14bd:	5f                   	pop    rdi
    14be:	45 58                	rex.RB pop r8
    14c0:	50                   	push   rax
    14c1:	5f                   	pop    rdi
    14c2:	5f                   	pop    rdi
    14c3:	20 28                	and    BYTE PTR [rax],ch
    14c5:	2d 33 37 29 00       	sub    eax,0x293733
    14ca:	5f                   	pop    rdi
    14cb:	5f                   	pop    rdi
    14cc:	44                   	rex.R
    14cd:	42                   	rex.X
    14ce:	4c 5f                	rex.WR pop rdi
    14d0:	44                   	rex.R
    14d1:	45                   	rex.RB
    14d2:	43                   	rex.XB
    14d3:	49                   	rex.WB
    14d4:	4d                   	rex.WRB
    14d5:	41                   	rex.B
    14d6:	4c 5f                	rex.WR pop rdi
    14d8:	44                   	rex.R
    14d9:	49                   	rex.WB
    14da:	47 5f                	rex.RXB pop r15
    14dc:	5f                   	pop    rdi
    14dd:	20 31                	and    BYTE PTR [rcx],dh
    14df:	37                   	(bad)  
    14e0:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
    14e3:	55                   	push   rbp
    14e4:	20 43 31             	and    BYTE PTR [rbx+0x31],al
    14e7:	31 20                	xor    DWORD PTR [rax],esp
    14e9:	37                   	(bad)  
    14ea:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
    14ed:	30 20                	xor    BYTE PTR [rax],ah
    14ef:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
    14f4:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
    14fa:	72 69                	jb     1565 <__FRAME_END__+0xc99>
    14fc:	63 20                	movsxd esp,DWORD PTR [rax]
    14fe:	2d 6d 61 72 63       	sub    eax,0x6372616d
    1503:	68 3d 78 38 36       	push   0x3638783d
    1508:	2d 36 34 20 2d       	sub    eax,0x2d203436
    150d:	67 67 64 62 33       	addr32 addr32 fs (bad) 
    1512:	20 2d 66 73 74 61    	and    BYTE PTR [rip+0x61747366],ch        # 6174887e <_end+0x61547866>
    1518:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
    151b:	70 72                	jo     158f <__FRAME_END__+0xcc3>
    151d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    151e:	74 65                	je     1585 <__FRAME_END__+0xcb9>
    1520:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    1524:	2d 73 74 72 6f       	sub    eax,0x6f727473
    1529:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    152a:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
    152e:	46                   	rex.RX
    152f:	4c 54                	rex.WR push rsp
    1531:	5f                   	pop    rdi
    1532:	44                   	rex.R
    1533:	45                   	rex.RB
    1534:	43                   	rex.XB
    1535:	49                   	rex.WB
    1536:	4d                   	rex.WRB
    1537:	41                   	rex.B
    1538:	4c 5f                	rex.WR pop rdi
    153a:	44                   	rex.R
    153b:	49                   	rex.WB
    153c:	47 5f                	rex.RXB pop r15
    153e:	5f                   	pop    rdi
    153f:	20 39                	and    BYTE PTR [rcx],bh
    1541:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1544:	41 54                	push   r12
    1546:	4f                   	rex.WRXB
    1547:	4d                   	rex.WRB
    1548:	49                   	rex.WB
    1549:	43 5f                	rex.XB pop r15
    154b:	53                   	push   rbx
    154c:	45 51                	rex.RB push r9
    154e:	5f                   	pop    rdi
    154f:	43 53                	rex.XB push r11
    1551:	54                   	push   rsp
    1552:	20 35 00 5f 5f 44    	and    BYTE PTR [rip+0x445f5f00],dh        # 445f7458 <_end+0x443f6440>
    1558:	45                   	rex.RB
    1559:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    155c:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    155f:	49                   	rex.WB
    1560:	4e 5f                	rex.WRX pop rdi
    1562:	5f                   	pop    rdi
    1563:	20 31                	and    BYTE PTR [rcx],dh
    1565:	45 2d 36 31 34 33    	rex.RB sub eax,0x33343136
    156b:	44                   	rex.R
    156c:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1570:	42                   	rex.X
    1571:	49                   	rex.WB
    1572:	47                   	rex.RXB
    1573:	47                   	rex.RXB
    1574:	45 53                	rex.RB push r11
    1576:	54                   	push   rsp
    1577:	5f                   	pop    rdi
    1578:	41                   	rex.B
    1579:	4c                   	rex.WR
    157a:	49                   	rex.WB
    157b:	47                   	rex.RXB
    157c:	4e                   	rex.WRX
    157d:	4d                   	rex.WRB
    157e:	45                   	rex.RB
    157f:	4e 54                	rex.WRX push rsp
    1581:	5f                   	pop    rdi
    1582:	5f                   	pop    rdi
    1583:	20 31                	and    BYTE PTR [rcx],dh
    1585:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    1589:	53                   	push   rbx
    158a:	49 5a                	rex.WB pop r10
    158c:	45                   	rex.RB
    158d:	4f                   	rex.WRXB
    158e:	46 5f                	rex.RX pop rdi
    1590:	49                   	rex.WB
    1591:	4e 54                	rex.WRX push rsp
    1593:	5f                   	pop    rdi
    1594:	5f                   	pop    rdi
    1595:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    1598:	5f                   	pop    rdi
    1599:	5f                   	pop    rdi
    159a:	49                   	rex.WB
    159b:	4e 54                	rex.WRX push rsp
    159d:	5f                   	pop    rdi
    159e:	46                   	rex.RX
    159f:	41 53                	push   r11
    15a1:	54                   	push   rsp
    15a2:	33 32                	xor    esi,DWORD PTR [rdx]
    15a4:	5f                   	pop    rdi
    15a5:	54                   	push   rsp
    15a6:	59                   	pop    rcx
    15a7:	50                   	push   rax
    15a8:	45 5f                	rex.RB pop r15
    15aa:	5f                   	pop    rdi
    15ab:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    15af:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    15b3:	74 00                	je     15b5 <__FRAME_END__+0xce9>
    15b5:	5f                   	pop    rdi
    15b6:	5f                   	pop    rdi
    15b7:	4c                   	rex.WR
    15b8:	44                   	rex.R
    15b9:	42                   	rex.X
    15ba:	4c 5f                	rex.WR pop rdi
    15bc:	44                   	rex.R
    15bd:	45                   	rex.RB
    15be:	43                   	rex.XB
    15bf:	49                   	rex.WB
    15c0:	4d                   	rex.WRB
    15c1:	41                   	rex.B
    15c2:	4c 5f                	rex.WR pop rdi
    15c4:	44                   	rex.R
    15c5:	49                   	rex.WB
    15c6:	47 5f                	rex.RXB pop r15
    15c8:	5f                   	pop    rdi
    15c9:	20 32                	and    BYTE PTR [rdx],dh
    15cb:	31 00                	xor    DWORD PTR [rax],eax
    15cd:	5f                   	pop    rdi
    15ce:	5f                   	pop    rdi
    15cf:	44                   	rex.R
    15d0:	45                   	rex.RB
    15d1:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    15d4:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    15d7:	41 58                	pop    r8
    15d9:	5f                   	pop    rdi
    15da:	45 58                	rex.RB pop r8
    15dc:	50                   	push   rax
    15dd:	5f                   	pop    rdi
    15de:	5f                   	pop    rdi
    15df:	20 36                	and    BYTE PTR [rsi],dh
    15e1:	31 34 35 00 5f 5f 49 	xor    DWORD PTR [rsi*1+0x495f5f00],esi
    15e8:	4e 54                	rex.WRX push rsp
    15ea:	31 36                	xor    DWORD PTR [rsi],esi
    15ec:	5f                   	pop    rdi
    15ed:	4d                   	rex.WRB
    15ee:	41 58                	pop    r8
    15f0:	5f                   	pop    rdi
    15f1:	5f                   	pop    rdi
    15f2:	20 30                	and    BYTE PTR [rax],dh
    15f4:	78 37                	js     162d <__FRAME_END__+0xd61>
    15f6:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    15fc:	47                   	rex.RXB
    15fd:	43                   	rex.XB
    15fe:	43 5f                	rex.XB pop r15
    1600:	48                   	rex.W
    1601:	41 56                	push   r14
    1603:	45 5f                	rex.RB pop r15
    1605:	53                   	push   rbx
    1606:	59                   	pop    rcx
    1607:	4e                   	rex.WRX
    1608:	43 5f                	rex.XB pop r15
    160a:	43                   	rex.XB
    160b:	4f                   	rex.WRXB
    160c:	4d 50                	rex.WRB push r8
    160e:	41 52                	push   r10
    1610:	45 5f                	rex.RB pop r15
    1612:	41                   	rex.B
    1613:	4e                   	rex.WRX
    1614:	44 5f                	rex.R pop rdi
    1616:	53                   	push   rbx
    1617:	57                   	push   rdi
    1618:	41 50                	push   r8
    161a:	5f                   	pop    rdi
    161b:	34 20                	xor    al,0x20
    161d:	31 00                	xor    DWORD PTR [rax],eax
    161f:	5f                   	pop    rdi
    1620:	5f                   	pop    rdi
    1621:	47                   	rex.RXB
    1622:	43                   	rex.XB
    1623:	43 5f                	rex.XB pop r15
    1625:	41 53                	push   r11
    1627:	4d 5f                	rex.WRB pop r15
    1629:	46                   	rex.RX
    162a:	4c                   	rex.WR
    162b:	41                   	rex.B
    162c:	47 5f                	rex.RXB pop r15
    162e:	4f 55                	rex.WRXB push r13
    1630:	54                   	push   rsp
    1631:	50                   	push   rax
    1632:	55                   	push   rbp
    1633:	54                   	push   rsp
    1634:	53                   	push   rbx
    1635:	5f                   	pop    rdi
    1636:	5f                   	pop    rdi
    1637:	20 31                	and    BYTE PTR [rcx],dh
    1639:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    163c:	46                   	rex.RX
    163d:	4c 54                	rex.WR push rsp
    163f:	31 32                	xor    DWORD PTR [rdx],esi
    1641:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1644:	41 58                	pop    r8
    1646:	5f                   	pop    rdi
    1647:	45 58                	rex.RB pop r8
    1649:	50                   	push   rax
    164a:	5f                   	pop    rdi
    164b:	5f                   	pop    rdi
    164c:	20 31                	and    BYTE PTR [rcx],dh
    164e:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1651:	34 00                	xor    al,0x0
    1653:	5f                   	pop    rdi
    1654:	5f                   	pop    rdi
    1655:	46                   	rex.RX
    1656:	4c 54                	rex.WR push rsp
    1658:	31 32                	xor    DWORD PTR [rdx],esi
    165a:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    165d:	41 58                	pop    r8
    165f:	5f                   	pop    rdi
    1660:	5f                   	pop    rdi
    1661:	20 31                	and    BYTE PTR [rcx],dh
    1663:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    1666:	39 37                	cmp    DWORD PTR [rdi],esi
    1668:	33 31                	xor    esi,DWORD PTR [rcx]
    166a:	34 39                	xor    al,0x39
    166c:	35 33 35 37 32       	xor    eax,0x32373533
    1671:	33 31                	xor    esi,DWORD PTR [rcx]
    1673:	37                   	(bad)  
    1674:	36 35 30 38 35 37    	ss xor eax,0x37353830
    167a:	35 39 33 32 36       	xor    eax,0x36323339
    167f:	36 32 38             	xor    bh,BYTE PTR ss:[rax]
    1682:	30 30                	xor    BYTE PTR [rax],dh
    1684:	37                   	(bad)  
    1685:	30 32                	xor    BYTE PTR [rdx],dh
    1687:	65 2b 34 39          	sub    esi,DWORD PTR gs:[rcx+rdi*1]
    168b:	33 32                	xor    esi,DWORD PTR [rdx]
    168d:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    1690:	38 00                	cmp    BYTE PTR [rax],al
    1692:	5f                   	pop    rdi
    1693:	5f                   	pop    rdi
    1694:	49                   	rex.WB
    1695:	4e 54                	rex.WRX push rsp
    1697:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    169a:	59                   	pop    rcx
    169b:	50                   	push   rax
    169c:	45 5f                	rex.RB pop r15
    169e:	5f                   	pop    rdi
    169f:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    16a2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    16a4:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    16a9:	61                   	(bad)  
    16aa:	72 00                	jb     16ac <__FRAME_END__+0xde0>
    16ac:	5f                   	pop    rdi
    16ad:	5f                   	pop    rdi
    16ae:	49                   	rex.WB
    16af:	4e 54                	rex.WRX push rsp
    16b1:	5f                   	pop    rdi
    16b2:	57                   	push   rdi
    16b3:	49                   	rex.WB
    16b4:	44 54                	rex.R push rsp
    16b6:	48 5f                	rex.W pop rdi
    16b8:	5f                   	pop    rdi
    16b9:	20 33                	and    BYTE PTR [rbx],dh
    16bb:	32 00                	xor    al,BYTE PTR [rax]
    16bd:	5f                   	pop    rdi
    16be:	5f                   	pop    rdi
    16bf:	55                   	push   rbp
    16c0:	49                   	rex.WB
    16c1:	4e 54                	rex.WRX push rsp
    16c3:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    16c6:	59                   	pop    rcx
    16c7:	50                   	push   rax
    16c8:	45 5f                	rex.RB pop r15
    16ca:	5f                   	pop    rdi
    16cb:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    16ce:	73 69                	jae    1739 <__FRAME_END__+0xe6d>
    16d0:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    16d2:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    16d7:	61                   	(bad)  
    16d8:	72 00                	jb     16da <__FRAME_END__+0xe0e>
    16da:	5f                   	pop    rdi
    16db:	5f                   	pop    rdi
    16dc:	49                   	rex.WB
    16dd:	4e 54                	rex.WRX push rsp
    16df:	4d                   	rex.WRB
    16e0:	41 58                	pop    r8
    16e2:	5f                   	pop    rdi
    16e3:	57                   	push   rdi
    16e4:	49                   	rex.WB
    16e5:	44 54                	rex.R push rsp
    16e7:	48 5f                	rex.W pop rdi
    16e9:	5f                   	pop    rdi
    16ea:	20 36                	and    BYTE PTR [rsi],dh
    16ec:	34 00                	xor    al,0x0
    16ee:	5f                   	pop    rdi
    16ef:	5f                   	pop    rdi
    16f0:	55                   	push   rbp
    16f1:	49                   	rex.WB
    16f2:	4e 54                	rex.WRX push rsp
    16f4:	4d                   	rex.WRB
    16f5:	41 58                	pop    r8
    16f7:	5f                   	pop    rdi
    16f8:	54                   	push   rsp
    16f9:	59                   	pop    rcx
    16fa:	50                   	push   rax
    16fb:	45 5f                	rex.RB pop r15
    16fd:	5f                   	pop    rdi
    16fe:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1702:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1706:	73 69                	jae    1771 <__FRAME_END__+0xea5>
    1708:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    170a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    170f:	74 00                	je     1711 <__FRAME_END__+0xe45>
    1711:	5f                   	pop    rdi
    1712:	5f                   	pop    rdi
    1713:	49                   	rex.WB
    1714:	4e 54                	rex.WRX push rsp
    1716:	31 36                	xor    DWORD PTR [rsi],esi
    1718:	5f                   	pop    rdi
    1719:	54                   	push   rsp
    171a:	59                   	pop    rcx
    171b:	50                   	push   rax
    171c:	45 5f                	rex.RB pop r15
    171e:	5f                   	pop    rdi
    171f:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    1722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1723:	72 74                	jb     1799 <__FRAME_END__+0xecd>
    1725:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    1728:	74 00                	je     172a <__FRAME_END__+0xe5e>
    172a:	5f                   	pop    rdi
    172b:	5f                   	pop    rdi
    172c:	47                   	rex.RXB
    172d:	43                   	rex.XB
    172e:	43 5f                	rex.XB pop r15
    1730:	41 54                	push   r12
    1732:	4f                   	rex.WRXB
    1733:	4d                   	rex.WRB
    1734:	49                   	rex.WB
    1735:	43 5f                	rex.XB pop r15
    1737:	53                   	push   rbx
    1738:	48                   	rex.W
    1739:	4f 52                	rex.WRXB push r10
    173b:	54                   	push   rsp
    173c:	5f                   	pop    rdi
    173d:	4c                   	rex.WR
    173e:	4f                   	rex.WRXB
    173f:	43                   	rex.XB
    1740:	4b 5f                	rex.WXB pop r15
    1742:	46 52                	rex.RX push rdx
    1744:	45                   	rex.RB
    1745:	45 20 32             	and    BYTE PTR [r10],r14b
    1748:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    174b:	44                   	rex.R
    174c:	45                   	rex.RB
    174d:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1750:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1753:	41 58                	pop    r8
    1755:	5f                   	pop    rdi
    1756:	5f                   	pop    rdi
    1757:	20 39                	and    BYTE PTR [rcx],bh
    1759:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    175c:	39 39                	cmp    DWORD PTR [rcx],edi
    175e:	39 39                	cmp    DWORD PTR [rcx],edi
    1760:	39 39                	cmp    DWORD PTR [rcx],edi
    1762:	39 39                	cmp    DWORD PTR [rcx],edi
    1764:	39 39                	cmp    DWORD PTR [rcx],edi
    1766:	39 39                	cmp    DWORD PTR [rcx],edi
    1768:	39 39                	cmp    DWORD PTR [rcx],edi
    176a:	39 39                	cmp    DWORD PTR [rcx],edi
    176c:	39 39                	cmp    DWORD PTR [rcx],edi
    176e:	39 39                	cmp    DWORD PTR [rcx],edi
    1770:	39 39                	cmp    DWORD PTR [rcx],edi
    1772:	39 39                	cmp    DWORD PTR [rcx],edi
    1774:	39 39                	cmp    DWORD PTR [rcx],edi
    1776:	39 39                	cmp    DWORD PTR [rcx],edi
    1778:	39 39                	cmp    DWORD PTR [rcx],edi
    177a:	39 45 36             	cmp    DWORD PTR [rbp+0x36],eax
    177d:	31 34 34             	xor    DWORD PTR [rsp+rsi*1],esi
    1780:	44                   	rex.R
    1781:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1785:	53                   	push   rbx
    1786:	53                   	push   rbx
    1787:	50                   	push   rax
    1788:	5f                   	pop    rdi
    1789:	53                   	push   rbx
    178a:	54                   	push   rsp
    178b:	52                   	push   rdx
    178c:	4f                   	rex.WRXB
    178d:	4e                   	rex.WRX
    178e:	47 5f                	rex.RXB pop r15
    1790:	5f                   	pop    rdi
    1791:	20 33                	and    BYTE PTR [rbx],dh
    1793:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1796:	50                   	push   rax
    1797:	49                   	rex.WB
    1798:	45 5f                	rex.RB pop r15
    179a:	5f                   	pop    rdi
    179b:	20 32                	and    BYTE PTR [rdx],dh
    179d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17a0:	55                   	push   rbp
    17a1:	49                   	rex.WB
    17a2:	4e 54                	rex.WRX push rsp
    17a4:	5f                   	pop    rdi
    17a5:	4c                   	rex.WR
    17a6:	45                   	rex.RB
    17a7:	41 53                	push   r11
    17a9:	54                   	push   rsp
    17aa:	31 36                	xor    DWORD PTR [rsi],esi
    17ac:	5f                   	pop    rdi
    17ad:	54                   	push   rsp
    17ae:	59                   	pop    rcx
    17af:	50                   	push   rax
    17b0:	45 5f                	rex.RB pop r15
    17b2:	5f                   	pop    rdi
    17b3:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    17b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17b7:	72 74                	jb     182d <__FRAME_END__+0xf61>
    17b9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    17bc:	73 69                	jae    1827 <__FRAME_END__+0xf5b>
    17be:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    17c0:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    17c5:	74 00                	je     17c7 <__FRAME_END__+0xefb>
    17c7:	5f                   	pop    rdi
    17c8:	5f                   	pop    rdi
    17c9:	49                   	rex.WB
    17ca:	4e 54                	rex.WRX push rsp
    17cc:	5f                   	pop    rdi
    17cd:	46                   	rex.RX
    17ce:	41 53                	push   r11
    17d0:	54                   	push   rsp
    17d1:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    17d4:	59                   	pop    rcx
    17d5:	50                   	push   rax
    17d6:	45 5f                	rex.RB pop r15
    17d8:	5f                   	pop    rdi
    17d9:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    17dc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    17de:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    17e3:	61                   	(bad)  
    17e4:	72 00                	jb     17e6 <__FRAME_END__+0xf1a>
    17e6:	5f                   	pop    rdi
    17e7:	5f                   	pop    rdi
    17e8:	44                   	rex.R
    17e9:	42                   	rex.X
    17ea:	4c 5f                	rex.WR pop rdi
    17ec:	4d                   	rex.WRB
    17ed:	41 58                	pop    r8
    17ef:	5f                   	pop    rdi
    17f0:	45 58                	rex.RB pop r8
    17f2:	50                   	push   rax
    17f3:	5f                   	pop    rdi
    17f4:	5f                   	pop    rdi
    17f5:	20 31                	and    BYTE PTR [rcx],dh
    17f7:	30 32                	xor    BYTE PTR [rdx],dh
    17f9:	34 00                	xor    al,0x0
    17fb:	5f                   	pop    rdi
    17fc:	5f                   	pop    rdi
    17fd:	46                   	rex.RX
    17fe:	4c 54                	rex.WR push rsp
    1800:	33 32                	xor    esi,DWORD PTR [rdx]
    1802:	58                   	pop    rax
    1803:	5f                   	pop    rdi
    1804:	4d                   	rex.WRB
    1805:	41                   	rex.B
    1806:	4e 54                	rex.WRX push rsp
    1808:	5f                   	pop    rdi
    1809:	44                   	rex.R
    180a:	49                   	rex.WB
    180b:	47 5f                	rex.RXB pop r15
    180d:	5f                   	pop    rdi
    180e:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f1847 <_end+0x5f3f082f>
    1814:	46                   	rex.RX
    1815:	4c 54                	rex.WR push rsp
    1817:	5f                   	pop    rdi
    1818:	45 56                	rex.RB push r14
    181a:	41                   	rex.B
    181b:	4c 5f                	rex.WR pop rdi
    181d:	4d                   	rex.WRB
    181e:	45 54                	rex.RB push r12
    1820:	48                   	rex.W
    1821:	4f                   	rex.WRXB
    1822:	44 5f                	rex.R pop rdi
    1824:	5f                   	pop    rdi
    1825:	20 30                	and    BYTE PTR [rax],dh
    1827:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    182a:	49                   	rex.WB
    182b:	4e 54                	rex.WRX push rsp
    182d:	4d                   	rex.WRB
    182e:	41 58                	pop    r8
    1830:	5f                   	pop    rdi
    1831:	4d                   	rex.WRB
    1832:	41 58                	pop    r8
    1834:	5f                   	pop    rdi
    1835:	5f                   	pop    rdi
    1836:	20 30                	and    BYTE PTR [rax],dh
    1838:	78 37                	js     1871 <__FRAME_END__+0xfa5>
    183a:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1841:	66 66 66 66 66 66 66 
    1848:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    184d:	41 54                	push   r12
    184f:	4f                   	rex.WRXB
    1850:	4d                   	rex.WRB
    1851:	49                   	rex.WB
    1852:	43 5f                	rex.XB pop r15
    1854:	41                   	rex.B
    1855:	43 51                	rex.XB push r9
    1857:	55                   	push   rbp
    1858:	49 52                	rex.WB push r10
    185a:	45 20 32             	and    BYTE PTR [r10],r14b
    185d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1860:	55                   	push   rbp
    1861:	49                   	rex.WB
    1862:	4e 54                	rex.WRX push rsp
    1864:	5f                   	pop    rdi
    1865:	46                   	rex.RX
    1866:	41 53                	push   r11
    1868:	54                   	push   rsp
    1869:	33 32                	xor    esi,DWORD PTR [rdx]
    186b:	5f                   	pop    rdi
    186c:	54                   	push   rsp
    186d:	59                   	pop    rcx
    186e:	50                   	push   rax
    186f:	45 5f                	rex.RB pop r15
    1871:	5f                   	pop    rdi
    1872:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1876:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    187a:	73 69                	jae    18e5 <__FRAME_END__+0x1019>
    187c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    187e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1883:	74 00                	je     1885 <__FRAME_END__+0xfb9>
    1885:	5f                   	pop    rdi
    1886:	5f                   	pop    rdi
    1887:	46                   	rex.RX
    1888:	4c 54                	rex.WR push rsp
    188a:	33 32                	xor    esi,DWORD PTR [rdx]
    188c:	5f                   	pop    rdi
    188d:	44                   	rex.R
    188e:	45                   	rex.RB
    188f:	43                   	rex.XB
    1890:	49                   	rex.WB
    1891:	4d                   	rex.WRB
    1892:	41                   	rex.B
    1893:	4c 5f                	rex.WR pop rdi
    1895:	44                   	rex.R
    1896:	49                   	rex.WB
    1897:	47 5f                	rex.RXB pop r15
    1899:	5f                   	pop    rdi
    189a:	20 39                	and    BYTE PTR [rcx],bh
    189c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    189f:	49                   	rex.WB
    18a0:	4e 54                	rex.WRX push rsp
    18a2:	5f                   	pop    rdi
    18a3:	4c                   	rex.WR
    18a4:	45                   	rex.RB
    18a5:	41 53                	push   r11
    18a7:	54                   	push   rsp
    18a8:	33 32                	xor    esi,DWORD PTR [rdx]
    18aa:	5f                   	pop    rdi
    18ab:	4d                   	rex.WRB
    18ac:	41 58                	pop    r8
    18ae:	5f                   	pop    rdi
    18af:	5f                   	pop    rdi
    18b0:	20 30                	and    BYTE PTR [rax],dh
    18b2:	78 37                	js     18eb <__FRAME_END__+0x101f>
    18b4:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    18bb:	00 5f 5f 
    18be:	47                   	rex.RXB
    18bf:	43                   	rex.XB
    18c0:	43 5f                	rex.XB pop r15
    18c2:	41 54                	push   r12
    18c4:	4f                   	rex.WRXB
    18c5:	4d                   	rex.WRB
    18c6:	49                   	rex.WB
    18c7:	43 5f                	rex.XB pop r15
    18c9:	43                   	rex.XB
    18ca:	48                   	rex.W
    18cb:	41 52                	push   r10
    18cd:	5f                   	pop    rdi
    18ce:	4c                   	rex.WR
    18cf:	4f                   	rex.WRXB
    18d0:	43                   	rex.XB
    18d1:	4b 5f                	rex.WXB pop r15
    18d3:	46 52                	rex.RX push rdx
    18d5:	45                   	rex.RB
    18d6:	45 20 32             	and    BYTE PTR [r10],r14b
    18d9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    18dc:	44                   	rex.R
    18dd:	45                   	rex.RB
    18de:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    18e1:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    18e4:	50                   	push   rax
    18e5:	53                   	push   rbx
    18e6:	49                   	rex.WB
    18e7:	4c                   	rex.WR
    18e8:	4f                   	rex.WRXB
    18e9:	4e 5f                	rex.WRX pop rdi
    18eb:	5f                   	pop    rdi
    18ec:	20 31                	and    BYTE PTR [rcx],dh
    18ee:	45 2d 33 33 44 4c    	rex.RB sub eax,0x4c443333
    18f4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    18f7:	46                   	rex.RX
    18f8:	4c 54                	rex.WR push rsp
    18fa:	5f                   	pop    rdi
    18fb:	4d                   	rex.WRB
    18fc:	41 58                	pop    r8
    18fe:	5f                   	pop    rdi
    18ff:	5f                   	pop    rdi
    1900:	20 33                	and    BYTE PTR [rbx],dh
    1902:	2e 34 30             	cs xor al,0x30
    1905:	32 38                	xor    bh,BYTE PTR [rax]
    1907:	32 33                	xor    dh,BYTE PTR [rbx]
    1909:	34 36                	xor    al,0x36
    190b:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    190e:	35 32 38 38 35       	xor    eax,0x35383832
    1913:	39 38                	cmp    DWORD PTR [rax],edi
    1915:	31 31                	xor    DWORD PTR [rcx],esi
    1917:	37                   	(bad)  
    1918:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    191b:	38 33                	cmp    BYTE PTR [rbx],dh
    191d:	34 38                	xor    al,0x38
    191f:	34 35                	xor    al,0x35
    1921:	31 36                	xor    DWORD PTR [rsi],esi
    1923:	39 32                	cmp    DWORD PTR [rdx],esi
    1925:	35 65 2b 33 38       	xor    eax,0x38332b65
    192a:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    192e:	53                   	push   rbx
    192f:	49 5a                	rex.WB pop r10
    1931:	45                   	rex.RB
    1932:	4f                   	rex.WRXB
    1933:	46 5f                	rex.RX pop rdi
    1935:	57                   	push   rdi
    1936:	43                   	rex.XB
    1937:	48                   	rex.W
    1938:	41 52                	push   r10
    193a:	5f                   	pop    rdi
    193b:	54                   	push   rsp
    193c:	5f                   	pop    rdi
    193d:	5f                   	pop    rdi
    193e:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    1941:	5f                   	pop    rdi
    1942:	5f                   	pop    rdi
    1943:	46                   	rex.RX
    1944:	4c 54                	rex.WR push rsp
    1946:	33 32                	xor    esi,DWORD PTR [rdx]
    1948:	58                   	pop    rax
    1949:	5f                   	pop    rdi
    194a:	44                   	rex.R
    194b:	45                   	rex.RB
    194c:	43                   	rex.XB
    194d:	49                   	rex.WB
    194e:	4d                   	rex.WRB
    194f:	41                   	rex.B
    1950:	4c 5f                	rex.WR pop rdi
    1952:	44                   	rex.R
    1953:	49                   	rex.WB
    1954:	47 5f                	rex.RXB pop r15
    1956:	5f                   	pop    rdi
    1957:	20 31                	and    BYTE PTR [rcx],dh
    1959:	37                   	(bad)  
    195a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    195d:	49                   	rex.WB
    195e:	4e 54                	rex.WRX push rsp
    1960:	5f                   	pop    rdi
    1961:	46                   	rex.RX
    1962:	41 53                	push   r11
    1964:	54                   	push   rsp
    1965:	31 36                	xor    DWORD PTR [rsi],esi
    1967:	5f                   	pop    rdi
    1968:	54                   	push   rsp
    1969:	59                   	pop    rcx
    196a:	50                   	push   rax
    196b:	45 5f                	rex.RB pop r15
    196d:	5f                   	pop    rdi
    196e:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1972:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1976:	74 00                	je     1978 <__FRAME_END__+0x10ac>
    1978:	5f                   	pop    rdi
    1979:	5f                   	pop    rdi
    197a:	44                   	rex.R
    197b:	45                   	rex.RB
    197c:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    197f:	5f                   	pop    rdi
    1980:	4d                   	rex.WRB
    1981:	49                   	rex.WB
    1982:	4e 5f                	rex.WRX pop rdi
    1984:	45 58                	rex.RB pop r8
    1986:	50                   	push   rax
    1987:	5f                   	pop    rdi
    1988:	5f                   	pop    rdi
    1989:	20 28                	and    BYTE PTR [rax],ch
    198b:	2d 39 34 29 00       	sub    eax,0x293439
    1990:	5f                   	pop    rdi
    1991:	5f                   	pop    rdi
    1992:	49                   	rex.WB
    1993:	4e 54                	rex.WRX push rsp
    1995:	33 32                	xor    esi,DWORD PTR [rdx]
    1997:	5f                   	pop    rdi
    1998:	4d                   	rex.WRB
    1999:	41 58                	pop    r8
    199b:	5f                   	pop    rdi
    199c:	5f                   	pop    rdi
    199d:	20 30                	and    BYTE PTR [rax],dh
    199f:	78 37                	js     19d8 <__FRAME_END__+0x110c>
    19a1:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    19a8:	00 5f 5f 
    19ab:	53                   	push   rbx
    19ac:	49 5a                	rex.WB pop r10
    19ae:	45                   	rex.RB
    19af:	4f                   	rex.WRXB
    19b0:	46 5f                	rex.RX pop rdi
    19b2:	46                   	rex.RX
    19b3:	4c                   	rex.WR
    19b4:	4f                   	rex.WRXB
    19b5:	41 54                	push   r12
    19b7:	31 32                	xor    DWORD PTR [rdx],esi
    19b9:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
    19bc:	20 31                	and    BYTE PTR [rcx],dh
    19be:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    19c2:	46                   	rex.RX
    19c3:	4c 54                	rex.WR push rsp
    19c5:	36 34 5f             	ss xor al,0x5f
    19c8:	4d                   	rex.WRB
    19c9:	49                   	rex.WB
    19ca:	4e 5f                	rex.WRX pop rdi
    19cc:	31 30                	xor    DWORD PTR [rax],esi
    19ce:	5f                   	pop    rdi
    19cf:	45 58                	rex.RB pop r8
    19d1:	50                   	push   rax
    19d2:	5f                   	pop    rdi
    19d3:	5f                   	pop    rdi
    19d4:	20 28                	and    BYTE PTR [rax],ch
    19d6:	2d 33 30 37 29       	sub    eax,0x29373033
    19db:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    19de:	55                   	push   rbp
    19df:	49                   	rex.WB
    19e0:	4e 54                	rex.WRX push rsp
    19e2:	5f                   	pop    rdi
    19e3:	46                   	rex.RX
    19e4:	41 53                	push   r11
    19e6:	54                   	push   rsp
    19e7:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    19ea:	59                   	pop    rcx
    19eb:	50                   	push   rax
    19ec:	45 5f                	rex.RB pop r15
    19ee:	5f                   	pop    rdi
    19ef:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    19f2:	73 69                	jae    1a5d <__FRAME_END__+0x1191>
    19f4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    19f6:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    19fb:	61                   	(bad)  
    19fc:	72 00                	jb     19fe <__FRAME_END__+0x1132>
    19fe:	5f                   	pop    rdi
    19ff:	5f                   	pop    rdi
    1a00:	53                   	push   rbx
    1a01:	54                   	push   rsp
    1a02:	44                   	rex.R
    1a03:	43 5f                	rex.XB pop r15
    1a05:	49                   	rex.WB
    1a06:	45                   	rex.RB
    1a07:	43 5f                	rex.XB pop r15
    1a09:	35 35 39 5f 5f       	xor    eax,0x5f5f3935
    1a0e:	20 31                	and    BYTE PTR [rcx],dh
    1a10:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a13:	44                   	rex.R
    1a14:	45                   	rex.RB
    1a15:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1a18:	38 5f 53             	cmp    BYTE PTR [rdi+0x53],bl
    1a1b:	55                   	push   rbp
    1a1c:	42                   	rex.X
    1a1d:	4e                   	rex.WRX
    1a1e:	4f 52                	rex.WRXB push r10
    1a20:	4d                   	rex.WRB
    1a21:	41                   	rex.B
    1a22:	4c 5f                	rex.WR pop rdi
    1a24:	4d                   	rex.WRB
    1a25:	49                   	rex.WB
    1a26:	4e 5f                	rex.WRX pop rdi
    1a28:	5f                   	pop    rdi
    1a29:	20 30                	and    BYTE PTR [rax],dh
    1a2b:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    1a2e:	30 30                	xor    BYTE PTR [rax],dh
    1a30:	30 30                	xor    BYTE PTR [rax],dh
    1a32:	30 30                	xor    BYTE PTR [rax],dh
    1a34:	30 30                	xor    BYTE PTR [rax],dh
    1a36:	30 30                	xor    BYTE PTR [rax],dh
    1a38:	30 30                	xor    BYTE PTR [rax],dh
    1a3a:	30 30                	xor    BYTE PTR [rax],dh
    1a3c:	30 30                	xor    BYTE PTR [rax],dh
    1a3e:	30 30                	xor    BYTE PTR [rax],dh
    1a40:	30 30                	xor    BYTE PTR [rax],dh
    1a42:	30 30                	xor    BYTE PTR [rax],dh
    1a44:	30 30                	xor    BYTE PTR [rax],dh
    1a46:	30 30                	xor    BYTE PTR [rax],dh
    1a48:	30 30                	xor    BYTE PTR [rax],dh
    1a4a:	30 30                	xor    BYTE PTR [rax],dh
    1a4c:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
    1a4f:	36 31 34 33          	xor    DWORD PTR ss:[rbx+rsi*1],esi
    1a53:	44                   	rex.R
    1a54:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1a58:	41 54                	push   r12
    1a5a:	4f                   	rex.WRXB
    1a5b:	4d                   	rex.WRB
    1a5c:	49                   	rex.WB
    1a5d:	43 5f                	rex.XB pop r15
    1a5f:	48                   	rex.W
    1a60:	4c                   	rex.WR
    1a61:	45 5f                	rex.RB pop r15
    1a63:	41                   	rex.B
    1a64:	43 51                	rex.XB push r9
    1a66:	55                   	push   rbp
    1a67:	49 52                	rex.WB push r10
    1a69:	45 20 36             	and    BYTE PTR [r14],r14b
    1a6c:	35 35 33 36 00       	xor    eax,0x363335
    1a71:	5f                   	pop    rdi
    1a72:	5f                   	pop    rdi
    1a73:	41 54                	push   r12
    1a75:	4f                   	rex.WRXB
    1a76:	4d                   	rex.WRB
    1a77:	49                   	rex.WB
    1a78:	43 5f                	rex.XB pop r15
    1a7a:	48                   	rex.W
    1a7b:	4c                   	rex.WR
    1a7c:	45 5f                	rex.RB pop r15
    1a7e:	52                   	push   rdx
    1a7f:	45                   	rex.RB
    1a80:	4c                   	rex.WR
    1a81:	45                   	rex.RB
    1a82:	41 53                	push   r11
    1a84:	45 20 31             	and    BYTE PTR [r9],r14b
    1a87:	33 31                	xor    esi,DWORD PTR [rcx]
    1a89:	30 37                	xor    BYTE PTR [rdi],dh
    1a8b:	32 00                	xor    al,BYTE PTR [rax]
    1a8d:	5f                   	pop    rdi
    1a8e:	5f                   	pop    rdi
    1a8f:	49                   	rex.WB
    1a90:	4e 54                	rex.WRX push rsp
    1a92:	5f                   	pop    rdi
    1a93:	46                   	rex.RX
    1a94:	41 53                	push   r11
    1a96:	54                   	push   rsp
    1a97:	31 36                	xor    DWORD PTR [rsi],esi
    1a99:	5f                   	pop    rdi
    1a9a:	4d                   	rex.WRB
    1a9b:	41 58                	pop    r8
    1a9d:	5f                   	pop    rdi
    1a9e:	5f                   	pop    rdi
    1a9f:	20 30                	and    BYTE PTR [rax],dh
    1aa1:	78 37                	js     1ada <__FRAME_END__+0x120e>
    1aa3:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1aaa:	66 66 66 66 66 66 66 
    1ab1:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1ab6:	49                   	rex.WB
    1ab7:	4e 54                	rex.WRX push rsp
    1ab9:	5f                   	pop    rdi
    1aba:	4c                   	rex.WR
    1abb:	45                   	rex.RB
    1abc:	41 53                	push   r11
    1abe:	54                   	push   rsp
    1abf:	31 36                	xor    DWORD PTR [rsi],esi
    1ac1:	5f                   	pop    rdi
    1ac2:	4d                   	rex.WRB
    1ac3:	41 58                	pop    r8
    1ac5:	5f                   	pop    rdi
    1ac6:	5f                   	pop    rdi
    1ac7:	20 30                	and    BYTE PTR [rax],dh
    1ac9:	78 37                	js     1b02 <__FRAME_END__+0x1236>
    1acb:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    1ad1:	46                   	rex.RX
    1ad2:	4c 54                	rex.WR push rsp
    1ad4:	36 34 58             	ss xor al,0x58
    1ad7:	5f                   	pop    rdi
    1ad8:	4d                   	rex.WRB
    1ad9:	41 58                	pop    r8
    1adb:	5f                   	pop    rdi
    1adc:	45 58                	rex.RB pop r8
    1ade:	50                   	push   rax
    1adf:	5f                   	pop    rdi
    1ae0:	5f                   	pop    rdi
    1ae1:	20 31                	and    BYTE PTR [rcx],dh
    1ae3:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1ae6:	34 00                	xor    al,0x0
    1ae8:	5f                   	pop    rdi
    1ae9:	5f                   	pop    rdi
    1aea:	44                   	rex.R
    1aeb:	45                   	rex.RB
    1aec:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1aef:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1af2:	41                   	rex.B
    1af3:	4e 54                	rex.WRX push rsp
    1af5:	5f                   	pop    rdi
    1af6:	44                   	rex.R
    1af7:	49                   	rex.WB
    1af8:	47 5f                	rex.RXB pop r15
    1afa:	5f                   	pop    rdi
    1afb:	20 33                	and    BYTE PTR [rbx],dh
    1afd:	34 00                	xor    al,0x0
    1aff:	5f                   	pop    rdi
    1b00:	5f                   	pop    rdi
    1b01:	4c                   	rex.WR
    1b02:	4f                   	rex.WRXB
    1b03:	4e                   	rex.WRX
    1b04:	47 5f                	rex.RXB pop r15
    1b06:	57                   	push   rdi
    1b07:	49                   	rex.WB
    1b08:	44 54                	rex.R push rsp
    1b0a:	48 5f                	rex.W pop rdi
    1b0c:	5f                   	pop    rdi
    1b0d:	20 36                	and    BYTE PTR [rsi],dh
    1b0f:	34 00                	xor    al,0x0
    1b11:	5f                   	pop    rdi
    1b12:	5f                   	pop    rdi
    1b13:	53                   	push   rbx
    1b14:	49 5a                	rex.WB pop r10
    1b16:	45 5f                	rex.RB pop r15
    1b18:	57                   	push   rdi
    1b19:	49                   	rex.WB
    1b1a:	44 54                	rex.R push rsp
    1b1c:	48 5f                	rex.W pop rdi
    1b1e:	5f                   	pop    rdi
    1b1f:	20 36                	and    BYTE PTR [rsi],dh
    1b21:	34 00                	xor    al,0x0
    1b23:	5f                   	pop    rdi
    1b24:	5f                   	pop    rdi
    1b25:	46                   	rex.RX
    1b26:	4c 54                	rex.WR push rsp
    1b28:	31 32                	xor    DWORD PTR [rdx],esi
    1b2a:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    1b2d:	45                   	rex.RB
    1b2e:	43                   	rex.XB
    1b2f:	49                   	rex.WB
    1b30:	4d                   	rex.WRB
    1b31:	41                   	rex.B
    1b32:	4c 5f                	rex.WR pop rdi
    1b34:	44                   	rex.R
    1b35:	49                   	rex.WB
    1b36:	47 5f                	rex.RXB pop r15
    1b38:	5f                   	pop    rdi
    1b39:	20 33                	and    BYTE PTR [rbx],dh
    1b3b:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    1b3f:	57                   	push   rdi
    1b40:	43                   	rex.XB
    1b41:	48                   	rex.W
    1b42:	41 52                	push   r10
    1b44:	5f                   	pop    rdi
    1b45:	4d                   	rex.WRB
    1b46:	49                   	rex.WB
    1b47:	4e 5f                	rex.WRX pop rdi
    1b49:	5f                   	pop    rdi
    1b4a:	20 28                	and    BYTE PTR [rax],ch
    1b4c:	2d 5f 5f 57 43       	sub    eax,0x43575f5f
    1b51:	48                   	rex.W
    1b52:	41 52                	push   r10
    1b54:	5f                   	pop    rdi
    1b55:	4d                   	rex.WRB
    1b56:	41 58                	pop    r8
    1b58:	5f                   	pop    rdi
    1b59:	5f                   	pop    rdi
    1b5a:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 294c80 <_end+0x93c68>
    1b60:	5f                   	pop    rdi
    1b61:	5f                   	pop    rdi
    1b62:	47                   	rex.RXB
    1b63:	43                   	rex.XB
    1b64:	43 5f                	rex.XB pop r15
    1b66:	48                   	rex.W
    1b67:	41 56                	push   r14
    1b69:	45 5f                	rex.RB pop r15
    1b6b:	53                   	push   rbx
    1b6c:	59                   	pop    rcx
    1b6d:	4e                   	rex.WRX
    1b6e:	43 5f                	rex.XB pop r15
    1b70:	43                   	rex.XB
    1b71:	4f                   	rex.WRXB
    1b72:	4d 50                	rex.WRB push r8
    1b74:	41 52                	push   r10
    1b76:	45 5f                	rex.RB pop r15
    1b78:	41                   	rex.B
    1b79:	4e                   	rex.WRX
    1b7a:	44 5f                	rex.R pop rdi
    1b7c:	53                   	push   rbx
    1b7d:	57                   	push   rdi
    1b7e:	41 50                	push   r8
    1b80:	5f                   	pop    rdi
    1b81:	32 20                	xor    ah,BYTE PTR [rax]
    1b83:	31 00                	xor    DWORD PTR [rax],eax
    1b85:	5f                   	pop    rdi
    1b86:	5f                   	pop    rdi
    1b87:	4c                   	rex.WR
    1b88:	44                   	rex.R
    1b89:	42                   	rex.X
    1b8a:	4c 5f                	rex.WR pop rdi
    1b8c:	4d                   	rex.WRB
    1b8d:	41 58                	pop    r8
    1b8f:	5f                   	pop    rdi
    1b90:	45 58                	rex.RB pop r8
    1b92:	50                   	push   rax
    1b93:	5f                   	pop    rdi
    1b94:	5f                   	pop    rdi
    1b95:	20 31                	and    BYTE PTR [rcx],dh
    1b97:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1b9a:	34 00                	xor    al,0x0
    1b9c:	5f                   	pop    rdi
    1b9d:	5f                   	pop    rdi
    1b9e:	46                   	rex.RX
    1b9f:	4c 54                	rex.WR push rsp
    1ba1:	36 34 58             	ss xor al,0x58
    1ba4:	5f                   	pop    rdi
    1ba5:	44                   	rex.R
    1ba6:	49                   	rex.WB
    1ba7:	47 5f                	rex.RXB pop r15
    1ba9:	5f                   	pop    rdi
    1baa:	20 31                	and    BYTE PTR [rcx],dh
    1bac:	38 00                	cmp    BYTE PTR [rax],al
    1bae:	5f                   	pop    rdi
    1baf:	5f                   	pop    rdi
    1bb0:	46                   	rex.RX
    1bb1:	4c 54                	rex.WR push rsp
    1bb3:	33 32                	xor    esi,DWORD PTR [rdx]
    1bb5:	58                   	pop    rax
    1bb6:	5f                   	pop    rdi
    1bb7:	44                   	rex.R
    1bb8:	49                   	rex.WB
    1bb9:	47 5f                	rex.RXB pop r15
    1bbb:	5f                   	pop    rdi
    1bbc:	20 31                	and    BYTE PTR [rcx],dh
    1bbe:	35 00 5f 5f 6b       	xor    eax,0x6b5f5f00
    1bc3:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
    1bc6:	20 31                	and    BYTE PTR [rcx],dh
    1bc8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1bcb:	43                   	rex.XB
    1bcc:	48                   	rex.W
    1bcd:	41 52                	push   r10
    1bcf:	33 32                	xor    esi,DWORD PTR [rdx]
    1bd1:	5f                   	pop    rdi
    1bd2:	54                   	push   rsp
    1bd3:	59                   	pop    rcx
    1bd4:	50                   	push   rax
    1bd5:	45 5f                	rex.RB pop r15
    1bd7:	5f                   	pop    rdi
    1bd8:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1bdb:	73 69                	jae    1c46 <__FRAME_END__+0x137a>
    1bdd:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1bdf:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1be4:	74 00                	je     1be6 <__FRAME_END__+0x131a>
    1be6:	5f                   	pop    rdi
    1be7:	5f                   	pop    rdi
    1be8:	46                   	rex.RX
    1be9:	4c 54                	rex.WR push rsp
    1beb:	36 34 58             	ss xor al,0x58
    1bee:	5f                   	pop    rdi
    1bef:	4d                   	rex.WRB
    1bf0:	49                   	rex.WB
    1bf1:	4e 5f                	rex.WRX pop rdi
    1bf3:	31 30                	xor    DWORD PTR [rax],esi
    1bf5:	5f                   	pop    rdi
    1bf6:	45 58                	rex.RB pop r8
    1bf8:	50                   	push   rax
    1bf9:	5f                   	pop    rdi
    1bfa:	5f                   	pop    rdi
    1bfb:	20 28                	and    BYTE PTR [rax],ch
    1bfd:	2d 34 39 33 31       	sub    eax,0x31333934
    1c02:	29 00                	sub    DWORD PTR [rax],eax
    1c04:	5f                   	pop    rdi
    1c05:	5f                   	pop    rdi
    1c06:	70 69                	jo     1c71 <__FRAME_END__+0x13a5>
    1c08:	65 5f                	gs pop rdi
    1c0a:	5f                   	pop    rdi
    1c0b:	20 32                	and    BYTE PTR [rdx],dh
    1c0d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1c10:	49                   	rex.WB
    1c11:	4e 54                	rex.WRX push rsp
    1c13:	5f                   	pop    rdi
    1c14:	4c                   	rex.WR
    1c15:	45                   	rex.RB
    1c16:	41 53                	push   r11
    1c18:	54                   	push   rsp
    1c19:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    1c1c:	59                   	pop    rcx
    1c1d:	50                   	push   rax
    1c1e:	45 5f                	rex.RB pop r15
    1c20:	5f                   	pop    rdi
    1c21:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    1c24:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c26:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    1c2b:	61                   	(bad)  
    1c2c:	72 00                	jb     1c2e <__FRAME_END__+0x1362>
    1c2e:	5f                   	pop    rdi
    1c2f:	5f                   	pop    rdi
    1c30:	55                   	push   rbp
    1c31:	49                   	rex.WB
    1c32:	4e 54                	rex.WRX push rsp
    1c34:	31 36                	xor    DWORD PTR [rsi],esi
    1c36:	5f                   	pop    rdi
    1c37:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    1c3b:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    1c3e:	5f                   	pop    rdi
    1c3f:	5f                   	pop    rdi
    1c40:	53                   	push   rbx
    1c41:	48 52                	rex.W push rdx
    1c43:	54                   	push   rsp
    1c44:	5f                   	pop    rdi
    1c45:	4d                   	rex.WRB
    1c46:	41 58                	pop    r8
    1c48:	5f                   	pop    rdi
    1c49:	5f                   	pop    rdi
    1c4a:	20 30                	and    BYTE PTR [rax],dh
    1c4c:	78 37                	js     1c85 <__FRAME_END__+0x13b9>
    1c4e:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    1c54:	61                   	(bad)  
    1c55:	6d                   	ins    DWORD PTR es:[rdi],dx
    1c56:	64 36 34 5f          	fs ss xor al,0x5f
    1c5a:	5f                   	pop    rdi
    1c5b:	20 31                	and    BYTE PTR [rcx],dh
    1c5d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1c60:	53                   	push   rbx
    1c61:	49 5a                	rex.WB pop r10
    1c63:	45                   	rex.RB
    1c64:	4f                   	rex.WRXB
    1c65:	46 5f                	rex.RX pop rdi
    1c67:	46                   	rex.RX
    1c68:	4c                   	rex.WR
    1c69:	4f                   	rex.WRXB
    1c6a:	41 54                	push   r12
    1c6c:	5f                   	pop    rdi
    1c6d:	5f                   	pop    rdi
    1c6e:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    1c71:	5f                   	pop    rdi
    1c72:	5f                   	pop    rdi
    1c73:	47                   	rex.RXB
    1c74:	43                   	rex.XB
    1c75:	43 5f                	rex.XB pop r15
    1c77:	48                   	rex.W
    1c78:	41 56                	push   r14
    1c7a:	45 5f                	rex.RB pop r15
    1c7c:	53                   	push   rbx
    1c7d:	59                   	pop    rcx
    1c7e:	4e                   	rex.WRX
    1c7f:	43 5f                	rex.XB pop r15
    1c81:	43                   	rex.XB
    1c82:	4f                   	rex.WRXB
    1c83:	4d 50                	rex.WRB push r8
    1c85:	41 52                	push   r10
    1c87:	45 5f                	rex.RB pop r15
    1c89:	41                   	rex.B
    1c8a:	4e                   	rex.WRX
    1c8b:	44 5f                	rex.R pop rdi
    1c8d:	53                   	push   rbx
    1c8e:	57                   	push   rdi
    1c8f:	41 50                	push   r8
    1c91:	5f                   	pop    rdi
    1c92:	38 20                	cmp    BYTE PTR [rax],ah
    1c94:	31 00                	xor    DWORD PTR [rax],eax
    1c96:	5f                   	pop    rdi
    1c97:	5f                   	pop    rdi
    1c98:	57                   	push   rdi
    1c99:	43                   	rex.XB
    1c9a:	48                   	rex.W
    1c9b:	41 52                	push   r10
    1c9d:	5f                   	pop    rdi
    1c9e:	4d                   	rex.WRB
    1c9f:	41 58                	pop    r8
    1ca1:	5f                   	pop    rdi
    1ca2:	5f                   	pop    rdi
    1ca3:	20 30                	and    BYTE PTR [rax],dh
    1ca5:	78 37                	js     1cde <__FRAME_END__+0x1412>
    1ca7:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rsi+0x6c],ah
    1cae:	00 66 6c 
    1cb1:	61                   	(bad)  
    1cb2:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
    1cb6:	53                   	push   rbx
    1cb7:	54                   	push   rsp
    1cb8:	44                   	rex.R
    1cb9:	43 5f                	rex.XB pop r15
    1cbb:	5f                   	pop    rdi
    1cbc:	20 31                	and    BYTE PTR [rcx],dh
    1cbe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1cc1:	4f 52                	rex.WRXB push r10
    1cc3:	44                   	rex.R
    1cc4:	45 52                	rex.RB push r10
    1cc6:	5f                   	pop    rdi
    1cc7:	50                   	push   rax
    1cc8:	44 50                	rex.R push rax
    1cca:	5f                   	pop    rdi
    1ccb:	45                   	rex.RB
    1ccc:	4e                   	rex.WRX
    1ccd:	44                   	rex.R
    1cce:	49                   	rex.WB
    1ccf:	41                   	rex.B
    1cd0:	4e 5f                	rex.WRX pop rdi
    1cd2:	5f                   	pop    rdi
    1cd3:	20 33                	and    BYTE PTR [rbx],dh
    1cd5:	34 31                	xor    al,0x31
    1cd7:	32 00                	xor    al,BYTE PTR [rax]
    1cd9:	5f                   	pop    rdi
    1cda:	5f                   	pop    rdi
    1cdb:	47                   	rex.RXB
    1cdc:	43                   	rex.XB
    1cdd:	43 5f                	rex.XB pop r15
    1cdf:	41 54                	push   r12
    1ce1:	4f                   	rex.WRXB
    1ce2:	4d                   	rex.WRB
    1ce3:	49                   	rex.WB
    1ce4:	43 5f                	rex.XB pop r15
    1ce6:	50                   	push   rax
    1ce7:	4f                   	rex.WRXB
    1ce8:	49                   	rex.WB
    1ce9:	4e 54                	rex.WRX push rsp
    1ceb:	45 52                	rex.RB push r10
    1ced:	5f                   	pop    rdi
    1cee:	4c                   	rex.WR
    1cef:	4f                   	rex.WRXB
    1cf0:	43                   	rex.XB
    1cf1:	4b 5f                	rex.WXB pop r15
    1cf3:	46 52                	rex.RX push rdx
    1cf5:	45                   	rex.RB
    1cf6:	45 20 32             	and    BYTE PTR [r10],r14b
    1cf9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1cfc:	4f 52                	rex.WRXB push r10
    1cfe:	44                   	rex.R
    1cff:	45 52                	rex.RB push r10
    1d01:	5f                   	pop    rdi
    1d02:	4c                   	rex.WR
    1d03:	49 54                	rex.WB push r12
    1d05:	54                   	push   rsp
    1d06:	4c                   	rex.WR
    1d07:	45 5f                	rex.RB pop r15
    1d09:	45                   	rex.RB
    1d0a:	4e                   	rex.WRX
    1d0b:	44                   	rex.R
    1d0c:	49                   	rex.WB
    1d0d:	41                   	rex.B
    1d0e:	4e 5f                	rex.WRX pop rdi
    1d10:	5f                   	pop    rdi
    1d11:	20 31                	and    BYTE PTR [rcx],dh
    1d13:	32 33                	xor    dh,BYTE PTR [rbx]
    1d15:	34 00                	xor    al,0x0
    1d17:	5f                   	pop    rdi
    1d18:	5f                   	pop    rdi
    1d19:	57                   	push   rdi
    1d1a:	49                   	rex.WB
    1d1b:	4e 54                	rex.WRX push rsp
    1d1d:	5f                   	pop    rdi
    1d1e:	54                   	push   rsp
    1d1f:	59                   	pop    rcx
    1d20:	50                   	push   rax
    1d21:	45 5f                	rex.RB pop r15
    1d23:	5f                   	pop    rdi
    1d24:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1d27:	73 69                	jae    1d92 <__FRAME_END__+0x14c6>
    1d29:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1d2b:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1d30:	74 00                	je     1d32 <__FRAME_END__+0x1466>
    1d32:	5f                   	pop    rdi
    1d33:	5f                   	pop    rdi
    1d34:	41 54                	push   r12
    1d36:	4f                   	rex.WRXB
    1d37:	4d                   	rex.WRB
    1d38:	49                   	rex.WB
    1d39:	43 5f                	rex.XB pop r15
    1d3b:	52                   	push   rdx
    1d3c:	45                   	rex.RB
    1d3d:	4c                   	rex.WR
    1d3e:	41 58                	pop    r8
    1d40:	45                   	rex.RB
    1d41:	44 20 30             	and    BYTE PTR [rax],r14b
    1d44:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d47:	46                   	rex.RX
    1d48:	49                   	rex.WB
    1d49:	4e                   	rex.WRX
    1d4a:	49 54                	rex.WB push r12
    1d4c:	45 5f                	rex.RB pop r15
    1d4e:	4d                   	rex.WRB
    1d4f:	41 54                	push   r12
    1d51:	48 5f                	rex.W pop rdi
    1d53:	4f                   	rex.WRXB
    1d54:	4e                   	rex.WRX
    1d55:	4c 59                	rex.WR pop rcx
    1d57:	5f                   	pop    rdi
    1d58:	5f                   	pop    rdi
    1d59:	20 30                	and    BYTE PTR [rax],dh
    1d5b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d5e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d5f:	69 6e 75 78 20 31 00 	imul   ebp,DWORD PTR [rsi+0x75],0x312078
    1d66:	5f                   	pop    rdi
    1d67:	5f                   	pop    rdi
    1d68:	78 38                	js     1da2 <__FRAME_END__+0x14d6>
    1d6a:	36 5f                	ss pop rdi
    1d6c:	36 34 5f             	ss xor al,0x5f
    1d6f:	5f                   	pop    rdi
    1d70:	20 31                	and    BYTE PTR [rcx],dh
    1d72:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d75:	44                   	rex.R
    1d76:	45                   	rex.RB
    1d77:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    1d7a:	5f                   	pop    rdi
    1d7b:	4d                   	rex.WRB
    1d7c:	41                   	rex.B
    1d7d:	4e 54                	rex.WRX push rsp
    1d7f:	5f                   	pop    rdi
    1d80:	44                   	rex.R
    1d81:	49                   	rex.WB
    1d82:	47 5f                	rex.RXB pop r15
    1d84:	5f                   	pop    rdi
    1d85:	20 37                	and    BYTE PTR [rdi],dh
    1d87:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d8a:	44                   	rex.R
    1d8b:	45                   	rex.RB
    1d8c:	43                   	rex.XB
    1d8d:	36 34 5f             	ss xor al,0x5f
    1d90:	45 50                	rex.RB push r8
    1d92:	53                   	push   rbx
    1d93:	49                   	rex.WB
    1d94:	4c                   	rex.WR
    1d95:	4f                   	rex.WRXB
    1d96:	4e 5f                	rex.WRX pop rdi
    1d98:	5f                   	pop    rdi
    1d99:	20 31                	and    BYTE PTR [rcx],dh
    1d9b:	45 2d 31 35 44 44    	rex.RB sub eax,0x44443531
    1da1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1da4:	53                   	push   rbx
    1da5:	53                   	push   rbx
    1da6:	45 32 5f 4d          	xor    r11b,BYTE PTR [r15+0x4d]
    1daa:	41 54                	push   r12
    1dac:	48 5f                	rex.W pop rdi
    1dae:	5f                   	pop    rdi
    1daf:	20 31                	and    BYTE PTR [rcx],dh
    1db1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1db4:	47                   	rex.RXB
    1db5:	43                   	rex.XB
    1db6:	43 5f                	rex.XB pop r15
    1db8:	49                   	rex.WB
    1db9:	45                   	rex.RB
    1dba:	43 5f                	rex.XB pop r15
    1dbc:	35 35 39 20 32       	xor    eax,0x32203935
    1dc1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1dc4:	55                   	push   rbp
    1dc5:	49                   	rex.WB
    1dc6:	4e 54                	rex.WRX push rsp
    1dc8:	5f                   	pop    rdi
    1dc9:	46                   	rex.RX
    1dca:	41 53                	push   r11
    1dcc:	54                   	push   rsp
    1dcd:	33 32                	xor    esi,DWORD PTR [rdx]
    1dcf:	5f                   	pop    rdi
    1dd0:	4d                   	rex.WRB
    1dd1:	41 58                	pop    r8
    1dd3:	5f                   	pop    rdi
    1dd4:	5f                   	pop    rdi
    1dd5:	20 30                	and    BYTE PTR [rax],dh
    1dd7:	78 66                	js     1e3f <__FRAME_END__+0x1573>
    1dd9:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1de0:	66 66 66 66 66 66 66 
    1de7:	66 55                	push   bp
    1de9:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1ded:	46                   	rex.RX
    1dee:	4c 54                	rex.WR push rsp
    1df0:	33 32                	xor    esi,DWORD PTR [rdx]
    1df2:	58                   	pop    rax
    1df3:	5f                   	pop    rdi
    1df4:	44                   	rex.R
    1df5:	45                   	rex.RB
    1df6:	4e                   	rex.WRX
    1df7:	4f 52                	rex.WRXB push r10
    1df9:	4d 5f                	rex.WRB pop r15
    1dfb:	4d                   	rex.WRB
    1dfc:	49                   	rex.WB
    1dfd:	4e 5f                	rex.WRX pop rdi
    1dff:	5f                   	pop    rdi
    1e00:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    1e03:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    1e06:	36 35 36 34 35 38    	ss xor eax,0x38353436
    1e0c:	34 31                	xor    al,0x31
    1e0e:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    1e11:	35 34 34 31 37       	xor    eax,0x37313434
    1e16:	36 35 36 38 37 39    	ss xor eax,0x39373836
    1e1c:	32 38                	xor    bh,BYTE PTR [rax]
    1e1e:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    1e21:	32 31                	xor    dh,BYTE PTR [rcx]
    1e23:	33 37                	xor    esi,DWORD PTR [rdi]
    1e25:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    1e28:	33 32                	xor    esi,DWORD PTR [rdx]
    1e2a:	34 46                	xor    al,0x46
    1e2c:	33 32                	xor    esi,DWORD PTR [rdx]
    1e2e:	78 00                	js     1e30 <__FRAME_END__+0x1564>
    1e30:	5f                   	pop    rdi
    1e31:	5f                   	pop    rdi
    1e32:	4d                   	rex.WRB
    1e33:	4d 58                	rex.WRB pop r8
    1e35:	5f                   	pop    rdi
    1e36:	5f                   	pop    rdi
    1e37:	20 31                	and    BYTE PTR [rcx],dh
    1e39:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e3c:	49                   	rex.WB
    1e3d:	4e 54                	rex.WRX push rsp
    1e3f:	36 34 5f             	ss xor al,0x5f
    1e42:	4d                   	rex.WRB
    1e43:	41 58                	pop    r8
    1e45:	5f                   	pop    rdi
    1e46:	5f                   	pop    rdi
    1e47:	20 30                	and    BYTE PTR [rax],dh
    1e49:	78 37                	js     1e82 <__FRAME_END__+0x15b6>
    1e4b:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1e52:	66 66 66 66 66 66 66 
    1e59:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1e5e:	46                   	rex.RX
    1e5f:	4c 54                	rex.WR push rsp
    1e61:	36 34 58             	ss xor al,0x58
    1e64:	5f                   	pop    rdi
    1e65:	45 50                	rex.RB push r8
    1e67:	53                   	push   rbx
    1e68:	49                   	rex.WB
    1e69:	4c                   	rex.WR
    1e6a:	4f                   	rex.WRXB
    1e6b:	4e 5f                	rex.WRX pop rdi
    1e6d:	5f                   	pop    rdi
    1e6e:	20 31                	and    BYTE PTR [rcx],dh
    1e70:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
    1e73:	34 32                	xor    al,0x32
    1e75:	30 32                	xor    BYTE PTR [rdx],dh
    1e77:	31 37                	xor    DWORD PTR [rdi],esi
    1e79:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    1e7c:	35 35 30 34 34       	xor    eax,0x34343035
    1e81:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
    1e84:	30 37                	xor    BYTE PTR [rdi],dh
    1e86:	34 35                	xor    al,0x35
    1e88:	32 38                	xor    bh,BYTE PTR [rax]
    1e8a:	30 30                	xor    BYTE PTR [rax],dh
    1e8c:	38 36                	cmp    BYTE PTR [rsi],dh
    1e8e:	39 39                	cmp    DWORD PTR [rcx],edi
    1e90:	34 31                	xor    al,0x31
    1e92:	37                   	(bad)  
    1e93:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
    1e96:	31 39                	xor    DWORD PTR [rcx],edi
    1e98:	46                   	rex.RX
    1e99:	36 34 78             	ss xor al,0x78
    1e9c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e9f:	50                   	push   rax
    1ea0:	54                   	push   rsp
    1ea1:	52                   	push   rdx
    1ea2:	44                   	rex.R
    1ea3:	49                   	rex.WB
    1ea4:	46                   	rex.RX
    1ea5:	46 5f                	rex.RX pop rdi
    1ea7:	4d                   	rex.WRB
    1ea8:	41 58                	pop    r8
    1eaa:	5f                   	pop    rdi
    1eab:	5f                   	pop    rdi
    1eac:	20 30                	and    BYTE PTR [rax],dh
    1eae:	78 37                	js     1ee7 <__FRAME_END__+0x161b>
    1eb0:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1eb7:	66 66 66 66 66 66 66 
    1ebe:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1ec3:	53                   	push   rbx
    1ec4:	45                   	rex.RB
    1ec5:	47 5f                	rex.RXB pop r15
    1ec7:	47 53                	rex.RXB push r11
    1ec9:	20 31                	and    BYTE PTR [rcx],dh
    1ecb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ece:	53                   	push   rbx
    1ecf:	49                   	rex.WB
    1ed0:	47 5f                	rex.RXB pop r15
    1ed2:	41 54                	push   r12
    1ed4:	4f                   	rex.WRXB
    1ed5:	4d                   	rex.WRB
    1ed6:	49                   	rex.WB
    1ed7:	43 5f                	rex.XB pop r15
    1ed9:	4d                   	rex.WRB
    1eda:	41 58                	pop    r8
    1edc:	5f                   	pop    rdi
    1edd:	5f                   	pop    rdi
    1ede:	20 30                	and    BYTE PTR [rax],dh
    1ee0:	78 37                	js     1f19 <__FRAME_END__+0x164d>
    1ee2:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    1ee9:	00 5f 5f 
    1eec:	78 38                	js     1f26 <__FRAME_END__+0x165a>
    1eee:	36 5f                	ss pop rdi
    1ef0:	36 34 20             	ss xor al,0x20
    1ef3:	31 00                	xor    DWORD PTR [rax],eax
    1ef5:	5f                   	pop    rdi
    1ef6:	5f                   	pop    rdi
    1ef7:	53                   	push   rbx
    1ef8:	54                   	push   rsp
    1ef9:	44                   	rex.R
    1efa:	43 5f                	rex.XB pop r15
    1efc:	4e                   	rex.WRX
    1efd:	4f 5f                	rex.WRXB pop r15
    1eff:	54                   	push   rsp
    1f00:	48 52                	rex.W push rdx
    1f02:	45                   	rex.RB
    1f03:	41                   	rex.B
    1f04:	44 53                	rex.R push rbx
    1f06:	5f                   	pop    rdi
    1f07:	5f                   	pop    rdi
    1f08:	20 31                	and    BYTE PTR [rcx],dh
    1f0a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f0d:	55                   	push   rbp
    1f0e:	49                   	rex.WB
    1f0f:	4e 54                	rex.WRX push rsp
    1f11:	5f                   	pop    rdi
    1f12:	46                   	rex.RX
    1f13:	41 53                	push   r11
    1f15:	54                   	push   rsp
    1f16:	31 36                	xor    DWORD PTR [rsi],esi
    1f18:	5f                   	pop    rdi
    1f19:	54                   	push   rsp
    1f1a:	59                   	pop    rcx
    1f1b:	50                   	push   rax
    1f1c:	45 5f                	rex.RB pop r15
    1f1e:	5f                   	pop    rdi
    1f1f:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1f23:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1f27:	73 69                	jae    1f92 <__FRAME_END__+0x16c6>
    1f29:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1f2b:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1f30:	74 00                	je     1f32 <__FRAME_END__+0x1666>
    1f32:	5f                   	pop    rdi
    1f33:	5f                   	pop    rdi
    1f34:	46                   	rex.RX
    1f35:	4c 54                	rex.WR push rsp
    1f37:	33 32                	xor    esi,DWORD PTR [rdx]
    1f39:	58                   	pop    rax
    1f3a:	5f                   	pop    rdi
    1f3b:	48                   	rex.W
    1f3c:	41 53                	push   r11
    1f3e:	5f                   	pop    rdi
    1f3f:	49                   	rex.WB
    1f40:	4e                   	rex.WRX
    1f41:	46                   	rex.RX
    1f42:	49                   	rex.WB
    1f43:	4e                   	rex.WRX
    1f44:	49 54                	rex.WB push r12
    1f46:	59                   	pop    rcx
    1f47:	5f                   	pop    rdi
    1f48:	5f                   	pop    rdi
    1f49:	20 31                	and    BYTE PTR [rcx],dh
    1f4b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f4e:	49                   	rex.WB
    1f4f:	4e 54                	rex.WRX push rsp
    1f51:	5f                   	pop    rdi
    1f52:	46                   	rex.RX
    1f53:	41 53                	push   r11
    1f55:	54                   	push   rsp
    1f56:	31 36                	xor    DWORD PTR [rsi],esi
    1f58:	5f                   	pop    rdi
    1f59:	57                   	push   rdi
    1f5a:	49                   	rex.WB
    1f5b:	44 54                	rex.R push rsp
    1f5d:	48 5f                	rex.W pop rdi
    1f5f:	5f                   	pop    rdi
    1f60:	20 36                	and    BYTE PTR [rsi],dh
    1f62:	34 00                	xor    al,0x0
    1f64:	5f                   	pop    rdi
    1f65:	5f                   	pop    rdi
    1f66:	46                   	rex.RX
    1f67:	4c 54                	rex.WR push rsp
    1f69:	33 32                	xor    esi,DWORD PTR [rdx]
    1f6b:	5f                   	pop    rdi
    1f6c:	48                   	rex.W
    1f6d:	41 53                	push   r11
    1f6f:	5f                   	pop    rdi
    1f70:	44                   	rex.R
    1f71:	45                   	rex.RB
    1f72:	4e                   	rex.WRX
    1f73:	4f 52                	rex.WRXB push r10
    1f75:	4d 5f                	rex.WRB pop r15
    1f77:	5f                   	pop    rdi
    1f78:	20 31                	and    BYTE PTR [rcx],dh
    1f7a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f7d:	46                   	rex.RX
    1f7e:	4c 54                	rex.WR push rsp
    1f80:	5f                   	pop    rdi
    1f81:	52                   	push   rdx
    1f82:	41                   	rex.B
    1f83:	44                   	rex.R
    1f84:	49 58                	rex.WB pop r8
    1f86:	5f                   	pop    rdi
    1f87:	5f                   	pop    rdi
    1f88:	20 32                	and    BYTE PTR [rdx],dh
    1f8a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f8d:	46                   	rex.RX
    1f8e:	4c 54                	rex.WR push rsp
    1f90:	36 34 5f             	ss xor al,0x5f
    1f93:	4d                   	rex.WRB
    1f94:	41                   	rex.B
    1f95:	4e 54                	rex.WRX push rsp
    1f97:	5f                   	pop    rdi
    1f98:	44                   	rex.R
    1f99:	49                   	rex.WB
    1f9a:	47 5f                	rex.RXB pop r15
    1f9c:	5f                   	pop    rdi
    1f9d:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f1fd6 <_end+0x5f3f0fbe>
    1fa3:	46                   	rex.RX
    1fa4:	4c 54                	rex.WR push rsp
    1fa6:	5f                   	pop    rdi
    1fa7:	48                   	rex.W
    1fa8:	41 53                	push   r11
    1faa:	5f                   	pop    rdi
    1fab:	49                   	rex.WB
    1fac:	4e                   	rex.WRX
    1fad:	46                   	rex.RX
    1fae:	49                   	rex.WB
    1faf:	4e                   	rex.WRX
    1fb0:	49 54                	rex.WB push r12
    1fb2:	59                   	pop    rcx
    1fb3:	5f                   	pop    rdi
    1fb4:	5f                   	pop    rdi
    1fb5:	20 31                	and    BYTE PTR [rcx],dh
    1fb7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fba:	53                   	push   rbx
    1fbb:	49                   	rex.WB
    1fbc:	47 5f                	rex.RXB pop r15
    1fbe:	41 54                	push   r12
    1fc0:	4f                   	rex.WRXB
    1fc1:	4d                   	rex.WRB
    1fc2:	49                   	rex.WB
    1fc3:	43 5f                	rex.XB pop r15
    1fc5:	57                   	push   rdi
    1fc6:	49                   	rex.WB
    1fc7:	44 54                	rex.R push rsp
    1fc9:	48 5f                	rex.W pop rdi
    1fcb:	5f                   	pop    rdi
    1fcc:	20 33                	and    BYTE PTR [rbx],dh
    1fce:	32 00                	xor    al,BYTE PTR [rax]
    1fd0:	5f                   	pop    rdi
    1fd1:	5f                   	pop    rdi
    1fd2:	49                   	rex.WB
    1fd3:	4e 54                	rex.WRX push rsp
    1fd5:	5f                   	pop    rdi
    1fd6:	46                   	rex.RX
    1fd7:	41 53                	push   r11
    1fd9:	54                   	push   rsp
    1fda:	33 32                	xor    esi,DWORD PTR [rdx]
    1fdc:	5f                   	pop    rdi
    1fdd:	4d                   	rex.WRB
    1fde:	41 58                	pop    r8
    1fe0:	5f                   	pop    rdi
    1fe1:	5f                   	pop    rdi
    1fe2:	20 30                	and    BYTE PTR [rax],dh
    1fe4:	78 37                	js     201d <__FRAME_END__+0x1751>
    1fe6:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1fed:	66 66 66 66 66 66 66 
    1ff4:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1ff9:	46                   	rex.RX
    1ffa:	4c 54                	rex.WR push rsp
    1ffc:	36 34 5f             	ss xor al,0x5f
    1fff:	44                   	rex.R
    2000:	45                   	rex.RB
    2001:	43                   	rex.XB
    2002:	49                   	rex.WB
    2003:	4d                   	rex.WRB
    2004:	41                   	rex.B
    2005:	4c 5f                	rex.WR pop rdi
    2007:	44                   	rex.R
    2008:	49                   	rex.WB
    2009:	47 5f                	rex.RXB pop r15
    200b:	5f                   	pop    rdi
    200c:	20 31                	and    BYTE PTR [rcx],dh
    200e:	37                   	(bad)  
    200f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2012:	4c                   	rex.WR
    2013:	4f                   	rex.WRXB
    2014:	4e                   	rex.WRX
    2015:	47 5f                	rex.RXB pop r15
    2017:	4c                   	rex.WR
    2018:	4f                   	rex.WRXB
    2019:	4e                   	rex.WRX
    201a:	47 5f                	rex.RXB pop r15
    201c:	57                   	push   rdi
    201d:	49                   	rex.WB
    201e:	44 54                	rex.R push rsp
    2020:	48 5f                	rex.W pop rdi
    2022:	5f                   	pop    rdi
    2023:	20 36                	and    BYTE PTR [rsi],dh
    2025:	34 00                	xor    al,0x0
    2027:	5f                   	pop    rdi
    2028:	5f                   	pop    rdi
    2029:	46                   	rex.RX
    202a:	4c 54                	rex.WR push rsp
    202c:	36 34 5f             	ss xor al,0x5f
    202f:	44                   	rex.R
    2030:	45                   	rex.RB
    2031:	4e                   	rex.WRX
    2032:	4f 52                	rex.WRXB push r10
    2034:	4d 5f                	rex.WRB pop r15
    2036:	4d                   	rex.WRB
    2037:	49                   	rex.WB
    2038:	4e 5f                	rex.WRX pop rdi
    203a:	5f                   	pop    rdi
    203b:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    203e:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    2041:	36 35 36 34 35 38    	ss xor eax,0x38353436
    2047:	34 31                	xor    al,0x31
    2049:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    204c:	35 34 34 31 37       	xor    eax,0x37313434
    2051:	36 35 36 38 37 39    	ss xor eax,0x39373836
    2057:	32 38                	xor    bh,BYTE PTR [rax]
    2059:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    205c:	32 31                	xor    dh,BYTE PTR [rcx]
    205e:	33 37                	xor    esi,DWORD PTR [rdi]
    2060:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    2063:	33 32                	xor    esi,DWORD PTR [rdx]
    2065:	34 46                	xor    al,0x46
    2067:	36 34 00             	ss xor al,0x0
    206a:	62                   	(bad)  
    206b:	75 66                	jne    20d3 <__FRAME_END__+0x1807>
    206d:	66 65 72 00          	data16 gs jb 2071 <__FRAME_END__+0x17a5>
    2071:	73 74                	jae    20e7 <__FRAME_END__+0x181b>
    2073:	61                   	(bad)  
    2074:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    2077:	65 78 61             	gs js  20db <__FRAME_END__+0x180f>
    207a:	6d                   	ins    DWORD PTR es:[rdi],dx
    207b:	70 6c                	jo     20e9 <__FRAME_END__+0x181d>
    207d:	65 2e 63 00          	gs movsxd eax,DWORD PTR cs:[rax]
    2081:	5f                   	pop    rdi
    2082:	5f                   	pop    rdi
    2083:	46                   	rex.RX
    2084:	4c 54                	rex.WR push rsp
    2086:	5f                   	pop    rdi
    2087:	45 50                	rex.RB push r8
    2089:	53                   	push   rbx
    208a:	49                   	rex.WB
    208b:	4c                   	rex.WR
    208c:	4f                   	rex.WRXB
    208d:	4e 5f                	rex.WRX pop rdi
    208f:	5f                   	pop    rdi
    2090:	20 31                	and    BYTE PTR [rcx],dh
    2092:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    2095:	32 30                	xor    dh,BYTE PTR [rax]
    2097:	39 32                	cmp    DWORD PTR [rdx],esi
    2099:	38 39                	cmp    BYTE PTR [rcx],bh
    209b:	35 35 30 37 38       	xor    eax,0x38373035
    20a0:	31 32                	xor    DWORD PTR [rdx],esi
    20a2:	35 30 30 30 30       	xor    eax,0x30303030
    20a7:	30 30                	xor    BYTE PTR [rax],dh
    20a9:	30 30                	xor    BYTE PTR [rax],dh
    20ab:	30 30                	xor    BYTE PTR [rax],dh
    20ad:	30 30                	xor    BYTE PTR [rax],dh
    20af:	30 30                	xor    BYTE PTR [rax],dh
    20b1:	30 30                	xor    BYTE PTR [rax],dh
    20b3:	30 30                	xor    BYTE PTR [rax],dh
    20b5:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    20b8:	37                   	(bad)  
    20b9:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    20bd:	46                   	rex.RX
    20be:	4c 54                	rex.WR push rsp
    20c0:	36 34 58             	ss xor al,0x58
    20c3:	5f                   	pop    rdi
    20c4:	4d                   	rex.WRB
    20c5:	41 58                	pop    r8
    20c7:	5f                   	pop    rdi
    20c8:	5f                   	pop    rdi
    20c9:	20 31                	and    BYTE PTR [rcx],dh
    20cb:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    20ce:	39 37                	cmp    DWORD PTR [rdi],esi
    20d0:	33 31                	xor    esi,DWORD PTR [rcx]
    20d2:	34 39                	xor    al,0x39
    20d4:	35 33 35 37 32       	xor    eax,0x32373533
    20d9:	33 31                	xor    esi,DWORD PTR [rcx]
    20db:	37                   	(bad)  
    20dc:	36 35 30 32 31 32    	ss xor eax,0x32313230
    20e2:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    20e5:	35 33 30 33 30       	xor    eax,0x30333033
    20ea:	39 37                	cmp    DWORD PTR [rdi],esi
    20ec:	30 32                	xor    BYTE PTR [rdx],dh
    20ee:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    20f1:	34 39                	xor    al,0x39
    20f3:	33 32                	xor    esi,DWORD PTR [rdx]
    20f5:	46                   	rex.RX
    20f6:	36 34 78             	ss xor al,0x78
    20f9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    20fc:	53                   	push   rbx
    20fd:	54                   	push   rsp
    20fe:	44                   	rex.R
    20ff:	43 5f                	rex.XB pop r15
    2101:	55                   	push   rbp
    2102:	54                   	push   rsp
    2103:	46 5f                	rex.RX pop rdi
    2105:	31 36                	xor    DWORD PTR [rsi],esi
    2107:	5f                   	pop    rdi
    2108:	5f                   	pop    rdi
    2109:	20 31                	and    BYTE PTR [rcx],dh
    210b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    210e:	49                   	rex.WB
    210f:	4e 54                	rex.WRX push rsp
    2111:	4d                   	rex.WRB
    2112:	41 58                	pop    r8
    2114:	5f                   	pop    rdi
    2115:	54                   	push   rsp
    2116:	59                   	pop    rcx
    2117:	50                   	push   rax
    2118:	45 5f                	rex.RB pop r15
    211a:	5f                   	pop    rdi
    211b:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    211f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2123:	74 00                	je     2125 <__FRAME_END__+0x1859>
    2125:	5f                   	pop    rdi
    2126:	5f                   	pop    rdi
    2127:	4c                   	rex.WR
    2128:	44                   	rex.R
    2129:	42                   	rex.X
    212a:	4c 5f                	rex.WR pop rdi
    212c:	48                   	rex.W
    212d:	41 53                	push   r11
    212f:	5f                   	pop    rdi
    2130:	44                   	rex.R
    2131:	45                   	rex.RB
    2132:	4e                   	rex.WRX
    2133:	4f 52                	rex.WRXB push r10
    2135:	4d 5f                	rex.WRB pop r15
    2137:	5f                   	pop    rdi
    2138:	20 31                	and    BYTE PTR [rcx],dh
    213a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    213d:	4c                   	rex.WR
    213e:	44                   	rex.R
    213f:	42                   	rex.X
    2140:	4c 5f                	rex.WR pop rdi
    2142:	4d                   	rex.WRB
    2143:	41                   	rex.B
    2144:	4e 54                	rex.WRX push rsp
    2146:	5f                   	pop    rdi
    2147:	44                   	rex.R
    2148:	49                   	rex.WB
    2149:	47 5f                	rex.RXB pop r15
    214b:	5f                   	pop    rdi
    214c:	20 36                	and    BYTE PTR [rsi],dh
    214e:	34 00                	xor    al,0x0
    2150:	5f                   	pop    rdi
    2151:	5f                   	pop    rdi
    2152:	68 61 73 5f 69       	push   0x695f7361
    2157:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2158:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    215c:	65 28 53 54          	sub    BYTE PTR gs:[rbx+0x54],dl
    2160:	52                   	push   rdx
    2161:	29 20                	sub    DWORD PTR [rax],esp
    2163:	5f                   	pop    rdi
    2164:	5f                   	pop    rdi
    2165:	68 61 73 5f 69       	push   0x695f7361
    216a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    216b:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    216f:	65 5f                	gs pop rdi
    2171:	5f                   	pop    rdi
    2172:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
    2175:	52                   	push   rdx
    2176:	29 00                	sub    DWORD PTR [rax],eax
    2178:	5f                   	pop    rdi
    2179:	5f                   	pop    rdi
    217a:	47                   	rex.RXB
    217b:	43                   	rex.XB
    217c:	43 5f                	rex.XB pop r15
    217e:	41 54                	push   r12
    2180:	4f                   	rex.WRXB
    2181:	4d                   	rex.WRB
    2182:	49                   	rex.WB
    2183:	43 5f                	rex.XB pop r15
    2185:	43                   	rex.XB
    2186:	48                   	rex.W
    2187:	41 52                	push   r10
    2189:	31 36                	xor    DWORD PTR [rsi],esi
    218b:	5f                   	pop    rdi
    218c:	54                   	push   rsp
    218d:	5f                   	pop    rdi
    218e:	4c                   	rex.WR
    218f:	4f                   	rex.WRXB
    2190:	43                   	rex.XB
    2191:	4b 5f                	rex.WXB pop r15
    2193:	46 52                	rex.RX push rdx
    2195:	45                   	rex.RB
    2196:	45 20 32             	and    BYTE PTR [r10],r14b
    2199:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    219c:	44                   	rex.R
    219d:	45                   	rex.RB
    219e:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    21a1:	5f                   	pop    rdi
    21a2:	45 50                	rex.RB push r8
    21a4:	53                   	push   rbx
    21a5:	49                   	rex.WB
    21a6:	4c                   	rex.WR
    21a7:	4f                   	rex.WRXB
    21a8:	4e 5f                	rex.WRX pop rdi
    21aa:	5f                   	pop    rdi
    21ab:	20 31                	and    BYTE PTR [rcx],dh
    21ad:	45 2d 36 44 46 00    	rex.RB sub eax,0x464436
    21b3:	5f                   	pop    rdi
    21b4:	5f                   	pop    rdi
    21b5:	53                   	push   rbx
    21b6:	49 5a                	rex.WB pop r10
    21b8:	45                   	rex.RB
    21b9:	4f                   	rex.WRXB
    21ba:	46 5f                	rex.RX pop rdi
    21bc:	46                   	rex.RX
    21bd:	4c                   	rex.WR
    21be:	4f                   	rex.WRXB
    21bf:	41 54                	push   r12
    21c1:	38 30                	cmp    BYTE PTR [rax],dh
    21c3:	5f                   	pop    rdi
    21c4:	5f                   	pop    rdi
    21c5:	20 31                	and    BYTE PTR [rcx],dh
    21c7:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    21cb:	52                   	push   rdx
    21cc:	45                   	rex.RB
    21cd:	47                   	rex.RXB
    21ce:	49 53                	rex.WB push r11
    21d0:	54                   	push   rsp
    21d1:	45 52                	rex.RB push r10
    21d3:	5f                   	pop    rdi
    21d4:	50                   	push   rax
    21d5:	52                   	push   rdx
    21d6:	45                   	rex.RB
    21d7:	46                   	rex.RX
    21d8:	49 58                	rex.WB pop r8
    21da:	5f                   	pop    rdi
    21db:	5f                   	pop    rdi
    21dc:	20 00                	and    BYTE PTR [rax],al
    21de:	5f                   	pop    rdi
    21df:	5f                   	pop    rdi
    21e0:	41 54                	push   r12
    21e2:	4f                   	rex.WRXB
    21e3:	4d                   	rex.WRB
    21e4:	49                   	rex.WB
    21e5:	43 5f                	rex.XB pop r15
    21e7:	43                   	rex.XB
    21e8:	4f                   	rex.WRXB
    21e9:	4e 53                	rex.WRX push rbx
    21eb:	55                   	push   rbp
    21ec:	4d                   	rex.WRB
    21ed:	45 20 31             	and    BYTE PTR [r9],r14b
    21f0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21f3:	55                   	push   rbp
    21f4:	49                   	rex.WB
    21f5:	4e 54                	rex.WRX push rsp
    21f7:	36 34 5f             	ss xor al,0x5f
    21fa:	4d                   	rex.WRB
    21fb:	41 58                	pop    r8
    21fd:	5f                   	pop    rdi
    21fe:	5f                   	pop    rdi
    21ff:	20 30                	and    BYTE PTR [rax],dh
    2201:	78 66                	js     2269 <__FRAME_END__+0x199d>
    2203:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    220a:	66 66 66 66 66 66 66 
    2211:	66 55                	push   bp
    2213:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2217:	53                   	push   rbx
    2218:	54                   	push   rsp
    2219:	44                   	rex.R
    221a:	43 5f                	rex.XB pop r15
    221c:	55                   	push   rbp
    221d:	54                   	push   rsp
    221e:	46 5f                	rex.RX pop rdi
    2220:	33 32                	xor    esi,DWORD PTR [rdx]
    2222:	5f                   	pop    rdi
    2223:	5f                   	pop    rdi
    2224:	20 31                	and    BYTE PTR [rcx],dh
    2226:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2229:	55                   	push   rbp
    222a:	49                   	rex.WB
    222b:	4e 54                	rex.WRX push rsp
    222d:	31 36                	xor    DWORD PTR [rsi],esi
    222f:	5f                   	pop    rdi
    2230:	54                   	push   rsp
    2231:	59                   	pop    rcx
    2232:	50                   	push   rax
    2233:	45 5f                	rex.RB pop r15
    2235:	5f                   	pop    rdi
    2236:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    2239:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    223a:	72 74                	jb     22b0 <__FRAME_END__+0x19e4>
    223c:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    223f:	73 69                	jae    22aa <__FRAME_END__+0x19de>
    2241:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2243:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    2248:	74 00                	je     224a <__FRAME_END__+0x197e>
    224a:	5f                   	pop    rdi
    224b:	5f                   	pop    rdi
    224c:	46                   	rex.RX
    224d:	4c 54                	rex.WR push rsp
    224f:	36 34 58             	ss xor al,0x58
    2252:	5f                   	pop    rdi
    2253:	4d                   	rex.WRB
    2254:	41 58                	pop    r8
    2256:	5f                   	pop    rdi
    2257:	31 30                	xor    DWORD PTR [rax],esi
    2259:	5f                   	pop    rdi
    225a:	45 58                	rex.RB pop r8
    225c:	50                   	push   rax
    225d:	5f                   	pop    rdi
    225e:	5f                   	pop    rdi
    225f:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    2262:	33 32                	xor    esi,DWORD PTR [rdx]
    2264:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2267:	55                   	push   rbp
    2268:	49                   	rex.WB
    2269:	4e 54                	rex.WRX push rsp
    226b:	33 32                	xor    esi,DWORD PTR [rdx]
    226d:	5f                   	pop    rdi
    226e:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2272:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    2275:	23 23                	and    esp,DWORD PTR [rbx]
    2277:	20 55 00             	and    BYTE PTR [rbp+0x0],dl
    227a:	5f                   	pop    rdi
    227b:	5f                   	pop    rdi
    227c:	6b 38 20             	imul   edi,DWORD PTR [rax],0x20
    227f:	31 00                	xor    DWORD PTR [rax],eax
    2281:	5f                   	pop    rdi
    2282:	5f                   	pop    rdi
    2283:	53                   	push   rbx
    2284:	45                   	rex.RB
    2285:	47 5f                	rex.RXB pop r15
    2287:	46 53                	rex.RX push rbx
    2289:	20 31                	and    BYTE PTR [rcx],dh
    228b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    228e:	55                   	push   rbp
    228f:	49                   	rex.WB
    2290:	4e 54                	rex.WRX push rsp
    2292:	4d                   	rex.WRB
    2293:	41 58                	pop    r8
    2295:	5f                   	pop    rdi
    2296:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    229a:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    229d:	23 23                	and    esp,DWORD PTR [rbx]
    229f:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
    22a2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22a5:	47 58                	rex.RXB pop r8
    22a7:	58                   	pop    rax
    22a8:	5f                   	pop    rdi
    22a9:	41                   	rex.B
    22aa:	42                   	rex.X
    22ab:	49 5f                	rex.WB pop r15
    22ad:	56                   	push   rsi
    22ae:	45 52                	rex.RB push r10
    22b0:	53                   	push   rbx
    22b1:	49                   	rex.WB
    22b2:	4f                   	rex.WRXB
    22b3:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    22b6:	30 31                	xor    BYTE PTR [rcx],dh
    22b8:	31 00                	xor    DWORD PTR [rax],eax
    22ba:	5f                   	pop    rdi
    22bb:	5f                   	pop    rdi
    22bc:	53                   	push   rbx
    22bd:	49 5a                	rex.WB pop r10
    22bf:	45                   	rex.RB
    22c0:	4f                   	rex.WRXB
    22c1:	46 5f                	rex.RX pop rdi
    22c3:	50                   	push   rax
    22c4:	54                   	push   rsp
    22c5:	52                   	push   rdx
    22c6:	44                   	rex.R
    22c7:	49                   	rex.WB
    22c8:	46                   	rex.RX
    22c9:	46 5f                	rex.RX pop rdi
    22cb:	54                   	push   rsp
    22cc:	5f                   	pop    rdi
    22cd:	5f                   	pop    rdi
    22ce:	20 38                	and    BYTE PTR [rax],bh
    22d0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22d3:	43                   	rex.XB
    22d4:	48                   	rex.W
    22d5:	41 52                	push   r10
    22d7:	5f                   	pop    rdi
    22d8:	42                   	rex.X
    22d9:	49 54                	rex.WB push r12
    22db:	5f                   	pop    rdi
    22dc:	5f                   	pop    rdi
    22dd:	20 38                	and    BYTE PTR [rax],bh
    22df:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22e2:	53                   	push   rbx
    22e3:	49                   	rex.WB
    22e4:	47 5f                	rex.RXB pop r15
    22e6:	41 54                	push   r12
    22e8:	4f                   	rex.WRXB
    22e9:	4d                   	rex.WRB
    22ea:	49                   	rex.WB
    22eb:	43 5f                	rex.XB pop r15
    22ed:	4d                   	rex.WRB
    22ee:	49                   	rex.WB
    22ef:	4e 5f                	rex.WRX pop rdi
    22f1:	5f                   	pop    rdi
    22f2:	20 28                	and    BYTE PTR [rax],ch
    22f4:	2d 5f 5f 53 49       	sub    eax,0x49535f5f
    22f9:	47 5f                	rex.RXB pop r15
    22fb:	41 54                	push   r12
    22fd:	4f                   	rex.WRXB
    22fe:	4d                   	rex.WRB
    22ff:	49                   	rex.WB
    2300:	43 5f                	rex.XB pop r15
    2302:	4d                   	rex.WRB
    2303:	41 58                	pop    r8
    2305:	5f                   	pop    rdi
    2306:	5f                   	pop    rdi
    2307:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 29542d <_end+0x94415>
    230d:	5f                   	pop    rdi
    230e:	5f                   	pop    rdi
    230f:	49                   	rex.WB
    2310:	4e 54                	rex.WRX push rsp
    2312:	5f                   	pop    rdi
    2313:	46                   	rex.RX
    2314:	41 53                	push   r11
    2316:	54                   	push   rsp
    2317:	36 34 5f             	ss xor al,0x5f
    231a:	57                   	push   rdi
    231b:	49                   	rex.WB
    231c:	44 54                	rex.R push rsp
    231e:	48 5f                	rex.W pop rdi
    2320:	5f                   	pop    rdi
    2321:	20 36                	and    BYTE PTR [rsi],dh
    2323:	34 00                	xor    al,0x0
    2325:	5f                   	pop    rdi
    2326:	5f                   	pop    rdi
    2327:	46                   	rex.RX
    2328:	4c 54                	rex.WR push rsp
    232a:	31 32                	xor    DWORD PTR [rdx],esi
    232c:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    232f:	45                   	rex.RB
    2330:	4e                   	rex.WRX
    2331:	4f 52                	rex.WRXB push r10
    2333:	4d 5f                	rex.WRB pop r15
    2335:	4d                   	rex.WRB
    2336:	49                   	rex.WB
    2337:	4e 5f                	rex.WRX pop rdi
    2339:	5f                   	pop    rdi
    233a:	20 36                	and    BYTE PTR [rsi],dh
    233c:	2e 34 37             	cs xor al,0x37
    233f:	35 31 37 35 31       	xor    eax,0x31353731
    2344:	31 39                	xor    DWORD PTR [rcx],edi
    2346:	34 33                	xor    al,0x33
    2348:	38 30                	cmp    BYTE PTR [rax],dh
    234a:	32 35 31 31 30 39    	xor    dh,BYTE PTR [rip+0x39303131]        # 39305481 <_end+0x39104469>
    2350:	32 34 34             	xor    dh,BYTE PTR [rsp+rsi*1]
    2353:	33 38                	xor    edi,DWORD PTR [rax]
    2355:	39 35 38 32 32 37    	cmp    DWORD PTR [rip+0x37323238],esi        # 37325593 <_end+0x3712457b>
    235b:	36 34 36             	ss xor al,0x36
    235e:	35 35 65 2d 34       	xor    eax,0x342d6535
    2363:	39 36                	cmp    DWORD PTR [rsi],esi
    2365:	36 46 31 32          	rex.RX xor DWORD PTR ss:[rdx],r14d
    2369:	38 00                	cmp    BYTE PTR [rax],al
    236b:	5f                   	pop    rdi
    236c:	5f                   	pop    rdi
    236d:	55                   	push   rbp
    236e:	49                   	rex.WB
    236f:	4e 54                	rex.WRX push rsp
    2371:	5f                   	pop    rdi
    2372:	4c                   	rex.WR
    2373:	45                   	rex.RB
    2374:	41 53                	push   r11
    2376:	54                   	push   rsp
    2377:	33 32                	xor    esi,DWORD PTR [rdx]
    2379:	5f                   	pop    rdi
    237a:	54                   	push   rsp
    237b:	59                   	pop    rcx
    237c:	50                   	push   rax
    237d:	45 5f                	rex.RB pop r15
    237f:	5f                   	pop    rdi
    2380:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    2383:	73 69                	jae    23ee <__FRAME_END__+0x1b22>
    2385:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2387:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    238c:	74 00                	je     238e <__FRAME_END__+0x1ac2>
    238e:	5f                   	pop    rdi
    238f:	5f                   	pop    rdi
    2390:	44                   	rex.R
    2391:	42                   	rex.X
    2392:	4c 5f                	rex.WR pop rdi
    2394:	48                   	rex.W
    2395:	41 53                	push   r11
    2397:	5f                   	pop    rdi
    2398:	44                   	rex.R
    2399:	45                   	rex.RB
    239a:	4e                   	rex.WRX
    239b:	4f 52                	rex.WRXB push r10
    239d:	4d 5f                	rex.WRB pop r15
    239f:	5f                   	pop    rdi
    23a0:	20 31                	and    BYTE PTR [rcx],dh
    23a2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    23a5:	46                   	rex.RX
    23a6:	4c 54                	rex.WR push rsp
    23a8:	31 32                	xor    DWORD PTR [rdx],esi
    23aa:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    23ad:	41                   	rex.B
    23ae:	4e 54                	rex.WRX push rsp
    23b0:	5f                   	pop    rdi
    23b1:	44                   	rex.R
    23b2:	49                   	rex.WB
    23b3:	47 5f                	rex.RXB pop r15
    23b5:	5f                   	pop    rdi
    23b6:	20 31                	and    BYTE PTR [rcx],dh
    23b8:	31 33                	xor    DWORD PTR [rbx],esi
    23ba:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    23bd:	46                   	rex.RX
    23be:	4c 54                	rex.WR push rsp
    23c0:	36 34 5f             	ss xor al,0x5f
    23c3:	44                   	rex.R
    23c4:	49                   	rex.WB
    23c5:	47 5f                	rex.RXB pop r15
    23c7:	5f                   	pop    rdi
    23c8:	20 31                	and    BYTE PTR [rcx],dh
    23ca:	35 00 5f 5f 55       	xor    eax,0x555f5f00
    23cf:	49                   	rex.WB
    23d0:	4e 54                	rex.WRX push rsp
    23d2:	4d                   	rex.WRB
    23d3:	41 58                	pop    r8
    23d5:	5f                   	pop    rdi
    23d6:	4d                   	rex.WRB
    23d7:	41 58                	pop    r8
    23d9:	5f                   	pop    rdi
    23da:	5f                   	pop    rdi
    23db:	20 30                	and    BYTE PTR [rax],dh
    23dd:	78 66                	js     2445 <__FRAME_END__+0x1b79>
    23df:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    23e6:	66 66 66 66 66 66 66 
    23ed:	66 55                	push   bp
    23ef:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    23f3:	47                   	rex.RXB
    23f4:	43                   	rex.XB
    23f5:	43 5f                	rex.XB pop r15
    23f7:	48                   	rex.W
    23f8:	41 56                	push   r14
    23fa:	45 5f                	rex.RB pop r15
    23fc:	53                   	push   rbx
    23fd:	59                   	pop    rcx
    23fe:	4e                   	rex.WRX
    23ff:	43 5f                	rex.XB pop r15
    2401:	43                   	rex.XB
    2402:	4f                   	rex.WRXB
    2403:	4d 50                	rex.WRB push r8
    2405:	41 52                	push   r10
    2407:	45 5f                	rex.RB pop r15
    2409:	41                   	rex.B
    240a:	4e                   	rex.WRX
    240b:	44 5f                	rex.R pop rdi
    240d:	53                   	push   rbx
    240e:	57                   	push   rdi
    240f:	41 50                	push   r8
    2411:	5f                   	pop    rdi
    2412:	31 20                	xor    DWORD PTR [rax],esp
    2414:	31 00                	xor    DWORD PTR [rax],eax
    2416:	5f                   	pop    rdi
    2417:	5f                   	pop    rdi
    2418:	44                   	rex.R
    2419:	42                   	rex.X
    241a:	4c 5f                	rex.WR pop rdi
    241c:	4d                   	rex.WRB
    241d:	41 58                	pop    r8
    241f:	5f                   	pop    rdi
    2420:	5f                   	pop    rdi
    2421:	20 28                	and    BYTE PTR [rax],ch
    2423:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    2427:	62                   	(bad)  
    2428:	6c                   	ins    BYTE PTR es:[rdi],dx
    2429:	65 29 31             	sub    DWORD PTR gs:[rcx],esi
    242c:	2e 37                	cs (bad) 
    242e:	39 37                	cmp    DWORD PTR [rdi],esi
    2430:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    2433:	31 33                	xor    DWORD PTR [rbx],esi
    2435:	34 38                	xor    al,0x38
    2437:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    243a:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31385477 <_end+0x3118445f>
    2440:	34 35                	xor    al,0x35
    2442:	32 37                	xor    dh,BYTE PTR [rdi]
    2444:	34 32                	xor    al,0x32
    2446:	33 37                	xor    esi,DWORD PTR [rdi]
    2448:	33 31                	xor    esi,DWORD PTR [rcx]
    244a:	37                   	(bad)  
    244b:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    244e:	35 37 65 2b 33       	xor    eax,0x332b6537
    2453:	30 38                	xor    BYTE PTR [rax],bh
    2455:	4c 29 00             	sub    QWORD PTR [rax],r8
    2458:	5f                   	pop    rdi
    2459:	5f                   	pop    rdi
    245a:	49                   	rex.WB
    245b:	4e 54                	rex.WRX push rsp
    245d:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2460:	41 58                	pop    r8
    2462:	5f                   	pop    rdi
    2463:	5f                   	pop    rdi
    2464:	20 30                	and    BYTE PTR [rax],dh
    2466:	78 37                	js     249f <__FRAME_END__+0x1bd3>
    2468:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    246c:	55                   	push   rbp
    246d:	49                   	rex.WB
    246e:	4e 54                	rex.WRX push rsp
    2470:	5f                   	pop    rdi
    2471:	46                   	rex.RX
    2472:	41 53                	push   r11
    2474:	54                   	push   rsp
    2475:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2478:	41 58                	pop    r8
    247a:	5f                   	pop    rdi
    247b:	5f                   	pop    rdi
    247c:	20 30                	and    BYTE PTR [rax],dh
    247e:	78 66                	js     24e6 <__FRAME_END__+0x1c1a>
    2480:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    2484:	44                   	rex.R
    2485:	42                   	rex.X
    2486:	4c 5f                	rex.WR pop rdi
    2488:	48                   	rex.W
    2489:	41 53                	push   r11
    248b:	5f                   	pop    rdi
    248c:	51                   	push   rcx
    248d:	55                   	push   rbp
    248e:	49                   	rex.WB
    248f:	45 54                	rex.RB push r12
    2491:	5f                   	pop    rdi
    2492:	4e                   	rex.WRX
    2493:	41                   	rex.B
    2494:	4e 5f                	rex.WRX pop rdi
    2496:	5f                   	pop    rdi
    2497:	20 31                	and    BYTE PTR [rcx],dh
    2499:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    249c:	46                   	rex.RX
    249d:	4c 54                	rex.WR push rsp
    249f:	5f                   	pop    rdi
    24a0:	4d                   	rex.WRB
    24a1:	49                   	rex.WB
    24a2:	4e 5f                	rex.WRX pop rdi
    24a4:	31 30                	xor    DWORD PTR [rax],esi
    24a6:	5f                   	pop    rdi
    24a7:	45 58                	rex.RB pop r8
    24a9:	50                   	push   rax
    24aa:	5f                   	pop    rdi
    24ab:	5f                   	pop    rdi
    24ac:	20 28                	and    BYTE PTR [rax],ch
    24ae:	2d 33 37 29 00       	sub    eax,0x293733
    24b3:	5f                   	pop    rdi
    24b4:	5f                   	pop    rdi
    24b5:	47                   	rex.RXB
    24b6:	43                   	rex.XB
    24b7:	43 5f                	rex.XB pop r15
    24b9:	41 54                	push   r12
    24bb:	4f                   	rex.WRXB
    24bc:	4d                   	rex.WRB
    24bd:	49                   	rex.WB
    24be:	43 5f                	rex.XB pop r15
    24c0:	54                   	push   rsp
    24c1:	45 53                	rex.RB push r11
    24c3:	54                   	push   rsp
    24c4:	5f                   	pop    rdi
    24c5:	41                   	rex.B
    24c6:	4e                   	rex.WRX
    24c7:	44 5f                	rex.R pop rdi
    24c9:	53                   	push   rbx
    24ca:	45 54                	rex.RB push r12
    24cc:	5f                   	pop    rdi
    24cd:	54                   	push   rsp
    24ce:	52                   	push   rdx
    24cf:	55                   	push   rbp
    24d0:	45 56                	rex.RB push r14
    24d2:	41                   	rex.B
    24d3:	4c 20 31             	rex.WR and BYTE PTR [rcx],r14b
    24d6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24d9:	46                   	rex.RX
    24da:	4c 54                	rex.WR push rsp
    24dc:	36 34 58             	ss xor al,0x58
    24df:	5f                   	pop    rdi
    24e0:	44                   	rex.R
    24e1:	45                   	rex.RB
    24e2:	43                   	rex.XB
    24e3:	49                   	rex.WB
    24e4:	4d                   	rex.WRB
    24e5:	41                   	rex.B
    24e6:	4c 5f                	rex.WR pop rdi
    24e8:	44                   	rex.R
    24e9:	49                   	rex.WB
    24ea:	47 5f                	rex.RXB pop r15
    24ec:	5f                   	pop    rdi
    24ed:	20 32                	and    BYTE PTR [rdx],dh
    24ef:	31 00                	xor    DWORD PTR [rax],eax
    24f1:	5f                   	pop    rdi
    24f2:	5f                   	pop    rdi
    24f3:	41 54                	push   r12
    24f5:	4f                   	rex.WRXB
    24f6:	4d                   	rex.WRB
    24f7:	49                   	rex.WB
    24f8:	43 5f                	rex.XB pop r15
    24fa:	41                   	rex.B
    24fb:	43 51                	rex.XB push r9
    24fd:	5f                   	pop    rdi
    24fe:	52                   	push   rdx
    24ff:	45                   	rex.RB
    2500:	4c 20 34 00          	rex.WR and BYTE PTR [rax+rax*1],r14b
    2504:	5f                   	pop    rdi
    2505:	5f                   	pop    rdi
    2506:	57                   	push   rdi
    2507:	43                   	rex.XB
    2508:	48                   	rex.W
    2509:	41 52                	push   r10
    250b:	5f                   	pop    rdi
    250c:	54                   	push   rsp
    250d:	59                   	pop    rcx
    250e:	50                   	push   rax
    250f:	45 5f                	rex.RB pop r15
    2511:	5f                   	pop    rdi
    2512:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    2515:	74 00                	je     2517 <__FRAME_END__+0x1c4b>
    2517:	5f                   	pop    rdi
    2518:	53                   	push   rbx
    2519:	54                   	push   rsp
    251a:	44                   	rex.R
    251b:	43 5f                	rex.XB pop r15
    251d:	50                   	push   rax
    251e:	52                   	push   rdx
    251f:	45                   	rex.RB
    2520:	44                   	rex.R
    2521:	45                   	rex.RB
    2522:	46 5f                	rex.RX pop rdi
    2524:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    2527:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    252a:	49                   	rex.WB
    252b:	4e 54                	rex.WRX push rsp
    252d:	5f                   	pop    rdi
    252e:	46                   	rex.RX
    252f:	41 53                	push   r11
    2531:	54                   	push   rsp
    2532:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    2535:	49                   	rex.WB
    2536:	44 54                	rex.R push rsp
    2538:	48 5f                	rex.W pop rdi
    253a:	5f                   	pop    rdi
    253b:	20 38                	and    BYTE PTR [rax],bh
    253d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2540:	46                   	rex.RX
    2541:	4c 54                	rex.WR push rsp
    2543:	31 32                	xor    DWORD PTR [rdx],esi
    2545:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2548:	41 58                	pop    r8
    254a:	5f                   	pop    rdi
    254b:	31 30                	xor    DWORD PTR [rax],esi
    254d:	5f                   	pop    rdi
    254e:	45 58                	rex.RB pop r8
    2550:	50                   	push   rax
    2551:	5f                   	pop    rdi
    2552:	5f                   	pop    rdi
    2553:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    2556:	33 32                	xor    esi,DWORD PTR [rdx]
    2558:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    255b:	55                   	push   rbp
    255c:	53                   	push   rbx
    255d:	45 52                	rex.RB push r10
    255f:	5f                   	pop    rdi
    2560:	4c                   	rex.WR
    2561:	41                   	rex.B
    2562:	42                   	rex.X
    2563:	45                   	rex.RB
    2564:	4c 5f                	rex.WR pop rdi
    2566:	50                   	push   rax
    2567:	52                   	push   rdx
    2568:	45                   	rex.RB
    2569:	46                   	rex.RX
    256a:	49 58                	rex.WB pop r8
    256c:	5f                   	pop    rdi
    256d:	5f                   	pop    rdi
    256e:	20 00                	and    BYTE PTR [rax],al
    2570:	74 65                	je     25d7 <__FRAME_END__+0x1d0b>
    2572:	73 74                	jae    25e8 <__FRAME_END__+0x1d1c>
    2574:	5f                   	pop    rdi
    2575:	66 75 6e             	data16 jne 25e6 <__FRAME_END__+0x1d1a>
    2578:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    257c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    257d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2580:	46                   	rex.RX
    2581:	4c 54                	rex.WR push rsp
    2583:	33 32                	xor    esi,DWORD PTR [rdx]
    2585:	5f                   	pop    rdi
    2586:	4d                   	rex.WRB
    2587:	49                   	rex.WB
    2588:	4e 5f                	rex.WRX pop rdi
    258a:	45 58                	rex.RB pop r8
    258c:	50                   	push   rax
    258d:	5f                   	pop    rdi
    258e:	5f                   	pop    rdi
    258f:	20 28                	and    BYTE PTR [rax],ch
    2591:	2d 31 32 35 29       	sub    eax,0x29353231
    2596:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2599:	43                   	rex.XB
    259a:	48                   	rex.W
    259b:	41 52                	push   r10
    259d:	31 36                	xor    DWORD PTR [rsi],esi
    259f:	5f                   	pop    rdi
    25a0:	54                   	push   rsp
    25a1:	59                   	pop    rcx
    25a2:	50                   	push   rax
    25a3:	45 5f                	rex.RB pop r15
    25a5:	5f                   	pop    rdi
    25a6:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    25a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25aa:	72 74                	jb     2620 <__FRAME_END__+0x1d54>
    25ac:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    25af:	73 69                	jae    261a <__FRAME_END__+0x1d4e>
    25b1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    25b3:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    25b8:	74 00                	je     25ba <__FRAME_END__+0x1cee>
    25ba:	5f                   	pop    rdi
    25bb:	5f                   	pop    rdi
    25bc:	55                   	push   rbp
    25bd:	49                   	rex.WB
    25be:	4e 54                	rex.WRX push rsp
    25c0:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    25c3:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    25c6:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    25c9:	5f                   	pop    rdi
    25ca:	5f                   	pop    rdi
    25cb:	46                   	rex.RX
    25cc:	4c 54                	rex.WR push rsp
    25ce:	31 32                	xor    DWORD PTR [rdx],esi
    25d0:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    25d3:	49                   	rex.WB
    25d4:	47 5f                	rex.RXB pop r15
    25d6:	5f                   	pop    rdi
    25d7:	20 33                	and    BYTE PTR [rbx],dh
    25d9:	33 00                	xor    eax,DWORD PTR [rax]
    25db:	5f                   	pop    rdi
    25dc:	5f                   	pop    rdi
    25dd:	55                   	push   rbp
    25de:	49                   	rex.WB
    25df:	4e 54                	rex.WRX push rsp
    25e1:	5f                   	pop    rdi
    25e2:	4c                   	rex.WR
    25e3:	45                   	rex.RB
    25e4:	41 53                	push   r11
    25e6:	54                   	push   rsp
    25e7:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    25ea:	59                   	pop    rcx
    25eb:	50                   	push   rax
    25ec:	45 5f                	rex.RB pop r15
    25ee:	5f                   	pop    rdi
    25ef:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    25f2:	73 69                	jae    265d <__FRAME_END__+0x1d91>
    25f4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    25f6:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    25fb:	61                   	(bad)  
    25fc:	72 00                	jb     25fe <__FRAME_END__+0x1d32>
    25fe:	5f                   	pop    rdi
    25ff:	5f                   	pop    rdi
    2600:	49                   	rex.WB
    2601:	4e 54                	rex.WRX push rsp
    2603:	36 34 5f             	ss xor al,0x5f
    2606:	54                   	push   rsp
    2607:	59                   	pop    rcx
    2608:	50                   	push   rax
    2609:	45 5f                	rex.RB pop r15
    260b:	5f                   	pop    rdi
    260c:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    2610:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2614:	74 00                	je     2616 <__FRAME_END__+0x1d4a>
    2616:	5f                   	pop    rdi
    2617:	5f                   	pop    rdi
    2618:	49                   	rex.WB
    2619:	4e 54                	rex.WRX push rsp
    261b:	5f                   	pop    rdi
    261c:	4c                   	rex.WR
    261d:	45                   	rex.RB
    261e:	41 53                	push   r11
    2620:	54                   	push   rsp
    2621:	36 34 5f             	ss xor al,0x5f
    2624:	57                   	push   rdi
    2625:	49                   	rex.WB
    2626:	44 54                	rex.R push rsp
    2628:	48 5f                	rex.W pop rdi
    262a:	5f                   	pop    rdi
    262b:	20 36                	and    BYTE PTR [rsi],dh
    262d:	34 00                	xor    al,0x0
    262f:	5f                   	pop    rdi
    2630:	5f                   	pop    rdi
    2631:	4c                   	rex.WR
    2632:	44                   	rex.R
    2633:	42                   	rex.X
    2634:	4c 5f                	rex.WR pop rdi
    2636:	44                   	rex.R
    2637:	49                   	rex.WB
    2638:	47 5f                	rex.RXB pop r15
    263a:	5f                   	pop    rdi
    263b:	20 31                	and    BYTE PTR [rcx],dh
    263d:	38 00                	cmp    BYTE PTR [rax],al
    263f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2640:	61                   	(bad)  
    2641:	69 6e 00 5f 5f 55 49 	imul   ebp,DWORD PTR [rsi+0x0],0x49555f5f
    2648:	4e 54                	rex.WRX push rsp
    264a:	33 32                	xor    esi,DWORD PTR [rdx]
    264c:	5f                   	pop    rdi
    264d:	4d                   	rex.WRB
    264e:	41 58                	pop    r8
    2650:	5f                   	pop    rdi
    2651:	5f                   	pop    rdi
    2652:	20 30                	and    BYTE PTR [rax],dh
    2654:	78 66                	js     26bc <__FRAME_END__+0x1df0>
    2656:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    265d:	55 
    265e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2661:	47                   	rex.RXB
    2662:	43                   	rex.XB
    2663:	43 5f                	rex.XB pop r15
    2665:	48                   	rex.W
    2666:	41 56                	push   r14
    2668:	45 5f                	rex.RB pop r15
    266a:	44 57                	rex.R push rdi
    266c:	41 52                	push   r10
    266e:	46 32 5f 43          	rex.RX xor r11b,BYTE PTR [rdi+0x43]
    2672:	46                   	rex.RX
    2673:	49 5f                	rex.WB pop r15
    2675:	41 53                	push   r11
    2677:	4d 20 31             	rex.WRB and BYTE PTR [r9],r14b
    267a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    267d:	49                   	rex.WB
    267e:	4e 54                	rex.WRX push rsp
    2680:	5f                   	pop    rdi
    2681:	4c                   	rex.WR
    2682:	45                   	rex.RB
    2683:	41 53                	push   r11
    2685:	54                   	push   rsp
    2686:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2689:	41 58                	pop    r8
    268b:	5f                   	pop    rdi
    268c:	5f                   	pop    rdi
    268d:	20 30                	and    BYTE PTR [rax],dh
    268f:	78 37                	js     26c8 <__FRAME_END__+0x1dfc>
    2691:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    2695:	44                   	rex.R
    2696:	45                   	rex.RB
    2697:	43                   	rex.XB
    2698:	36 34 5f             	ss xor al,0x5f
    269b:	4d                   	rex.WRB
    269c:	49                   	rex.WB
    269d:	4e 5f                	rex.WRX pop rdi
    269f:	5f                   	pop    rdi
    26a0:	20 31                	and    BYTE PTR [rcx],dh
    26a2:	45 2d 33 38 33 44    	rex.RB sub eax,0x44333833
    26a8:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    26ac:	44                   	rex.R
    26ad:	42                   	rex.X
    26ae:	4c 5f                	rex.WR pop rdi
    26b0:	4d                   	rex.WRB
    26b1:	49                   	rex.WB
    26b2:	4e 5f                	rex.WRX pop rdi
    26b4:	31 30                	xor    DWORD PTR [rax],esi
    26b6:	5f                   	pop    rdi
    26b7:	45 58                	rex.RB pop r8
    26b9:	50                   	push   rax
    26ba:	5f                   	pop    rdi
    26bb:	5f                   	pop    rdi
    26bc:	20 28                	and    BYTE PTR [rax],ch
    26be:	2d 33 30 37 29       	sub    eax,0x29373033
    26c3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26c6:	44                   	rex.R
    26c7:	45                   	rex.RB
    26c8:	43                   	rex.XB
    26c9:	49                   	rex.WB
    26ca:	4d                   	rex.WRB
    26cb:	41                   	rex.B
    26cc:	4c 5f                	rex.WR pop rdi
    26ce:	42                   	rex.X
    26cf:	49                   	rex.WB
    26d0:	44 5f                	rex.R pop rdi
    26d2:	46                   	rex.RX
    26d3:	4f 52                	rex.WRXB push r10
    26d5:	4d                   	rex.WRB
    26d6:	41 54                	push   r12
    26d8:	5f                   	pop    rdi
    26d9:	5f                   	pop    rdi
    26da:	20 31                	and    BYTE PTR [rcx],dh
    26dc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26df:	47                   	rex.RXB
    26e0:	4e 55                	rex.WRX push rbp
    26e2:	43 5f                	rex.XB pop r15
    26e4:	53                   	push   rbx
    26e5:	54                   	push   rsp
    26e6:	44                   	rex.R
    26e7:	43 5f                	rex.XB pop r15
    26e9:	49                   	rex.WB
    26ea:	4e                   	rex.WRX
    26eb:	4c                   	rex.WR
    26ec:	49                   	rex.WB
    26ed:	4e                   	rex.WRX
    26ee:	45 5f                	rex.RB pop r15
    26f0:	5f                   	pop    rdi
    26f1:	20 31                	and    BYTE PTR [rcx],dh
    26f3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26f6:	46                   	rex.RX
    26f7:	4c 54                	rex.WR push rsp
    26f9:	36 34 5f             	ss xor al,0x5f
    26fc:	4d                   	rex.WRB
    26fd:	41 58                	pop    r8
    26ff:	5f                   	pop    rdi
    2700:	31 30                	xor    DWORD PTR [rax],esi
    2702:	5f                   	pop    rdi
    2703:	45 58                	rex.RB pop r8
    2705:	50                   	push   rax
    2706:	5f                   	pop    rdi
    2707:	5f                   	pop    rdi
    2708:	20 33                	and    BYTE PTR [rbx],dh
    270a:	30 38                	xor    BYTE PTR [rax],bh
    270c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    270f:	46                   	rex.RX
    2710:	4c 54                	rex.WR push rsp
    2712:	5f                   	pop    rdi
    2713:	4d                   	rex.WRB
    2714:	41                   	rex.B
    2715:	4e 54                	rex.WRX push rsp
    2717:	5f                   	pop    rdi
    2718:	44                   	rex.R
    2719:	49                   	rex.WB
    271a:	47 5f                	rex.RXB pop r15
    271c:	5f                   	pop    rdi
    271d:	20 32                	and    BYTE PTR [rdx],dh
    271f:	34 00                	xor    al,0x0

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
   0:	04 00                	add    al,0x0
   2:	02 00                	add    al,BYTE PTR [rax]
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 07                	add    BYTE PTR [rdi],al
   8:	1a 00                	sbb    al,BYTE PTR [rax]
   a:	00 00                	add    BYTE PTR [rax],al
   c:	03 00                	add    eax,DWORD PTR [rax]
   e:	01 03                	add    DWORD PTR [rbx],eax
  10:	1f                   	(bad)  
  11:	02 07                	add    al,BYTE PTR [rdi]
  13:	22 08                	and    cl,BYTE PTR [rax]
  15:	00 00                	add    BYTE PTR [rax],al
  17:	04 04                	add    al,0x4
  19:	00 04 00             	add    BYTE PTR [rax+rax*1],al
  1c:	00 05 00 b4 1c 00    	add    BYTE PTR [rip+0x1cb400],al        # 1cb422 <__FRAME_END__+0x1cab56>
  22:	00 05 00 e7 00 00    	add    BYTE PTR [rip+0xe700],al        # e728 <__FRAME_END__+0xde5c>
  28:	00 05 00 fa 20 00    	add    BYTE PTR [rip+0x20fa00],al        # 20fa2e <_end+0xea16>
  2e:	00 05 00 15 22 00    	add    BYTE PTR [rip+0x221500],al        # 221534 <_end+0x2051c>
  34:	00 05 00 7f 05 00    	add    BYTE PTR [rip+0x57f00],al        # 57f3a <__FRAME_END__+0x5766e>
  3a:	00 05 00 9a 04 00    	add    BYTE PTR [rip+0x49a00],al        # 49a40 <__FRAME_END__+0x49174>
  40:	00 05 00 49 0f 00    	add    BYTE PTR [rip+0xf4900],al        # f4946 <__FRAME_END__+0xf407a>
  46:	00 05 00 86 14 00    	add    BYTE PTR [rip+0x148600],al        # 14864c <__FRAME_END__+0x147d80>
  4c:	00 05 00 dd 0b 00    	add    BYTE PTR [rip+0xbdd00],al        # bdd52 <__FRAME_END__+0xbd486>
  52:	00 05 00 32 1d 00    	add    BYTE PTR [rip+0x1d3200],al        # 1d3258 <__FRAME_END__+0x1d298c>
  58:	00 05 00 42 15 00    	add    BYTE PTR [rip+0x154200],al        # 15425e <__FRAME_END__+0x153992>
  5e:	00 05 00 4b 18 00    	add    BYTE PTR [rip+0x184b00],al        # 184b64 <__FRAME_END__+0x184298>
  64:	00 05 00 9c 14 00    	add    BYTE PTR [rip+0x149c00],al        # 149c6a <__FRAME_END__+0x14939e>
  6a:	00 05 00 f1 24 00    	add    BYTE PTR [rip+0x24f100],al        # 24f170 <_end+0x4e158>
  70:	00 05 00 de 21 00    	add    BYTE PTR [rip+0x21de00],al        # 21de76 <_end+0x1ce5e>
  76:	00 05 00 ef 08 00    	add    BYTE PTR [rip+0x8ef00],al        # 8ef7c <__FRAME_END__+0x8e6b0>
  7c:	00 05 00 a5 0c 00    	add    BYTE PTR [rip+0xca500],al        # ca582 <__FRAME_END__+0xc9cb6>
  82:	00 05 00 04 1c 00    	add    BYTE PTR [rip+0x1c0400],al        # 1c0488 <__FRAME_END__+0x1bfbbc>
  88:	00 05 00 94 17 00    	add    BYTE PTR [rip+0x179400],al        # 17948e <__FRAME_END__+0x178bc2>
  8e:	00 05 00 45 1d 00    	add    BYTE PTR [rip+0x1d4500],al        # 1d4594 <__FRAME_END__+0x1d3cc8>
  94:	00 05 00 f9 08 00    	add    BYTE PTR [rip+0x8f900],al        # 8f99a <__FRAME_END__+0x8f0ce>
  9a:	00 05 00 47 04 00    	add    BYTE PTR [rip+0x44700],al        # 447a0 <__FRAME_END__+0x43ed4>
  a0:	00 05 00 87 15 00    	add    BYTE PTR [rip+0x158700],al        # 1587a6 <__FRAME_END__+0x157eda>
  a6:	00 05 00 4b 09 00    	add    BYTE PTR [rip+0x94b00],al        # 94bac <__FRAME_END__+0x942e0>
  ac:	00 05 00 9a 0d 00    	add    BYTE PTR [rip+0xd9a00],al        # d9ab2 <__FRAME_END__+0xd91e6>
  b2:	00 05 00 8d 12 00    	add    BYTE PTR [rip+0x128d00],al        # 128db8 <__FRAME_END__+0x1284ec>
  b8:	00 05 00 5e 1c 00    	add    BYTE PTR [rip+0x1c5e00],al        # 1c5ebe <__FRAME_END__+0x1c55f2>
  be:	00 05 00 c9 0b 00    	add    BYTE PTR [rip+0xbc900],al        # bc9c4 <__FRAME_END__+0xbc0f8>
  c4:	00 05 00 93 0e 00    	add    BYTE PTR [rip+0xe9300],al        # e93ca <__FRAME_END__+0xe8afe>
  ca:	00 05 00 94 00 00    	add    BYTE PTR [rip+0x9400],al        # 94d0 <__FRAME_END__+0x8c04>
  d0:	00 05 00 d1 22 00    	add    BYTE PTR [rip+0x22d100],al        # 22d1d6 <_end+0x2c1be>
  d6:	00 05 00 6e 15 00    	add    BYTE PTR [rip+0x156e00],al        # 156edc <__FRAME_END__+0x156610>
  dc:	00 05 00 fa 1c 00    	add    BYTE PTR [rip+0x1cfa00],al        # 1cfae2 <__FRAME_END__+0x1cf216>
  e2:	00 05 00 89 11 00    	add    BYTE PTR [rip+0x118900],al        # 1189e8 <__FRAME_END__+0x11811c>
  e8:	00 05 00 bf 1c 00    	add    BYTE PTR [rip+0x1cbf00],al        # 1cbfee <__FRAME_END__+0x1cb722>
  ee:	00 05 00 f5 09 00    	add    BYTE PTR [rip+0x9f500],al        # 9f5f4 <__FRAME_END__+0x9ed28>
  f4:	00 05 00 41 0a 00    	add    BYTE PTR [rip+0xa4100],al        # a41fa <__FRAME_END__+0xa392e>
  fa:	00 05 00 00 01 00    	add    BYTE PTR [rip+0x10000],al        # 10100 <__FRAME_END__+0xf834>
 100:	00 05 00 10 10 00    	add    BYTE PTR [rip+0x101000],al        # 101106 <__FRAME_END__+0x10083a>
 106:	00 05 00 37 0d 00    	add    BYTE PTR [rip+0xd3700],al        # d380c <__FRAME_END__+0xd2f40>
 10c:	00 05 00 04 25 00    	add    BYTE PTR [rip+0x250400],al        # 250512 <_end+0x4f4fa>
 112:	00 05 00 17 1d 00    	add    BYTE PTR [rip+0x1d1700],al        # 1d1818 <__FRAME_END__+0x1d0f4c>
 118:	00 05 00 0c 21 00    	add    BYTE PTR [rip+0x210c00],al        # 210d1e <_end+0xfd06>
 11e:	00 05 00 ee 16 00    	add    BYTE PTR [rip+0x16ee00],al        # 16ef24 <__FRAME_END__+0x16e658>
 124:	00 05 00 97 25 00    	add    BYTE PTR [rip+0x259700],al        # 25982a <_end+0x58812>
 12a:	00 05 00 c9 1b 00    	add    BYTE PTR [rip+0x1bc900],al        # 1bca30 <__FRAME_END__+0x1bc164>
 130:	00 05 00 a9 08 00    	add    BYTE PTR [rip+0x8a900],al        # 8aa36 <__FRAME_END__+0x8a16a>
 136:	00 05 00 92 16 00    	add    BYTE PTR [rip+0x169200],al        # 16933c <__FRAME_END__+0x168a70>
 13c:	00 05 00 11 17 00    	add    BYTE PTR [rip+0x171100],al        # 171242 <__FRAME_END__+0x170976>
 142:	00 05 00 96 08 00    	add    BYTE PTR [rip+0x89600],al        # 89748 <__FRAME_END__+0x88e7c>
 148:	00 05 00 fe 25 00    	add    BYTE PTR [rip+0x25fe00],al        # 25ff4e <_end+0x5ef36>
 14e:	00 05 00 bd 16 00    	add    BYTE PTR [rip+0x16bd00],al        # 16be54 <__FRAME_END__+0x16b588>
 154:	00 05 00 27 22 00    	add    BYTE PTR [rip+0x222700],al        # 22285a <_end+0x21842>
 15a:	00 05 00 f7 07 00    	add    BYTE PTR [rip+0x7f700],al        # 7f860 <__FRAME_END__+0x7ef94>
 160:	00 05 00 54 0c 00    	add    BYTE PTR [rip+0xc5400],al        # c5566 <__FRAME_END__+0xc4c9a>
 166:	00 05 00 0e 1c 00    	add    BYTE PTR [rip+0x1c0e00],al        # 1c0f6c <__FRAME_END__+0x1c06a0>
 16c:	00 05 00 a6 0a 00    	add    BYTE PTR [rip+0xaa600],al        # aa772 <__FRAME_END__+0xa9ea6>
 172:	00 05 00 76 0c 00    	add    BYTE PTR [rip+0xc7600],al        # c7778 <__FRAME_END__+0xc6eac>
 178:	00 05 00 2b 0f 00    	add    BYTE PTR [rip+0xf2b00],al        # f2c7e <__FRAME_END__+0xf23b2>
 17e:	00 05 00 db 25 00    	add    BYTE PTR [rip+0x25db00],al        # 25dc84 <_end+0x5cc6c>
 184:	00 05 00 9e 17 00    	add    BYTE PTR [rip+0x179e00],al        # 179f8a <__FRAME_END__+0x1796be>
 18a:	00 05 00 6b 23 00    	add    BYTE PTR [rip+0x236b00],al        # 236c90 <_end+0x35c78>
 190:	00 05 00 6b 0e 00    	add    BYTE PTR [rip+0xe6b00],al        # e6c96 <__FRAME_END__+0xe63ca>
 196:	00 05 00 c7 17 00    	add    BYTE PTR [rip+0x17c700],al        # 17c89c <__FRAME_END__+0x17bfd0>
 19c:	00 05 00 5b 19 00    	add    BYTE PTR [rip+0x195b00],al        # 195ca2 <__FRAME_END__+0x1953d6>
 1a2:	00 05 00 98 15 00    	add    BYTE PTR [rip+0x159800],al        # 1599a8 <__FRAME_END__+0x1590dc>
 1a8:	00 05 00 49 13 00    	add    BYTE PTR [rip+0x134900],al        # 134aae <__FRAME_END__+0x1341e2>
 1ae:	00 05 00 dc 19 00    	add    BYTE PTR [rip+0x19dc00],al        # 19ddb4 <__FRAME_END__+0x19d4e8>
 1b4:	00 05 00 0b 1f 00    	add    BYTE PTR [rip+0x1f0b00],al        # 1f0cba <__FRAME_END__+0x1f03ee>
 1ba:	00 05 00 5e 18 00    	add    BYTE PTR [rip+0x185e00],al        # 185fc0 <__FRAME_END__+0x1856f4>
 1c0:	00 05 00 ce 09 00    	add    BYTE PTR [rip+0x9ce00],al        # 9cfc6 <__FRAME_END__+0x9c6fa>
 1c6:	00 05 00 a3 11 00    	add    BYTE PTR [rip+0x11a300],al        # 11a4cc <__FRAME_END__+0x119c00>
 1cc:	00 05 00 ff 01 00    	add    BYTE PTR [rip+0x1ff00],al        # 200d2 <__FRAME_END__+0x1f806>
 1d2:	00 05 00 50 21 00    	add    BYTE PTR [rip+0x215000],al        # 2151d8 <_end+0x141c0>
 1d8:	00 05 00 f3 0a 00    	add    BYTE PTR [rip+0xaf300],al        # af4de <__FRAME_END__+0xaec12>
 1de:	00 05 00 a3 22 00    	add    BYTE PTR [rip+0x22a300],al        # 22a4e4 <_end+0x294cc>
 1e4:	00 05 00 dd 0e 00    	add    BYTE PTR [rip+0xedd00],al        # edeea <__FRAME_END__+0xed61e>
 1ea:	00 05 00 3e 1c 00    	add    BYTE PTR [rip+0x1c3e00],al        # 1c3ff0 <__FRAME_END__+0x1c3724>
 1f0:	00 05 00 d1 13 00    	add    BYTE PTR [rip+0x13d100],al        # 13d2f6 <__FRAME_END__+0x13ca2a>
 1f6:	00 05 00 bc 11 00    	add    BYTE PTR [rip+0x11bc00],al        # 11bdfc <__FRAME_END__+0x11b530>
 1fc:	00 05 00 cb 0f 00    	add    BYTE PTR [rip+0xfcb00],al        # fcd02 <__FRAME_END__+0xfc436>
 202:	00 05 00 96 1c 00    	add    BYTE PTR [rip+0x1c9600],al        # 1c9808 <__FRAME_END__+0x1c8f3c>
 208:	00 05 00 3d 1b 00    	add    BYTE PTR [rip+0x1b3d00],al        # 1b3f0e <__FRAME_END__+0x1b3642>
 20e:	00 05 00 8f 06 00    	add    BYTE PTR [rip+0x68f00],al        # 69114 <__FRAME_END__+0x68848>
 214:	00 05 00 91 05 00    	add    BYTE PTR [rip+0x59100],al        # 5931a <__FRAME_END__+0x58a4e>
 21a:	00 05 00 9d 1e 00    	add    BYTE PTR [rip+0x1e9d00],al        # 1e9f20 <__FRAME_END__+0x1e9654>
 220:	00 05 00 0c 11 00    	add    BYTE PTR [rip+0x110c00],al        # 110e26 <__FRAME_END__+0x11055a>
 226:	00 05 00 fe 06 00    	add    BYTE PTR [rip+0x6fe00],al        # 7002c <__FRAME_END__+0x6f760>
 22c:	00 05 00 6f 08 00    	add    BYTE PTR [rip+0x86f00],al        # 87132 <__FRAME_END__+0x86866>
 232:	00 05 00 ac 16 00    	add    BYTE PTR [rip+0x16ac00],al        # 16ae38 <__FRAME_END__+0x16a56c>
 238:	00 05 00 ff 1a 00    	add    BYTE PTR [rip+0x1aff00],al        # 1b013e <__FRAME_END__+0x1af872>
 23e:	00 05 00 10 20 00    	add    BYTE PTR [rip+0x201000],al        # 201244 <_end+0x22c>
 244:	00 05 00 15 01 00    	add    BYTE PTR [rip+0x11500],al        # 1174a <__FRAME_END__+0x10e7e>
 24a:	00 05 00 42 0c 00    	add    BYTE PTR [rip+0xc4200],al        # c4450 <__FRAME_END__+0xc3b84>
 250:	00 05 00 c8 0e 00    	add    BYTE PTR [rip+0xec800],al        # eca56 <__FRAME_END__+0xec18a>
 256:	00 05 00 11 1b 00    	add    BYTE PTR [rip+0x1b1100],al        # 1b135c <__FRAME_END__+0x1b0a90>
 25c:	00 05 00 28 18 00    	add    BYTE PTR [rip+0x182800],al        # 182a62 <__FRAME_END__+0x182196>
 262:	00 05 00 eb 0c 00    	add    BYTE PTR [rip+0xceb00],al        # ced68 <__FRAME_END__+0xce49c>
 268:	00 05 00 cc 23 00    	add    BYTE PTR [rip+0x23cc00],al        # 23ce6e <_end+0x3be56>
 26e:	00 05 00 8c 22 00    	add    BYTE PTR [rip+0x228c00],al        # 228e74 <_end+0x27e5c>
 274:	00 05 00 da 16 00    	add    BYTE PTR [rip+0x16da00],al        # 16dc7a <__FRAME_END__+0x16d3ae>
 27a:	00 05 00 cc 1e 00    	add    BYTE PTR [rip+0x1ecc00],al        # 1ece80 <__FRAME_END__+0x1ec5b4>
 280:	00 05 00 e0 22 00    	add    BYTE PTR [rip+0x22e000],al        # 22e286 <_end+0x2d26e>
 286:	00 05 00 b8 1f 00    	add    BYTE PTR [rip+0x1fb800],al        # 1fba8c <__FRAME_END__+0x1fb1c0>
 28c:	00 05 00 58 24 00    	add    BYTE PTR [rip+0x245800],al        # 245a92 <_end+0x44a7a>
 292:	00 05 00 e5 15 00    	add    BYTE PTR [rip+0x15e500],al        # 15e798 <__FRAME_END__+0x15decc>
 298:	00 05 00 90 19 00    	add    BYTE PTR [rip+0x199000],al        # 19929e <__FRAME_END__+0x1989d2>
 29e:	00 05 00 3a 1e 00    	add    BYTE PTR [rip+0x1e3a00],al        # 1e3ca4 <__FRAME_END__+0x1e33d8>
 2a4:	00 05 00 2f 0c 00    	add    BYTE PTR [rip+0xc2f00],al        # c31aa <__FRAME_END__+0xc28de>
 2aa:	00 05 00 9d 09 00    	add    BYTE PTR [rip+0x99d00],al        # 99fb0 <__FRAME_END__+0x996e4>
 2b0:	00 05 00 44 26 00    	add    BYTE PTR [rip+0x264400],al        # 2646b6 <_end+0x6369e>
 2b6:	00 05 00 f1 21 00    	add    BYTE PTR [rip+0x21f100],al        # 21f3bc <_end+0x1e3a4>
 2bc:	00 05 00 7b 26 00    	add    BYTE PTR [rip+0x267b00],al        # 267dc2 <_end+0x66daa>
 2c2:	00 05 00 8c 0d 00    	add    BYTE PTR [rip+0xd8c00],al        # d8ec8 <__FRAME_END__+0xd85fc>
 2c8:	00 05 00 48 06 00    	add    BYTE PTR [rip+0x64800],al        # 64ace <__FRAME_END__+0x64202>
 2ce:	00 05 00 b4 1a 00    	add    BYTE PTR [rip+0x1ab400],al        # 1ab6d4 <__FRAME_END__+0x1aae08>
 2d4:	00 05 00 0d 13 00    	add    BYTE PTR [rip+0x130d00],al        # 130fda <__FRAME_END__+0x13070e>
 2da:	00 05 00 01 09 00    	add    BYTE PTR [rip+0x90100],al        # 903e0 <__FRAME_END__+0x8fb14>
 2e0:	00 05 00 9d 18 00    	add    BYTE PTR [rip+0x189d00],al        # 189fe6 <__FRAME_END__+0x18971a>
 2e6:	00 05 00 c2 04 00    	add    BYTE PTR [rip+0x4c200],al        # 4c4ec <__FRAME_END__+0x4bc20>
 2ec:	00 05 00 85 03 00    	add    BYTE PTR [rip+0x38500],al        # 387f2 <__FRAME_END__+0x37f26>
 2f2:	00 05 00 5e 14 00    	add    BYTE PTR [rip+0x145e00],al        # 1460f8 <__FRAME_END__+0x14582c>
 2f8:	00 05 00 08 0e 00    	add    BYTE PTR [rip+0xe0800],al        # e0afe <__FRAME_END__+0xe0232>
 2fe:	00 05 00 16 26 00    	add    BYTE PTR [rip+0x261600],al        # 261904 <_end+0x608ec>
 304:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 30a <_init-0x206>
 30a:	00 05 00 ba 25 00    	add    BYTE PTR [rip+0x25ba00],al        # 25bd10 <_end+0x5acf8>
 310:	00 05 00 6e 0a 00    	add    BYTE PTR [rip+0xa6e00],al        # a7116 <__FRAME_END__+0xa684a>
 316:	00 05 00 2e 1c 00    	add    BYTE PTR [rip+0x1c2e00],al        # 1c311c <__FRAME_END__+0x1c2850>
 31c:	00 05 00 73 00 00    	add    BYTE PTR [rip+0x7300],al        # 7622 <__FRAME_END__+0x6d56>
 322:	00 05 00 65 22 00    	add    BYTE PTR [rip+0x226500],al        # 226828 <_end+0x25810>
 328:	00 05 00 2e 11 00    	add    BYTE PTR [rip+0x112e00],al        # 11312e <__FRAME_END__+0x112862>
 32e:	00 05 00 52 04 00    	add    BYTE PTR [rip+0x45200],al        # 45534 <__FRAME_END__+0x44c68>
 334:	00 05 00 e0 07 00    	add    BYTE PTR [rip+0x7e000],al        # 7e33a <__FRAME_END__+0x7da6e>
 33a:	00 05 00 28 25 00    	add    BYTE PTR [rip+0x252800],al        # 252b40 <_end+0x51b28>
 340:	00 05 00 8d 1a 00    	add    BYTE PTR [rip+0x1a8d00],al        # 1a9046 <__FRAME_END__+0x1a877a>
 346:	00 05 00 4c 1f 00    	add    BYTE PTR [rip+0x1f4c00],al        # 1f4f4c <__FRAME_END__+0x1f4680>
 34c:	00 05 00 d0 1f 00    	add    BYTE PTR [rip+0x1fd000],al        # 1fd352 <__FRAME_END__+0x1fca86>
 352:	00 05 00 dd 11 00    	add    BYTE PTR [rip+0x11dd00],al        # 11e058 <__FRAME_END__+0x11d78c>
 358:	00 05 00 58 11 00    	add    BYTE PTR [rip+0x115800],al        # 115b5e <__FRAME_END__+0x115292>
 35e:	00 05 00 0d 23 00    	add    BYTE PTR [rip+0x230d00],al        # 231064 <_end+0x3004c>
 364:	00 05 00 6a 24 00    	add    BYTE PTR [rip+0x246a00],al        # 246d6a <_end+0x45d52>
 36a:	00 05 00 1c 0e 00    	add    BYTE PTR [rip+0xe1c00],al        # e1f70 <__FRAME_END__+0xe16a4>
 370:	00 05 00 c2 1d 00    	add    BYTE PTR [rip+0x1dc200],al        # 1dc576 <__FRAME_END__+0x1dbcaa>
 376:	00 05 00 cb 01 00    	add    BYTE PTR [rip+0x1cb00],al        # 1ce7c <__FRAME_END__+0x1c5b0>
 37c:	00 05 00 25 0b 00    	add    BYTE PTR [rip+0xb2500],al        # b2882 <__FRAME_END__+0xb1fb6>
 382:	00 05 00 6b 05 00    	add    BYTE PTR [rip+0x56b00],al        # 56e88 <__FRAME_END__+0x565bc>
 388:	00 05 00 9e 03 00    	add    BYTE PTR [rip+0x39e00],al        # 3a18e <__FRAME_END__+0x398c2>
 38e:	00 05 00 b2 1d 00    	add    BYTE PTR [rip+0x1db200],al        # 1db594 <__FRAME_END__+0x1dacc8>
 394:	00 05 00 60 10 00    	add    BYTE PTR [rip+0x106000],al        # 10639a <__FRAME_END__+0x105ace>
 39a:	00 05 00 12 18 00    	add    BYTE PTR [rip+0x181200],al        # 1815a0 <__FRAME_END__+0x180cd4>
 3a0:	00 05 00 a1 05 00    	add    BYTE PTR [rip+0x5a100],al        # 5a4a6 <__FRAME_END__+0x59bda>
 3a6:	00 05 00 99 0f 00    	add    BYTE PTR [rip+0xf9900],al        # f9cac <__FRAME_END__+0xf93e0>
 3ac:	00 05 00 7b 1f 00    	add    BYTE PTR [rip+0x1f7b00],al        # 1f7eb2 <__FRAME_END__+0x1f75e6>
 3b2:	00 05 00 0d 27 00    	add    BYTE PTR [rip+0x270d00],al        # 2710b8 <_end+0x700a0>
 3b8:	00 05 00 b1 0d 00    	add    BYTE PTR [rip+0xdb100],al        # db4be <__FRAME_END__+0xdabf2>
 3be:	00 05 00 ab 10 00    	add    BYTE PTR [rip+0x10ab00],al        # 10aec4 <__FRAME_END__+0x10a5f8>
 3c4:	00 05 00 9a 24 00    	add    BYTE PTR [rip+0x249a00],al        # 249dca <_end+0x48db2>
 3ca:	00 05 00 df 0a 00    	add    BYTE PTR [rip+0xadf00],al        # ae2d0 <__FRAME_END__+0xada04>
 3d0:	00 05 00 45 0e 00    	add    BYTE PTR [rip+0xe4500],al        # e48d6 <__FRAME_END__+0xe400a>
 3d6:	00 05 00 2c 15 00    	add    BYTE PTR [rip+0x152c00],al        # 152fdc <__FRAME_END__+0x152710>
 3dc:	00 05 00 f5 18 00    	add    BYTE PTR [rip+0x18f500],al        # 18f8e2 <__FRAME_END__+0x18f016>
 3e2:	00 05 00 a0 12 00    	add    BYTE PTR [rip+0x12a000],al        # 12a3e8 <__FRAME_END__+0x129b1c>
 3e8:	00 05 00 81 20 00    	add    BYTE PTR [rip+0x208100],al        # 2084ee <_end+0x74d6>
 3ee:	00 05 00 72 0b 00    	add    BYTE PTR [rip+0xb7200],al        # b75f4 <__FRAME_END__+0xb6d28>
 3f4:	00 05 00 5d 09 00    	add    BYTE PTR [rip+0x95d00],al        # 960fa <__FRAME_END__+0x9582e>
 3fa:	00 05 00 a1 1f 00    	add    BYTE PTR [rip+0x1fa100],al        # 1fa500 <__FRAME_END__+0x1f9c34>
 400:	00 05 00 78 10 00    	add    BYTE PTR [rip+0x107800],al        # 107c06 <__FRAME_END__+0x10733a>
 406:	00 05 00 4c 07 00    	add    BYTE PTR [rip+0x74c00],al        # 7500c <__FRAME_END__+0x74740>
 40c:	00 05 00 5f 06 00    	add    BYTE PTR [rip+0x65f00],al        # 66312 <__FRAME_END__+0x65a46>
 412:	00 05 00 d7 08 00    	add    BYTE PTR [rip+0x8d700],al        # 8db18 <__FRAME_END__+0x8d24c>
 418:	00 05 00 aa 26 00    	add    BYTE PTR [rip+0x26aa00],al        # 26ae1e <_end+0x69e06>
 41e:	00 05 00 e6 17 00    	add    BYTE PTR [rip+0x17e600],al        # 17ea24 <__FRAME_END__+0x17e158>
 424:	00 05 00 ee 02 00    	add    BYTE PTR [rip+0x2ee00],al        # 2f22a <__FRAME_END__+0x2e95e>
 42a:	00 05 00 ca 14 00    	add    BYTE PTR [rip+0x14ca00],al        # 14ce30 <__FRAME_END__+0x14c564>
 430:	00 05 00 16 24 00    	add    BYTE PTR [rip+0x241600],al        # 241a36 <_end+0x40a1e>
 436:	00 05 00 89 01 00    	add    BYTE PTR [rip+0x18900],al        # 18d3c <__FRAME_END__+0x18470>
 43c:	00 05 00 03 06 00    	add    BYTE PTR [rip+0x60300],al        # 60742 <__FRAME_END__+0x5fe76>
 442:	00 05 00 bf 0d 00    	add    BYTE PTR [rip+0xdbf00],al        # dc348 <__FRAME_END__+0xdba7c>
 448:	00 05 00 8e 23 00    	add    BYTE PTR [rip+0x238e00],al        # 23924e <_end+0x38236>
 44e:	00 05 00 68 04 00    	add    BYTE PTR [rip+0x46800],al        # 46c54 <__FRAME_END__+0x46388>
 454:	00 05 00 82 24 00    	add    BYTE PTR [rip+0x248200],al        # 24865a <_end+0x47642>
 45a:	00 05 00 3b 21 00    	add    BYTE PTR [rip+0x213b00],al        # 213f60 <_end+0x12f48>
 460:	00 05 00 2f 26 00    	add    BYTE PTR [rip+0x262f00],al        # 263366 <_end+0x6234e>
 466:	00 05 00 30 10 00    	add    BYTE PTR [rip+0x103000],al        # 10346c <__FRAME_END__+0x102ba0>
 46c:	00 05 00 53 08 00    	add    BYTE PTR [rip+0x85300],al        # 85772 <__FRAME_END__+0x84ea6>
 472:	00 05 00 85 1b 00    	add    BYTE PTR [rip+0x1b8500],al        # 1b8978 <__FRAME_END__+0x1b80ac>
 478:	00 05 00 3a 02 00    	add    BYTE PTR [rip+0x23a00],al        # 23e7e <__FRAME_END__+0x235b2>
 47e:	00 05 00 36 13 00    	add    BYTE PTR [rip+0x133600],al        # 133a84 <__FRAME_END__+0x1331b8>
 484:	00 05 00 b5 15 00    	add    BYTE PTR [rip+0x15b500],al        # 15b98a <__FRAME_END__+0x15b0be>
 48a:	00 05 00 53 12 00    	add    BYTE PTR [rip+0x125300],al        # 125790 <__FRAME_END__+0x124ec4>
 490:	00 05 00 4b 03 00    	add    BYTE PTR [rip+0x34b00],al        # 34f96 <__FRAME_END__+0x346ca>
 496:	00 05 00 10 07 00    	add    BYTE PTR [rip+0x71000],al        # 7149c <__FRAME_END__+0x70bd0>
 49c:	00 05 00 c2 05 00    	add    BYTE PTR [rip+0x5c200],al        # 5c6a2 <__FRAME_END__+0x5bdd6>
 4a2:	00 05 00 25 21 00    	add    BYTE PTR [rip+0x212500],al        # 2129a8 <_end+0x11990>
 4a8:	00 05 00 33 09 00    	add    BYTE PTR [rip+0x93300],al        # 937ae <__FRAME_END__+0x92ee2>
 4ae:	00 05 00 b0 0b 00    	add    BYTE PTR [rip+0xbb000],al        # bb4b4 <__FRAME_END__+0xbabe8>
 4b4:	00 05 00 4a 10 00    	add    BYTE PTR [rip+0x104a00],al        # 104eba <__FRAME_END__+0x1045ee>
 4ba:	00 05 00 47 00 00    	add    BYTE PTR [rip+0x4700],al        # 4bc0 <__FRAME_END__+0x42f4>
 4c0:	00 05 00 7e 25 00    	add    BYTE PTR [rip+0x257e00],al        # 2582c6 <_end+0x572ae>
 4c6:	00 05 00 af 14 00    	add    BYTE PTR [rip+0x14af00],al        # 14b3cc <__FRAME_END__+0x14ab00>
 4cc:	00 05 00 8f 0c 00    	add    BYTE PTR [rip+0xc8f00],al        # c93d2 <__FRAME_END__+0xc8b06>
 4d2:	00 05 00 3b 12 00    	add    BYTE PTR [rip+0x123b00],al        # 123fd8 <__FRAME_END__+0x12370c>
 4d8:	00 05 00 85 18 00    	add    BYTE PTR [rip+0x188500],al        # 1889de <__FRAME_END__+0x188112>
 4de:	00 05 00 51 0d 00    	add    BYTE PTR [rip+0xd5100],al        # d55e4 <__FRAME_END__+0xd4d18>
 4e4:	00 05 00 f0 0e 00    	add    BYTE PTR [rip+0xef000],al        # ef4ea <__FRAME_END__+0xeec1e>
 4ea:	00 05 00 60 07 00    	add    BYTE PTR [rip+0x76000],al        # 764f0 <__FRAME_END__+0x75c24>
 4f0:	00 05 00 9e 07 00    	add    BYTE PTR [rip+0x79e00],al        # 7a2f6 <__FRAME_END__+0x79a2a>
 4f6:	00 05 00 64 1f 00    	add    BYTE PTR [rip+0x1f6400],al        # 1f68fc <__FRAME_END__+0x1f6030>
 4fc:	00 05 00 1a 09 00    	add    BYTE PTR [rip+0x91a00],al        # 91f02 <__FRAME_END__+0x91636>
 502:	00 05 00 c5 0a 00    	add    BYTE PTR [rip+0xac500],al        # aca08 <__FRAME_END__+0xac13c>
 508:	00 05 00 8b 1f 00    	add    BYTE PTR [rip+0x1f8b00],al        # 1f900e <__FRAME_END__+0x1f8742>
 50e:	00 05 00 bb 23 00    	add    BYTE PTR [rip+0x23bb00],al        # 23c014 <_end+0x3affc>
 514:	00 05 00 d1 0c 00    	add    BYTE PTR [rip+0xcd100],al        # cd61a <__FRAME_END__+0xccd4e>
 51a:	00 05 00 c0 19 00    	add    BYTE PTR [rip+0x19c000],al        # 19c520 <__FRAME_END__+0x19bc54>
 520:	00 05 00 af 0c 00    	add    BYTE PTR [rip+0xcaf00],al        # cb426 <__FRAME_END__+0xcab5a>
 526:	00 05 00 f4 26 00    	add    BYTE PTR [rip+0x26f400],al        # 26f92c <_end+0x6e914>
 52c:	00 05 00 f7 1f 00    	add    BYTE PTR [rip+0x1ff700],al        # 1ffc32 <__FRAME_END__+0x1ff366>
 532:	00 05 00 69 02 00    	add    BYTE PTR [rip+0x26900],al        # 26e38 <__FRAME_END__+0x2656c>
 538:	00 05 00 05 03 00    	add    BYTE PTR [rip+0x30500],al        # 30a3e <__FRAME_END__+0x30172>
 53e:	00 05 00 14 08 00    	add    BYTE PTR [rip+0x81400],al        # 81944 <__FRAME_END__+0x81078>
 544:	00 05 00 27 20 00    	add    BYTE PTR [rip+0x202700],al        # 202c4a <_end+0x1c32>
 54a:	00 05 00 19 00 00    	add    BYTE PTR [rip+0x1900],al        # 1e50 <__FRAME_END__+0x1584>
 550:	00 05 00 f4 12 00    	add    BYTE PTR [rip+0x12f400],al        # 12f956 <__FRAME_END__+0x12f08a>
 556:	00 05 00 b3 06 00    	add    BYTE PTR [rip+0x6b300],al        # 6b85c <__FRAME_END__+0x6af90>
 55c:	00 05 00 a3 23 00    	add    BYTE PTR [rip+0x23a300],al        # 23a862 <_end+0x3984a>
 562:	00 05 00 c9 25 00    	add    BYTE PTR [rip+0x25c900],al        # 25ce68 <_end+0x5be50>
 568:	00 05 00 72 09 00    	add    BYTE PTR [rip+0x97200],al        # 9776e <__FRAME_END__+0x96ea2>
 56e:	00 05 00 b3 13 00    	add    BYTE PTR [rip+0x13b300],al        # 13b874 <__FRAME_END__+0x13afa8>
 574:	00 05 00 3a 16 00    	add    BYTE PTR [rip+0x163a00],al        # 163f7a <__FRAME_END__+0x1636ae>
 57a:	00 05 00 3e 25 00    	add    BYTE PTR [rip+0x253e00],al        # 254380 <_end+0x53368>
 580:	00 05 00 23 1b 00    	add    BYTE PTR [rip+0x1b2300],al        # 1b2886 <__FRAME_END__+0x1b1fba>
 586:	00 05 00 53 16 00    	add    BYTE PTR [rip+0x165300],al        # 16588c <__FRAME_END__+0x164fc0>
 58c:	00 05 00 1f 14 00    	add    BYTE PTR [rip+0x141f00],al        # 142492 <__FRAME_END__+0x141bc6>
 592:	00 05 00 12 05 00    	add    BYTE PTR [rip+0x51200],al        # 51798 <__FRAME_END__+0x50ecc>
 598:	00 05 00 25 23 00    	add    BYTE PTR [rip+0x232500],al        # 232a9e <_end+0x31a86>
 59e:	00 05 00 e8 13 00    	add    BYTE PTR [rip+0x13e800],al        # 13eda4 <__FRAME_END__+0x13e4d8>
 5a4:	00 05 00 d4 02 00    	add    BYTE PTR [rip+0x2d400],al        # 2d9aa <__FRAME_END__+0x2d0de>
 5aa:	00 05 00 7f 04 00    	add    BYTE PTR [rip+0x47f00],al        # 484b0 <__FRAME_END__+0x47be4>
 5b0:	00 05 00 fb 17 00    	add    BYTE PTR [rip+0x17fb00],al        # 1800b6 <__FRAME_END__+0x17f7ea>
 5b6:	00 05 00 ae 1b 00    	add    BYTE PTR [rip+0x1bae00],al        # 1bb3bc <__FRAME_END__+0x1baaf0>
 5bc:	00 05 00 26 0a 00    	add    BYTE PTR [rip+0xa2600],al        # a2bc2 <__FRAME_END__+0xa22f6>
 5c2:	00 05 00 a5 04 00    	add    BYTE PTR [rip+0x4a500],al        # 4aac8 <__FRAME_END__+0x4a1fc>
 5c8:	00 05 00 22 02 00    	add    BYTE PTR [rip+0x22200],al        # 227ce <__FRAME_END__+0x21f02>
 5ce:	00 05 00 58 0b 00    	add    BYTE PTR [rip+0xb5800],al        # b5dd4 <__FRAME_END__+0xb5508>
 5d4:	00 05 00 41 19 00    	add    BYTE PTR [rip+0x194100],al        # 1946da <__FRAME_END__+0x193e0e>
 5da:	00 05 00 f1 0b 00    	add    BYTE PTR [rip+0xbf100],al        # bf6e0 <__FRAME_END__+0xbee14>
 5e0:	00 05 00 ce 10 00    	add    BYTE PTR [rip+0x10ce00],al        # 10d3e6 <__FRAME_END__+0x10cb1a>
 5e6:	00 05 00 d1 04 00    	add    BYTE PTR [rip+0x4d100],al        # 4d6ec <__FRAME_END__+0x4ce20>
 5ec:	00 05 00 eb 1d 00    	add    BYTE PTR [rip+0x1deb00],al        # 1df0f2 <__FRAME_END__+0x1de826>
 5f2:	00 05 00 c6 00 00    	add    BYTE PTR [rip+0xc600],al        # cbf8 <__FRAME_END__+0xc32c>
 5f8:	00 05 00 32 1f 00    	add    BYTE PTR [rip+0x1f3200],al        # 1f37fe <__FRAME_END__+0x1f2f32>
 5fe:	00 05 00 a5 02 00    	add    BYTE PTR [rip+0x2a500],al        # 2ab04 <__FRAME_END__+0x2a238>
 604:	00 05 00 30 00 00    	add    BYTE PTR [rip+0x3000],al        # 360a <__FRAME_END__+0x2d3e>
 60a:	00 05 00 9c 1b 00    	add    BYTE PTR [rip+0x1b9c00],al        # 1ba210 <__FRAME_END__+0x1b9944>
 610:	00 05 00 57 00 00    	add    BYTE PTR [rip+0x5700],al        # 5d16 <__FRAME_END__+0x544a>
 616:	00 05 00 e6 1b 00    	add    BYTE PTR [rip+0x1be600],al        # 1bec1c <__FRAME_END__+0x1be350>
 61c:	00 05 00 cf 1a 00    	add    BYTE PTR [rip+0x1acf00],al        # 1ad522 <__FRAME_END__+0x1acc56>
 622:	00 05 00 4a 22 00    	add    BYTE PTR [rip+0x224a00],al        # 225028 <_end+0x24010>
 628:	00 05 00 d7 24 00    	add    BYTE PTR [rip+0x24d700],al        # 24dd2e <_end+0x4cd16>
 62e:	00 05 00 bb 20 00    	add    BYTE PTR [rip+0x20bb00],al        # 20c134 <_end+0xb11c>
 634:	00 05 00 5a 0f 00    	add    BYTE PTR [rip+0xf5a00],al        # f603a <__FRAME_END__+0xf576e>
 63a:	00 05 00 5c 1e 00    	add    BYTE PTR [rip+0x1e5c00],al        # 1e6240 <__FRAME_END__+0x1e5974>
 640:	00 05 00 f5 11 00    	add    BYTE PTR [rip+0x11f500],al        # 11fb46 <__FRAME_END__+0x11f27a>
 646:	00 05 00 53 05 00    	add    BYTE PTR [rip+0x55300],al        # 5594c <__FRAME_END__+0x55080>
 64c:	00 05 00 1c 13 00    	add    BYTE PTR [rip+0x131c00],al        # 132252 <__FRAME_END__+0x131986>
 652:	00 05 00 b3 09 00    	add    BYTE PTR [rip+0x9b300],al        # 9b958 <__FRAME_END__+0x9b08c>
 658:	00 05 00 73 1d 00    	add    BYTE PTR [rip+0x1d7300],al        # 1d795e <__FRAME_END__+0x1d7092>
 65e:	00 05 00 78 19 00    	add    BYTE PTR [rip+0x197800],al        # 197e64 <__FRAME_END__+0x197598>
 664:	00 05 00 81 08 00    	add    BYTE PTR [rip+0x88100],al        # 8876a <__FRAME_END__+0x87e9e>
void test_function(int a, int b, int c, int d) {
 66a:	00 05 00 53 02 00    	add    BYTE PTR [rip+0x25300],al        # 25970 <__FRAME_END__+0x250a4>
 670:	00 05 00 af 0f 00    	add    BYTE PTR [rip+0xfaf00],al        # fb576 <__FRAME_END__+0xfacaa>
 676:	00 05 00 9a 21 00    	add    BYTE PTR [rip+0x219a00],al        # 21a07c <_end+0x19064>
 67c:	00 05 00 8c 13 00    	add    BYTE PTR [rip+0x138c00],al        # 139282 <__FRAME_END__+0x1389b6>
 682:	00 05 00 5a 01 00    	add    BYTE PTR [rip+0x15a00],al        # 16088 <__FRAME_END__+0x157bc>
 688:	00 05 00 70 01 00    	add    BYTE PTR [rip+0x17000],al        # 1768e <__FRAME_END__+0x16dc2>
	flag = 31337;
 68e:	00 05 00 c1 08 00    	add    BYTE PTR [rip+0x8c100],al        # 8c794 <__FRAME_END__+0x8bec8>
	buffer[0] = 'A';
 694:	00 05 00 93 26 00    	add    BYTE PTR [rip+0x269300],al        # 26999a <_end+0x68982>
}
 69a:	00 05 00 66 13 00    	add    BYTE PTR [rip+0x136600],al        # 136ca0 <__FRAME_END__+0x1363d4>
 6a0:	00 05 00 88 1d 00    	add    BYTE PTR [rip+0x1d8800],al        # 1d8ea6 <__FRAME_END__+0x1d85da>
 6a6:	00 05 00 cd 06 00    	add    BYTE PTR [rip+0x6cd00],al        # 6d3ac <__FRAME_END__+0x6cae0>
 6ac:	00 05 00 e8 1a 00    	add    BYTE PTR [rip+0x1ae800],al        # 1aeeb2 <__FRAME_END__+0x1ae5e6>
int main() {
 6b2:	00 05 00 28 01 00    	add    BYTE PTR [rip+0x12800],al        # 12eb8 <__FRAME_END__+0x125ec>
	test_function(1, 2, 3, 4);
 6b8:	00 05 00 cd 15 00    	add    BYTE PTR [rip+0x15cd00],al        # 15d3be <__FRAME_END__+0x15caf2>
 6be:	00 05 00 55 15 00    	add    BYTE PTR [rip+0x155500],al        # 155bc4 <__FRAME_END__+0x1552f8>
 6c4:	00 05 00 49 17 00    	add    BYTE PTR [rip+0x174900],al        # 174fca <__FRAME_END__+0x1746fe>
 6ca:	00 05 00 da 18 00    	add    BYTE PTR [rip+0x18da00],al        # 18e0d0 <__FRAME_END__+0x18d804>
 6d0:	00 05 00 11 1a 00    	add    BYTE PTR [rip+0x1a1100],al        # 1a17d6 <__FRAME_END__+0x1a0f0a>
 6d6:	00 05 00 c9 21 00    	add    BYTE PTR [rip+0x21c900],al        # 21cfdc <_end+0x1bfc4>
 6dc:	00 05 00 59 25 00    	add    BYTE PTR [rip+0x255900],al        # 255fe2 <_end+0x54fca>
 6e2:	00 05 00 dd 26 00    	add    BYTE PTR [rip+0x26dd00],al        # 26e3e8 <_end+0x6d3d0>
 6e8:	00 05 00 5b 0e 00    	add    BYTE PTR [rip+0xe5b00],al        # e61ee <__FRAME_END__+0xe5922>
 6ee:	00 05 00 f1 23 00    	add    BYTE PTR [rip+0x23f100],al        # 23f7f4 <_end+0x3e7dc>
 6f4:	00 05 00 60 1b 00    	add    BYTE PTR [rip+0x1b6000],al        # 1b66fa <__FRAME_END__+0x1b5e2e>
 6fa:	00 05 00 fa 15 00    	add    BYTE PTR [rip+0x15fa00],al        # 160100 <__FRAME_END__+0x15f834>
 700:	00 05 00 71 1c 00    	add    BYTE PTR [rip+0x1c7100],al        # 1c7806 <__FRAME_END__+0x1c6f3a>
 706:	00 05 00 f2 0f 00    	add    BYTE PTR [rip+0xff200],al        # ff90c <__FRAME_END__+0xff040>
 70c:	00 05 00 bc 18 00    	add    BYTE PTR [rip+0x18bc00],al        # 18c312 <__FRAME_END__+0x18ba46>
 712:	00 05 00 78 21 00    	add    BYTE PTR [rip+0x217800],al        # 217f18 <_end+0x16f00>
 718:	00 05 00 00 0d 00    	add    BYTE PTR [rip+0xd0000],al        # d071e <__FRAME_END__+0xcfe52>
 71e:	00 05 00 6e 06 00    	add    BYTE PTR [rip+0x66e00],al        # 67524 <__FRAME_END__+0x66c58>
 724:	00 05 00 2a 17 00    	add    BYTE PTR [rip+0x172a00],al        # 17312a <__FRAME_END__+0x17285e>
 72a:	00 05 00 d7 12 00    	add    BYTE PTR [rip+0x12d700],al        # 12de30 <__FRAME_END__+0x12d564>
 730:	00 05 00 a8 00 00    	add    BYTE PTR [rip+0xa800],al        # af36 <__FRAME_END__+0xa66a>
 736:	00 05 00 00 14 00    	add    BYTE PTR [rip+0x140000],al        # 14073c <__FRAME_END__+0x13fe70>
 73c:	00 05 00 b3 24 00    	add    BYTE PTR [rip+0x24b300],al        # 24ba42 <_end+0x4aa2a>
 742:	00 05 00 d9 1c 00    	add    BYTE PTR [rip+0x1cd900],al        # 1ce048 <__FRAME_END__+0x1cd77c>
 748:	00 05 00 5f 26 00    	add    BYTE PTR [rip+0x265f00],al        # 26664e <_end+0x65636>
 74e:	00 05 00 8a 0a 00    	add    BYTE PTR [rip+0xa8a00],al        # a9154 <__FRAME_END__+0xa8888>
 754:	00 05 00 83 17 00    	add    BYTE PTR [rip+0x178300],al        # 178a5a <__FRAME_END__+0x17818e>
 75a:	00 05 00 22 0d 00    	add    BYTE PTR [rip+0xd2200],al        # d2960 <__FRAME_END__+0xd2094>
 760:	00 05 00 2c 19 00    	add    BYTE PTR [rip+0x192c00],al        # 193366 <__FRAME_END__+0x192a9a>
 766:	00 05 00 c0 02 00    	add    BYTE PTR [rip+0x2c000],al        # 2c76c <__FRAME_END__+0x2bea0>
 76c:	00 05 00 ba 22 00    	add    BYTE PTR [rip+0x22ba00],al        # 22c172 <_end+0x2b15a>
 772:	00 05 00 41 03 00    	add    BYTE PTR [rip+0x34100],al        # 34878 <__FRAME_END__+0x33fac>
 778:	00 05 00 52 1c 00    	add    BYTE PTR [rip+0x1c5200],al        # 1c597e <__FRAME_END__+0x1c50b2>
 77e:	00 05 00 ea 1e 00    	add    BYTE PTR [rip+0x1eea00],al        # 1ef184 <__FRAME_END__+0x1ee8b8>
 784:	00 05 00 66 1d 00    	add    BYTE PTR [rip+0x1d6600],al        # 1d6d8a <__FRAME_END__+0x1d64be>
 78a:	00 05 00 b3 21 00    	add    BYTE PTR [rip+0x21b300],al        # 21ba90 <_end+0x1aa78>
 790:	00 05 00 a9 19 00    	add    BYTE PTR [rip+0x19a900],al        # 19b096 <__FRAME_END__+0x19a7ca>
 796:	00 05 00 56 1a 00    	add    BYTE PTR [rip+0x1a5600],al        # 1a5d9c <__FRAME_END__+0x1a54d0>
 79c:	00 05 00 71 1a 00    	add    BYTE PTR [rip+0x1a7100],al        # 1a78a2 <__FRAME_END__+0x1a6fd6>
 7a2:	00 05 00 1f 16 00    	add    BYTE PTR [rip+0x161f00],al        # 1626a8 <__FRAME_END__+0x161ddc>
 7a8:	00 05 00 7a 22 00    	add    BYTE PTR [rip+0x227a00],al        # 2281ae <_end+0x27196>
 7ae:	00 05 00 c0 1b 00    	add    BYTE PTR [rip+0x1bc000],al        # 1bc7b4 <__FRAME_END__+0x1bbee8>
 7b4:	00 05 00 43 01 00    	add    BYTE PTR [rip+0x14300],al        # 14aba <__FRAME_END__+0x141ee>
 7ba:	00 05 00 30 1e 00    	add    BYTE PTR [rip+0x1e3000],al        # 1e37c0 <__FRAME_END__+0x1e2ef4>
 7c0:	00 05 00 7f 11 00    	add    BYTE PTR [rip+0x117f00],al        # 1186c6 <__FRAME_END__+0x117dfa>
 7c6:	00 05 00 c6 0c 00    	add    BYTE PTR [rip+0xcc600],al        # ccdcc <__FRAME_END__+0xcc500>
 7cc:	00 05 00 a8 06 00    	add    BYTE PTR [rip+0x6a800],al        # 6afd2 <__FRAME_END__+0x6a706>
 7d2:	00 05 00 8e 09 00    	add    BYTE PTR [rip+0x98e00],al        # 995d8 <__FRAME_END__+0x98d0c>
 7d8:	00 05 00 a2 1d 00    	add    BYTE PTR [rip+0x1da200],al        # 1da9de <__FRAME_END__+0x1da112>
 7de:	00 05 00 81 22 00    	add    BYTE PTR [rip+0x228100],al        # 2288e4 <_end+0x278cc>
 7e4:	00 05 00 c1 1e 00    	add    BYTE PTR [rip+0x1ec100],al        # 1ec8ea <__FRAME_END__+0x1ec01e>
 7ea:	00 05 00 48 0b 00    	add    BYTE PTR [rip+0xb4800],al        # b4ff0 <__FRAME_END__+0xb4724>
 7f0:	00 05 00 5c 1d 00    	add    BYTE PTR [rip+0x1d5c00],al        # 1d63f6 <__FRAME_END__+0x1d5b2a>
 7f6:	00 05 00 c2 10 00    	add    BYTE PTR [rip+0x10c200],al        # 10c9fc <__FRAME_END__+0x10c130>
 7fc:	00 05 00 5e 1d 00    	add    BYTE PTR [rip+0x1d5e00],al        # 1d6602 <__FRAME_END__+0x1d5d36>
 802:	00 05 00 de 00 00    	add    BYTE PTR [rip+0xde00],al        # e608 <__FRAME_END__+0xdd3c>
 808:	00 05 00 f4 01 00    	add    BYTE PTR [rip+0x1f400],al        # 1fc0e <__FRAME_END__+0x1f342>
 80e:	00 05 00 e0 00 00    	add    BYTE PTR [rip+0xe000],al        # e814 <__FRAME_END__+0xdf48>
 814:	00 05 00 1c 0a 00    	add    BYTE PTR [rip+0xa1c00],al        # a241a <__FRAME_END__+0xa1b4e>
 81a:	00 05 00 c4 26 00    	add    BYTE PTR [rip+0x26c400],al        # 26cc20 <_end+0x6bc08>
 820:	00 00                	add    BYTE PTR [rax],al
 822:	04 00                	add    al,0x0
 824:	00 05 13 17 25 00    	add    BYTE PTR [rip+0x251713],al        # 251f3d <_end+0x50f25>
 82a:	00 05 26 fe 19 00    	add    BYTE PTR [rip+0x19fe26],al        # 1a0656 <__FRAME_END__+0x19fd8a>
 830:	00 05 2e 90 10 00    	add    BYTE PTR [rip+0x10902e],al        # 109864 <__FRAME_END__+0x108f98>
 836:	00 05 3a ad 0e 00    	add    BYTE PTR [rip+0xead3a],al        # eb576 <__FRAME_END__+0xeacaa>
 83c:	00 05 3d f5 1e 00    	add    BYTE PTR [rip+0x1ef53d],al        # 1efd7f <__FRAME_END__+0x1ef4b3>
	...
Contents of the .eh_frame section:


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_undefined: r16 (rip)

00000018 0000000000000014 0000001c FDE cie=00000000 pc=0000000000000560..000000000000058b
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000048 0000000000000024 0000001c FDE cie=00000030 pc=0000000000000530..0000000000000550
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 0000000000000536
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 0000000000000540
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 0000000000000014 00000044 FDE cie=00000030 pc=0000000000000550..0000000000000558
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000088 000000000000001c 0000005c FDE cie=00000030 pc=000000000000066a..00000000000006af
  DW_CFA_advance_loc: 1 to 000000000000066b
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 000000000000066e
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc1: 64 to 00000000000006ae
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop

000000a8 000000000000001c 0000007c FDE cie=00000030 pc=00000000000006af..00000000000006d3
  DW_CFA_advance_loc: 1 to 00000000000006b0
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 00000000000006b3
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 31 to 00000000000006d2
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000c8 0000000000000044 0000009c FDE cie=00000030 pc=00000000000006e0..0000000000000745
  DW_CFA_advance_loc: 2 to 00000000000006e2
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r15 (r15) at cfa-16
  DW_CFA_advance_loc: 2 to 00000000000006e4
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r14 (r14) at cfa-24
  DW_CFA_advance_loc: 5 to 00000000000006e9
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r13 (r13) at cfa-32
  DW_CFA_advance_loc: 2 to 00000000000006eb
  DW_CFA_def_cfa_offset: 40
  DW_CFA_offset: r12 (r12) at cfa-40
  DW_CFA_advance_loc: 8 to 00000000000006f3
  DW_CFA_def_cfa_offset: 48
  DW_CFA_offset: r6 (rbp) at cfa-48
  DW_CFA_advance_loc: 8 to 00000000000006fb
  DW_CFA_def_cfa_offset: 56
  DW_CFA_offset: r3 (rbx) at cfa-56
  DW_CFA_advance_loc: 13 to 0000000000000708
  DW_CFA_def_cfa_offset: 64
  DW_CFA_advance_loc: 50 to 000000000000073a
  DW_CFA_def_cfa_offset: 56
  DW_CFA_advance_loc: 1 to 000000000000073b
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 1 to 000000000000073c
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 2 to 000000000000073e
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 2 to 0000000000000740
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 2 to 0000000000000742
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 0000000000000744
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop

00000110 0000000000000010 000000e4 FDE cie=00000030 pc=0000000000000750..0000000000000752
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000124 ZERO terminator


Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    000000000000066a 0000000000000069 
    0000000000000000 0000000000000000 

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0xda (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0x14e1): GNU C11 7.3.0 -mtune=generic -march=x86-64 -ggdb3 -fstack-protector-strong
    <10>   DW_AT_language    : 12	(ANSI C99)
    <11>   DW_AT_name        : (indirect string, offset: 0x2071): stack_example.c
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0x3c3): /home/ubuntu/Engineering/Programming/Hacking_Art_of_Exploitation/Intel_Architecture/AMD64/0x270_Memory_Segmentation/With_Debug_Info
    <19>   DW_AT_low_pc      : 0x66a
    <21>   DW_AT_high_pc     : 0x69
    <29>   DW_AT_stmt_list   : 0x0
    <2d>   DW_AT_GNU_macros  : 0x0
 <1><31>: Abbrev Number: 2 (DW_TAG_subprogram)
    <32>   DW_AT_external    : 1
    <32>   DW_AT_name        : (indirect string, offset: 0x263f): main
    <36>   DW_AT_decl_file   : 1
    <37>   DW_AT_decl_line   : 9
    <38>   DW_AT_type        : <0x4e>
    <3c>   DW_AT_low_pc      : 0x6af
    <44>   DW_AT_high_pc     : 0x24
    <4c>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <4e>   DW_AT_GNU_all_tail_call_sites: 1
 <1><4e>: Abbrev Number: 3 (DW_TAG_base_type)
    <4f>   DW_AT_byte_size   : 4
    <50>   DW_AT_encoding    : 5	(signed)
    <51>   DW_AT_name        : int
 <1><55>: Abbrev Number: 4 (DW_TAG_subprogram)
    <56>   DW_AT_external    : 1
    <56>   DW_AT_name        : (indirect string, offset: 0x2570): test_function
    <5a>   DW_AT_decl_file   : 1
    <5b>   DW_AT_decl_line   : 1
    <5c>   DW_AT_prototyped  : 1
    <5c>   DW_AT_low_pc      : 0x66a
    <64>   DW_AT_high_pc     : 0x45
    <6c>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <6e>   DW_AT_GNU_all_tail_call_sites: 1
    <6e>   DW_AT_sibling     : <0xbf>
 <2><72>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <73>   DW_AT_name        : a
    <75>   DW_AT_decl_file   : 1
    <76>   DW_AT_decl_line   : 1
    <77>   DW_AT_type        : <0x4e>
    <7b>   DW_AT_location    : 2 byte block: 91 4c 	(DW_OP_fbreg: -52)
 <2><7e>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <7f>   DW_AT_name        : b
    <81>   DW_AT_decl_file   : 1
    <82>   DW_AT_decl_line   : 1
    <83>   DW_AT_type        : <0x4e>
    <87>   DW_AT_location    : 2 byte block: 91 48 	(DW_OP_fbreg: -56)
 <2><8a>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <8b>   DW_AT_name        : c
    <8d>   DW_AT_decl_file   : 1
    <8e>   DW_AT_decl_line   : 1
    <8f>   DW_AT_type        : <0x4e>
    <93>   DW_AT_location    : 2 byte block: 91 44 	(DW_OP_fbreg: -60)
 <2><96>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <97>   DW_AT_name        : d
    <99>   DW_AT_decl_file   : 1
    <9a>   DW_AT_decl_line   : 1
    <9b>   DW_AT_type        : <0x4e>
    <9f>   DW_AT_location    : 2 byte block: 91 40 	(DW_OP_fbreg: -64)
 <2><a2>: Abbrev Number: 6 (DW_TAG_variable)
    <a3>   DW_AT_name        : (indirect string, offset: 0x1caf): flag
    <a7>   DW_AT_decl_file   : 1
    <a8>   DW_AT_decl_line   : 2
    <a9>   DW_AT_type        : <0x4e>
    <ad>   DW_AT_location    : 2 byte block: 91 58 	(DW_OP_fbreg: -40)
 <2><b0>: Abbrev Number: 6 (DW_TAG_variable)
    <b1>   DW_AT_name        : (indirect string, offset: 0x206a): buffer
    <b5>   DW_AT_decl_file   : 1
    <b6>   DW_AT_decl_line   : 3
    <b7>   DW_AT_type        : <0xbf>
    <bb>   DW_AT_location    : 2 byte block: 91 5e 	(DW_OP_fbreg: -34)
 <2><be>: Abbrev Number: 0
 <1><bf>: Abbrev Number: 7 (DW_TAG_array_type)
    <c0>   DW_AT_type        : <0xd6>
    <c4>   DW_AT_sibling     : <0xcf>
 <2><c8>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <c9>   DW_AT_type        : <0xcf>
    <cd>   DW_AT_upper_bound : 9
 <2><ce>: Abbrev Number: 0
 <1><cf>: Abbrev Number: 9 (DW_TAG_base_type)
    <d0>   DW_AT_byte_size   : 8
    <d1>   DW_AT_encoding    : 7	(unsigned)
    <d2>   DW_AT_name        : (indirect string, offset: 0x1873): long unsigned int
 <1><d6>: Abbrev Number: 9 (DW_TAG_base_type)
    <d7>   DW_AT_byte_size   : 1
    <d8>   DW_AT_encoding    : 6	(signed char)
    <d9>   DW_AT_name        : (indirect string, offset: 0x16a7): char
 <1><dd>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT_GNU_macros   DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      118
  DWARF Version:               2
  Prologue Length:             85
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	/usr/x86_64-linux-gnu/include

 The File Name Table (offset 0x3a):
  Entry	Dir	Time	Size	Name
  1	0	0	0	stack_example.c
  2	1	0	0	stdc-predef.h

 Line Number Statements:
  [0x0000005f]  Extended opcode 2: set Address to 0x66a
  [0x0000006a]  Copy
  [0x0000006b]  Advance PC by constant 17 to 0x67b
  [0x0000006c]  Special opcode 47: advance Address by 3 to 0x67e and Line by 0 to 1
  [0x0000006d]  Special opcode 219: advance Address by 15 to 0x68d and Line by 4 to 5
  [0x0000006e]  Special opcode 104: advance Address by 7 to 0x694 and Line by 1 to 6
  [0x0000006f]  Special opcode 62: advance Address by 4 to 0x698 and Line by 1 to 7
  [0x00000070]  Advance PC by constant 17 to 0x6a9
  [0x00000071]  Special opcode 91: advance Address by 6 to 0x6af and Line by 2 to 9
  [0x00000072]  Special opcode 62: advance Address by 4 to 0x6b3 and Line by 1 to 10
  [0x00000073]  Advance PC by constant 17 to 0x6c4
  [0x00000074]  Special opcode 188: advance Address by 13 to 0x6d1 and Line by 1 to 11
  [0x00000075]  Advance PC by 2 to 0x6d3
  [0x00000077]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 5f5f5549 4e545f4c 45415354 385f4d41 __UINT_LEAST8_MA
  0x00000010 585f5f20 30786666 005f5f46 4c543634 X__ 0xff.__FLT64
  0x00000020 5f484153 5f44454e 4f524d5f 5f203100 _HAS_DENORM__ 1.
  0x00000030 5f5f464c 54363458 5f4d414e 545f4449 __FLT64X_MANT_DI
  0x00000040 475f5f20 3634005f 5f464c54 33325f44 G__ 64.__FLT32_D
  0x00000050 49475f5f 2036005f 5f464c54 3634585f IG__ 6.__FLT64X_
  0x00000060 4d494e5f 4558505f 5f20282d 31363338 MIN_EXP__ (-1638
  0x00000070 3129005f 5f55494e 545f4c45 41535433 1).__UINT_LEAST3
  0x00000080 325f4d41 585f5f20 30786666 66666666 2_MAX__ 0xffffff
  0x00000090 66665500 5f5f5349 5a454f46 5f53495a ffU.__SIZEOF_SIZ
  0x000000a0 455f545f 5f203800 5f5f4743 435f4154 E_T__ 8.__GCC_AT
  0x000000b0 4f4d4943 5f4c4f4e 475f4c4f 434b5f46 OMIC_LONG_LOCK_F
  0x000000c0 52454520 32005f5f 464c5433 32585f48 REE 2.__FLT32X_H
  0x000000d0 41535f44 454e4f52 4d5f5f20 31005f5f AS_DENORM__ 1.__
  0x000000e0 756e6978 2031005f 5f535444 435f5645 unix 1.__STDC_VE
  0x000000f0 5253494f 4e5f5f20 32303131 31324c00 RSION__ 201112L.
  0x00000100 5f5f5349 5a454f46 5f504f49 4e544552 __SIZEOF_POINTER
  0x00000110 5f5f2038 005f5f57 43484152 5f574944 __ 8.__WCHAR_WID
  0x00000120 54485f5f 20333200 5f5f4445 43313238 TH__ 32.__DEC128
  0x00000130 5f4d494e 5f455850 5f5f2028 2d363134 _MIN_EXP__ (-614
  0x00000140 3229005f 5f636f64 655f6d6f 64656c5f 2).__code_model_
  0x00000150 736d616c 6c5f5f20 31005f5f 44454336 small__ 1.__DEC6
  0x00000160 345f4d41 4e545f44 49475f5f 20313600 4_MANT_DIG__ 16.
  0x00000170 5f5f4445 4336345f 4d494e5f 4558505f __DEC64_MIN_EXP_
  0x00000180 5f20282d 33383229 005f5f44 424c5f4d _ (-382).__DBL_M
  0x00000190 494e5f5f 20282864 6f75626c 6529322e IN__ ((double)2.
  0x000001a0 32323530 37333835 38353037 32303133 2250738585072013
  0x000001b0 38333039 30323332 37313733 33323430 8309023271733240
  0x000001c0 34303665 2d333038 4c29005f 5f55494e 406e-308L).__UIN
  0x000001d0 545f4641 53543634 5f4d4158 5f5f2030 T_FAST64_MAX__ 0
  0x000001e0 78666666 66666666 66666666 66666666 xfffffffffffffff
  0x000001f0 66554c00 5f5f756e 69785f5f 2031005f fUL.__unix__ 1._
  0x00000200 5f55494e 54505452 5f545950 455f5f20 _UINTPTR_TYPE__ 
  0x00000210 6c6f6e67 20756e73 69676e65 6420696e long unsigned in
  0x00000220 74005f5f 464c5433 32585f4d 41585f45 t.__FLT32X_MAX_E
  0x00000230 58505f5f 20313032 34005f5f 4c44424c XP__ 1024.__LDBL
  0x00000240 5f4d4158 5f31305f 4558505f 5f203439 _MAX_10_EXP__ 49
  0x00000250 3332005f 5f444543 33325f4d 494e5f5f 32.__DEC32_MIN__
  0x00000260 2031452d 39354446 005f5f46 4c543634  1E-95DF.__FLT64
  0x00000270 5f4d4158 5f5f2031 2e373937 36393331 _MAX__ 1.7976931
  0x00000280 33343836 32333135 37303831 34353237 3486231570814527
  0x00000290 34323337 33313730 34333537 652b3330 423731704357e+30
  0x000002a0 38463634 005f5f46 4c543332 585f4841 8F64.__FLT32X_HA
  0x000002b0 535f5155 4945545f 4e414e5f 5f203100 S_QUIET_NAN__ 1.
  0x000002c0 5f5f5349 5a454f46 5f57494e 545f545f __SIZEOF_WINT_T_
  0x000002d0 5f203400 5f5f464c 54313238 5f484153 _ 4.__FLT128_HAS
  0x000002e0 5f494e46 494e4954 595f5f20 31005f5f _INFINITY__ 1.__
  0x000002f0 44424c5f 4d41585f 31305f45 58505f5f DBL_MAX_10_EXP__
  0x00000300 20333038 005f5f46 4c543634 5f4d494e  308.__FLT64_MIN
  0x00000310 5f5f2032 2e323235 30373338 35383530 __ 2.22507385850
  0x00000320 37323031 33383330 39303233 32373137 7201383090232717
  0x00000330 33333234 30343036 652d3330 38463634 33240406e-308F64
  0x00000340 005f5f61 6d643634 2031005f 5f4c4442 .__amd64 1.__LDB
  0x00000350 4c5f4d49 4e5f5f20 332e3336 32313033 L_MIN__ 3.362103
  0x00000360 31343331 31323039 33353036 32363236 1431120935062626
  0x00000370 37373831 37333231 37353236 30652d34 7781732175260e-4
  0x00000380 3933324c 005f5f49 4e545f4c 45415354 932L.__INT_LEAST
  0x00000390 33325f57 49445448 5f5f2033 32005f5f 32_WIDTH__ 32.__
  0x000003a0 55494e54 5054525f 4d41585f 5f203078 UINTPTR_MAX__ 0x
  0x000003b0 66666666 66666666 66666666 66666666 ffffffffffffffff
  0x000003c0 554c002f 686f6d65 2f756275 6e74752f UL./home/ubuntu/
  0x000003d0 456e6769 6e656572 696e672f 50726f67 Engineering/Prog
  0x000003e0 72616d6d 696e672f 4861636b 696e675f ramming/Hacking_
  0x000003f0 4172745f 6f665f45 78706c6f 69746174 Art_of_Exploitat
  0x00000400 696f6e2f 496e7465 6c5f4172 63686974 ion/Intel_Archit
  0x00000410 65637475 72652f41 4d443634 2f307832 ecture/AMD64/0x2
  0x00000420 37305f4d 656d6f72 795f5365 676d656e 70_Memory_Segmen
  0x00000430 74617469 6f6e2f57 6974685f 44656275 tation/With_Debu
  0x00000440 675f496e 666f005f 5f4c5036 345f5f20 g_Info.__LP64__ 
  0x00000450 31005f5f 55494e54 36345f43 28632920 1.__UINT64_C(c) 
  0x00000460 63202323 20554c00 5f5f4442 4c5f4841 c ## UL.__DBL_HA
  0x00000470 535f494e 46494e49 54595f5f 2031005f S_INFINITY__ 1._
  0x00000480 5f464c54 3132385f 4841535f 51554945 _FLT128_HAS_QUIE
  0x00000490 545f4e41 4e5f5f20 31005f5f 474e5543 T_NAN__ 1.__GNUC
  0x000004a0 5f5f2037 005f5f46 4c543332 585f4d49 __ 7.__FLT32X_MI
  0x000004b0 4e5f3130 5f455850 5f5f2028 2d333037 N_10_EXP__ (-307
  0x000004c0 29005f5f 494e5433 325f4328 63292063 ).__INT32_C(c) c
  0x000004d0 005f5f46 4c543332 585f4550 53494c4f .__FLT32X_EPSILO
  0x000004e0 4e5f5f20 322e3232 30343436 30343932 N__ 2.2204460492
  0x000004f0 35303331 33303830 38343732 36333333 5031308084726333
  0x00000500 36313831 36343036 32652d31 36463332 618164062e-16F32
  0x00000510 78005f5f 464c5431 32385f45 5053494c x.__FLT128_EPSIL
  0x00000520 4f4e5f5f 20312e39 32353932 39393434 ON__ 1.925929944
  0x00000530 33383732 33353835 33303535 39373739 3872358530559779
  0x00000540 34323538 34393237 3332652d 33344631 4258492732e-34F1
  0x00000550 3238005f 5f464c54 3634585f 4841535f 28.__FLT64X_HAS_
  0x00000560 44454e4f 524d5f5f 2031005f 5f494e54 DENORM__ 1.__INT
  0x00000570 5054525f 57494454 485f5f20 3634005f PTR_WIDTH__ 64._
  0x00000580 5f535444 435f484f 53544544 5f5f2031 _STDC_HOSTED__ 1
  0x00000590 005f5f57 494e545f 4d494e5f 5f203055 .__WINT_MIN__ 0U
  0x000005a0 005f5f46 4c545f45 56414c5f 4d455448 .__FLT_EVAL_METH
  0x000005b0 4f445f54 535f3138 3636315f 335f5f20 OD_TS_18661_3__ 
  0x000005c0 30005f5f 4c44424c 5f44454e 4f524d5f 0.__LDBL_DENORM_
  0x000005d0 4d494e5f 5f20332e 36343531 39393533 MIN__ 3.64519953
  0x000005e0 31383832 34373436 30323532 38343035 1882474602528405
  0x000005f0 39333336 31393431 39383265 2d343935 93361941982e-495
  0x00000600 314c005f 5f44424c 5f455053 494c4f4e 1L.__DBL_EPSILON
  0x00000610 5f5f2028 28646f75 626c6529 322e3232 __ ((double)2.22
  0x00000620 30343436 30343932 35303331 33303830 0446049250313080
  0x00000630 38343732 36333333 36313831 36343036 8472633361816406
  0x00000640 32652d31 364c2900 5f5f494e 545f4c45 2e-16L).__INT_LE
  0x00000650 41535438 5f574944 54485f5f 2038005f AST8_WIDTH__ 8._
  0x00000660 5f44424c 5f444947 5f5f2031 35005f5f _DBL_DIG__ 15.__
  0x00000670 4743435f 41544f4d 49435f57 43484152 GCC_ATOMIC_WCHAR
  0x00000680 5f545f4c 4f434b5f 46524545 2032005f _T_LOCK_FREE 2._
  0x00000690 5f57494e 545f4d41 585f5f20 30786666 _WINT_MAX__ 0xff
  0x000006a0 66666666 66665500 5f5f4658 53525f5f ffffffU.__FXSR__
  0x000006b0 2031005f 5f464c54 36345f48 41535f51  1.__FLT64_HAS_Q
  0x000006c0 55494554 5f4e414e 5f5f2031 005f5f44 UIET_NAN__ 1.__D
  0x000006d0 45433634 5f535542 4e4f524d 414c5f4d EC64_SUBNORMAL_M
  0x000006e0 494e5f5f 20302e30 30303030 30303030 IN__ 0.000000000
  0x000006f0 30303030 3031452d 33383344 44005f5f 000001E-383DD.__
  0x00000700 53434841 525f5749 4454485f 5f203800 SCHAR_WIDTH__ 8.
  0x00000710 5f5f4c44 424c5f45 5053494c 4f4e5f5f __LDBL_EPSILON__
  0x00000720 20312e30 38343230 32313732 34383535  1.0842021724855
  0x00000730 30343433 34303037 34353238 30303836 0443400745280086
  0x00000740 39393431 3731652d 31394c00 5f5f4442 994171e-19L.__DB
  0x00000750 4c5f4d41 4e545f44 49475f5f 20353300 L_MANT_DIG__ 53.
  0x00000760 5f5f464c 5433325f 45505349 4c4f4e5f __FLT32_EPSILON_
  0x00000770 5f20312e 31393230 39323839 35353037 _ 1.192092895507
  0x00000780 38313235 30303030 30303030 30303030 8125000000000000
  0x00000790 30303030 30303065 2d374633 32005f5f 0000000e-7F32.__
  0x000007a0 464c5433 325f4445 4e4f524d 5f4d494e FLT32_DENORM_MIN
  0x000007b0 5f5f2031 2e343031 32393834 36343332 __ 1.40129846432
  0x000007c0 34383137 30373039 32333732 39353833 4817070923729583
  0x000007d0 32383939 31363133 652d3435 46333200 28991613e-45F32.
  0x000007e0 5f5f494e 545f4641 5354385f 4d41585f __INT_FAST8_MAX_
  0x000007f0 5f203078 3766005f 5f55494e 5433325f _ 0x7f.__UINT32_
  0x00000800 54595045 5f5f2075 6e736967 6e656420 TYPE__ unsigned 
  0x00000810 696e7400 5f5f464c 5436345f 45505349 int.__FLT64_EPSI
  0x00000820 4c4f4e5f 5f20322e 32323034 34363034 LON__ 2.22044604
  0x00000830 39323530 33313330 38303834 37323633 9250313080847263
  0x00000840 33333631 38313634 30363265 2d313646 33618164062e-16F
  0x00000850 3634005f 5f4c4442 4c5f4d49 4e5f3130 64.__LDBL_MIN_10
  0x00000860 5f455850 5f5f2028 2d343933 3129005f _EXP__ (-4931)._
  0x00000870 5f534852 545f5749 4454485f 5f203136 _SHRT_WIDTH__ 16
  0x00000880 005f5f44 45433332 5f4d4158 5f455850 .__DEC32_MAX_EXP
  0x00000890 5f5f2039 37005f5f 494e5433 325f5459 __ 97.__INT32_TY
  0x000008a0 50455f5f 20696e74 005f5f53 49475f41 PE__ int.__SIG_A
  0x000008b0 544f4d49 435f5459 50455f5f 20696e74 TOMIC_TYPE__ int
  0x000008c0 005f5f44 45433634 5f4d4158 5f455850 .__DEC64_MAX_EXP
  0x000008d0 5f5f2033 3835005f 5f44424c 5f4d494e __ 385.__DBL_MIN
  0x000008e0 5f455850 5f5f2028 2d313032 3129005f _EXP__ (-1021)._
  0x000008f0 5f706963 5f5f2032 005f4c50 36342031 _pic__ 2._LP64 1
  0x00000900 005f5f49 4e545f4c 45415354 31365f57 .__INT_LEAST16_W
  0x00000910 49445448 5f5f2031 36005f5f 464c5433 IDTH__ 16.__FLT3
  0x00000920 325f4841 535f494e 46494e49 54595f5f 2_HAS_INFINITY__
  0x00000930 2031005f 5f4c4442 4c5f4841 535f494e  1.__LDBL_HAS_IN
  0x00000940 46494e49 54595f5f 2031005f 5f53495a FINITY__ 1.__SIZ
  0x00000950 454f465f 4c4f4e47 5f5f2038 005f5f46 EOF_LONG__ 8.__F
  0x00000960 4c545f48 41535f44 454e4f52 4d5f5f20 LT_HAS_DENORM__ 
  0x00000970 31005f5f 464c5431 32385f4d 494e5f45 1.__FLT128_MIN_E
  0x00000980 58505f5f 20282d31 36333831 29005f5f XP__ (-16381).__
  0x00000990 5353455f 4d415448 5f5f2031 005f5f55 SSE_MATH__ 1.__U
  0x000009a0 494e5431 365f4d41 585f5f20 30786666 INT16_MAX__ 0xff
  0x000009b0 6666005f 5f464c54 3634585f 4841535f ff.__FLT64X_HAS_
  0x000009c0 51554945 545f4e41 4e5f5f20 31005f5f QUIET_NAN__ 1.__
  0x000009d0 55494e54 5f464153 5436345f 54595045 UINT_FAST64_TYPE
  0x000009e0 5f5f206c 6f6e6720 756e7369 676e6564 __ long unsigned
  0x000009f0 20696e74 005f5f42 5954455f 4f524445  int.__BYTE_ORDE
  0x00000a00 525f5f20 5f5f4f52 4445525f 4c495454 R__ __ORDER_LITT
  0x00000a10 4c455f45 4e444941 4e5f5f00 5f5f454c LE_ENDIAN__.__EL
  0x00000a20 465f5f20 31005f5f 464c5433 32585f4d F__ 1.__FLT32X_M
  0x00000a30 494e5f45 58505f5f 20282d31 30323129 IN_EXP__ (-1021)
  0x00000a40 005f5f46 4c4f4154 5f574f52 445f4f52 .__FLOAT_WORD_OR
  0x00000a50 4445525f 5f205f5f 4f524445 525f4c49 DER__ __ORDER_LI
  0x00000a60 54544c45 5f454e44 49414e5f 5f005f5f TTLE_ENDIAN__.__
  0x00000a70 55494e54 5f4c4541 53543136 5f4d4158 UINT_LEAST16_MAX
  0x00000a80 5f5f2030 78666666 66005f5f 50524147 __ 0xffff.__PRAG
  0x00000a90 4d415f52 45444546 494e455f 4558544e MA_REDEFINE_EXTN
  0x00000aa0 414d4520 31005f5f 494e545f 4c454153 AME 1.__INT_LEAS
  0x00000ab0 5431365f 54595045 5f5f2073 686f7274 T16_TYPE__ short
  0x00000ac0 20696e74 005f5f46 4c543332 5f484153  int.__FLT32_HAS
  0x00000ad0 5f515549 45545f4e 414e5f5f 2031005f _QUIET_NAN__ 1._
  0x00000ae0 5f464c54 5f4d4158 5f455850 5f5f2031 _FLT_MAX_EXP__ 1
  0x00000af0 3238005f 5f686173 5f696e63 6c756465 28.__has_include
  0x00000b00 5f6e6578 74285354 5229205f 5f686173 _next(STR) __has
  0x00000b10 5f696e63 6c756465 5f6e6578 745f5f28 _include_next__(
  0x00000b20 53545229 005f5f49 4e545054 525f4d41 STR).__INTPTR_MA
  0x00000b30 585f5f20 30783766 66666666 66666666 X__ 0x7fffffffff
  0x00000b40 66666666 66664c00 5f5f676e 755f6c69 ffffffL.__gnu_li
  0x00000b50 6e75785f 5f203100 5f5f464c 54333258 nux__ 1.__FLT32X
  0x00000b60 5f4d4158 5f31305f 4558505f 5f203330 _MAX_10_EXP__ 30
  0x00000b70 38005f5f 464c545f 44454e4f 524d5f4d 8.__FLT_DENORM_M
  0x00000b80 494e5f5f 20312e34 30313239 38343634 IN__ 1.401298464
  0x00000b90 33323438 31373037 30393233 37323935 3248170709237295
  0x00000ba0 38333238 39393136 3133652d 34354600 8328991613e-45F.
  0x00000bb0 5f5f4c44 424c5f48 41535f51 55494554 __LDBL_HAS_QUIET
  0x00000bc0 5f4e414e 5f5f2031 005f5f53 495a454f _NAN__ 1.__SIZEO
  0x00000bd0 465f444f 55424c45 5f5f2038 005f5f56 F_DOUBLE__ 8.__V
  0x00000be0 45525349 4f4e5f5f 2022372e 332e3022 ERSION__ "7.3.0"
  0x00000bf0 005f5f46 4c543332 585f4d41 585f5f20 .__FLT32X_MAX__ 
  0x00000c00 312e3739 37363933 31333438 36323331 1.79769313486231
  0x00000c10 35373038 31343532 37343233 37333137 5708145274237317
  0x00000c20 30343335 37652b33 30384633 3278005f 04357e+308F32x._
  0x00000c30 5f55494e 54385f4d 41585f5f 20307866 _UINT8_MAX__ 0xf
  0x00000c40 66005f5f 57494e54 5f574944 54485f5f f.__WINT_WIDTH__
  0x00000c50 20333200 5f5f5549 4e543634 5f545950  32.__UINT64_TYP
  0x00000c60 455f5f20 6c6f6e67 20756e73 69676e65 E__ long unsigne
  0x00000c70 6420696e 74005f5f 494e545f 4c454153 d int.__INT_LEAS
  0x00000c80 5433325f 54595045 5f5f2069 6e74005f T32_TYPE__ int._
  0x00000c90 5f464c54 33325f4d 41585f45 58505f5f _FLT32_MAX_EXP__
  0x00000ca0 20313238 005f5f50 49435f5f 2032005f  128.__PIC__ 2._
  0x00000cb0 5f464c54 36345f4d 41585f45 58505f5f _FLT64_MAX_EXP__
  0x00000cc0 20313032 34005f5f 53534532 5f5f2031  1024.__SSE2__ 1
  0x00000cd0 005f5f46 4c543634 5f4d494e 5f455850 .__FLT64_MIN_EXP
  0x00000ce0 5f5f2028 2d313032 3129005f 5f494e54 __ (-1021).__INT
  0x00000cf0 4d41585f 43286329 20632023 23204c00 MAX_C(c) c ## L.
  0x00000d00 5f5f4743 435f4154 4f4d4943 5f434841 __GCC_ATOMIC_CHA
  0x00000d10 5233325f 545f4c4f 434b5f46 52454520 R32_T_LOCK_FREE 
  0x00000d20 32005f5f 53495a45 4f465f49 4e543132 2.__SIZEOF_INT12
  0x00000d30 385f5f20 3136005f 5f505452 44494646 8__ 16.__PTRDIFF
  0x00000d40 5f545950 455f5f20 6c6f6e67 20696e74 _TYPE__ long int
  0x00000d50 005f5f46 4c543332 5f4d4158 5f5f2033 .__FLT32_MAX__ 3
  0x00000d60 2e343032 38323334 36363338 35323838 .402823466385288
  0x00000d70 35393831 31373034 31383334 38343531 5981170418348451
  0x00000d80 36393235 652b3338 46333200 5f5f494e 6925e+38F32.__IN
  0x00000d90 54385f43 28632920 63005f5f 53495a45 T8_C(c) c.__SIZE
  0x00000da0 4f465f4c 4f4e475f 4c4f4e47 5f5f2038 OF_LONG_LONG__ 8
  0x00000db0 005f5f46 4c545f44 49475f5f 2036005f .__FLT_DIG__ 6._
  0x00000dc0 5f44424c 5f44454e 4f524d5f 4d494e5f _DBL_DENORM_MIN_
  0x00000dd0 5f202828 646f7562 6c652934 2e393430 _ ((double)4.940
  0x00000de0 36353634 35383431 32343635 34343137 6564584124654417
  0x00000df0 36353638 37393238 36383232 31333732 6568792868221372
  0x00000e00 652d3332 344c2900 5f5f494e 5436345f e-324L).__INT64_
  0x00000e10 43286329 20632023 23204c00 5f5f5549 C(c) c ## L.__UI
  0x00000e20 4e545f46 41535431 365f4d41 585f5f20 NT_FAST16_MAX__ 
  0x00000e30 30786666 66666666 66666666 66666666 0xffffffffffffff
  0x00000e40 6666554c 005f5f46 4c545f4d 41585f31 ffUL.__FLT_MAX_1
  0x00000e50 305f4558 505f5f20 3338005f 5f4e4f5f 0_EXP__ 38.__NO_
  0x00000e60 494e4c49 4e455f5f 2031005f 5f55494e INLINE__ 1.__UIN
  0x00000e70 545f4c45 41535436 345f5459 50455f5f T_LEAST64_TYPE__
  0x00000e80 206c6f6e 6720756e 7369676e 65642069  long unsigned i
  0x00000e90 6e74005f 5f53495a 454f465f 4c4f4e47 nt.__SIZEOF_LONG
  0x00000ea0 5f444f55 424c455f 5f203136 005f5f53 _DOUBLE__ 16.__S
  0x00000eb0 5444435f 49534f5f 31303634 365f5f20 TDC_ISO_10646__ 
  0x00000ec0 32303137 30364c00 5f5f5054 52444946 201706L.__PTRDIF
  0x00000ed0 465f5749 4454485f 5f203634 005f5f53 F_WIDTH__ 64.__S
  0x00000ee0 43484152 5f4d4158 5f5f2030 78376600 CHAR_MAX__ 0x7f.
  0x00000ef0 5f5f464c 5433325f 4d494e5f 5f20312e __FLT32_MIN__ 1.
  0x00000f00 31373534 39343335 30383232 32383735 1754943508222875
  0x00000f10 30373936 38373336 35333732 32323234 0796873653722224
  0x00000f20 35363865 2d333846 3332005f 5f494e54 568e-38F32.__INT
  0x00000f30 5f4c4541 53543634 5f545950 455f5f20 _LEAST64_TYPE__ 
  0x00000f40 6c6f6e67 20696e74 005f5f47 4e55435f long int.__GNUC_
  0x00000f50 4d494e4f 525f5f20 33005f5f 464c5436 MINOR__ 3.__FLT6
  0x00000f60 34585f4d 494e5f5f 20332e33 36323130 4X_MIN__ 3.36210
  0x00000f70 33313433 31313230 39333530 36323632 3143112093506262
  0x00000f80 36373738 31373332 31373532 3630652d 67781732175260e-
  0x00000f90 34393332 46363478 005f5f44 45435f45 4932F64x.__DEC_E
  0x00000fa0 56414c5f 4d455448 4f445f5f 2032005f VAL_METHOD__ 2._
  0x00000fb0 5f444543 33325f4d 41585f5f 20392e39 _DEC32_MAX__ 9.9
  0x00000fc0 39393939 39453936 4446005f 5f4c4f4e 99999E96DF.__LON
  0x00000fd0 475f4c4f 4e475f4d 41585f5f 20307837 G_LONG_MAX__ 0x7
  0x00000fe0 66666666 66666666 66666666 6666664c fffffffffffffffL
  0x00000ff0 4c005f5f 4743435f 41544f4d 49435f42 L.__GCC_ATOMIC_B
  0x00001000 4f4f4c5f 4c4f434b 5f465245 45203200 OOL_LOCK_FREE 2.
  0x00001010 5f5f5349 5a455f54 5950455f 5f206c6f __SIZE_TYPE__ lo
  0x00001020 6e672075 6e736967 6e656420 696e7400 ng unsigned int.
  0x00001030 5f5f4c44 424c5f4d 494e5f45 58505f5f __LDBL_MIN_EXP__
  0x00001040 20282d31 36333831 29005f5f 464c5433  (-16381).__FLT3
  0x00001050 325f4d41 4e545f44 49475f5f 20323400 2_MANT_DIG__ 24.
  0x00001060 5f5f4743 435f4945 435f3535 395f434f __GCC_IEC_559_CO
  0x00001070 4d504c45 58203200 5f5f464c 545f4841 MPLEX 2.__FLT_HA
  0x00001080 535f5155 4945545f 4e414e5f 5f203100 S_QUIET_NAN__ 1.
  0x00001090 5f5f5354 44435f49 45435f35 35395f43 __STDC_IEC_559_C
  0x000010a0 4f4d504c 45585f5f 2031005f 5f464c54 OMPLEX__ 1.__FLT
  0x000010b0 5f4d494e 5f455850 5f5f2028 2d313235 _MIN_EXP__ (-125
  0x000010c0 29005f5f 6c696e75 785f5f20 31005f5f ).__linux__ 1.__
  0x000010d0 464c5433 32585f4d 494e5f5f 20322e32 FLT32X_MIN__ 2.2
  0x000010e0 32353037 33383538 35303732 30313338 2507385850720138
  0x000010f0 33303930 32333237 31373333 32343034 3090232717332404
  0x00001100 3036652d 33303846 33327800 5f5f5349 06e-308F32x.__SI
  0x00001110 5a455f4d 41585f5f 20307866 66666666 ZE_MAX__ 0xfffff
  0x00001120 66666666 66666666 66666655 4c005f5f fffffffffffUL.__
  0x00001130 55494e54 5f4c4541 53543634 5f4d4158 UINT_LEAST64_MAX
  0x00001140 5f5f2030 78666666 66666666 66666666 __ 0xfffffffffff
  0x00001150 66666666 66554c00 5f5f494e 545f4641 fffffUL.__INT_FA
  0x00001160 53543634 5f4d4158 5f5f2030 78376666 ST64_MAX__ 0x7ff
  0x00001170 66666666 66666666 66666666 664c005f fffffffffffffL._
  0x00001180 5f535345 5f5f2031 005f5f4f 52444552 _SSE__ 1.__ORDER
  0x00001190 5f424947 5f454e44 49414e5f 5f203433 _BIG_ENDIAN__ 43
  0x000011a0 3231005f 5f494e54 5054525f 54595045 21.__INTPTR_TYPE
  0x000011b0 5f5f206c 6f6e6720 696e7400 5f5f4c4f __ long int.__LO
  0x000011c0 4e475f4d 41585f5f 20307837 66666666 NG_MAX__ 0x7ffff
  0x000011d0 66666666 66666666 6666664c 005f5f49 fffffffffffL.__I
  0x000011e0 4e545f46 41535433 325f5749 4454485f NT_FAST32_WIDTH_
  0x000011f0 5f203634 005f5f46 4c543634 585f4445 _ 64.__FLT64X_DE
  0x00001200 4e4f524d 5f4d494e 5f5f2033 2e363435 NORM_MIN__ 3.645
  0x00001210 31393935 33313838 32343734 36303235 1995318824746025
  0x00001220 32383430 35393333 36313934 31393832 2840593361941982
  0x00001230 652d3439 35314636 3478005f 5f464c54 e-4951F64x.__FLT
  0x00001240 33325f4d 41585f31 305f4558 505f5f20 32_MAX_10_EXP__ 
  0x00001250 3338005f 5f4c4442 4c5f4d41 585f5f20 38.__LDBL_MAX__ 
  0x00001260 312e3138 39373331 34393533 35373233 1.18973149535723
  0x00001270 31373635 30323132 36333835 33303330 1765021263853030
  0x00001280 39373032 31652b34 3933324c 005f5f53 97021e+4932L.__S
  0x00001290 495a454f 465f5348 4f52545f 5f203200 IZEOF_SHORT__ 2.
  0x000012a0 5f5f464c 545f4d49 4e5f5f20 312e3137 __FLT_MIN__ 1.17
  0x000012b0 35343934 33353038 32323238 37353037 5494350822287507
  0x000012c0 39363837 33363533 37323232 32343536 9687365372222456
  0x000012d0 38652d33 3846005f 5f474343 5f41544f 8e-38F.__GCC_ATO
  0x000012e0 4d49435f 494e545f 4c4f434b 5f465245 MIC_INT_LOCK_FRE
  0x000012f0 45203200 5f5f464c 5436345f 4841535f E 2.__FLT64_HAS_
  0x00001300 494e4649 4e495459 5f5f2031 005f5f49 INFINITY__ 1.__I
  0x00001310 4e543136 5f432863 29206300 5f5f464c NT16_C(c) c.__FL
  0x00001320 54363458 5f484153 5f494e46 494e4954 T64X_HAS_INFINIT
  0x00001330 595f5f20 31005f5f 44454349 4d414c5f Y__ 1.__DECIMAL_
  0x00001340 4449475f 5f203231 005f5f49 4e545f46 DIG__ 21.__INT_F
  0x00001350 41535436 345f5459 50455f5f 206c6f6e AST64_TYPE__ lon
  0x00001360 6720696e 74005f5f 44454336 345f4d41 g int.__DEC64_MA
  0x00001370 585f5f20 392e3939 39393939 39393939 X__ 9.9999999999
  0x00001380 39393939 39453338 34444400 5f5f4445 99999E384DD.__DE
  0x00001390 4333325f 5355424e 4f524d41 4c5f4d49 C32_SUBNORMAL_MI
  0x000013a0 4e5f5f20 302e3030 30303031 452d3935 N__ 0.000001E-95
  0x000013b0 4446005f 5f464c54 3132385f 4d494e5f DF.__FLT128_MIN_
  0x000013c0 31305f45 58505f5f 20282d34 39333129 10_EXP__ (-4931)
  0x000013d0 005f5f49 4e545f4d 41585f5f 20307837 .__INT_MAX__ 0x7
  0x000013e0 66666666 66666600 5f5f464c 54313238 fffffff.__FLT128
  0x000013f0 5f484153 5f44454e 4f524d5f 5f203100 _HAS_DENORM__ 1.
  0x00001400 5f5f4743 435f4154 4f4d4943 5f4c4c4f __GCC_ATOMIC_LLO
  0x00001410 4e475f4c 4f434b5f 46524545 2032005f NG_LOCK_FREE 2._
  0x00001420 5f464c54 3132385f 4d494e5f 5f20332e _FLT128_MIN__ 3.
  0x00001430 33363231 30333134 33313132 30393335 3621031431120935
  0x00001440 30363236 32363737 38313733 32313735 0626267781732175
  0x00001450 32363065 2d343933 32463132 38005f5f 260e-4932F128.__
  0x00001460 494e545f 4c454153 5436345f 4d41585f INT_LEAST64_MAX_
  0x00001470 5f203078 37666666 66666666 66666666 _ 0x7fffffffffff
  0x00001480 66666666 4c005f5f 474e5543 5f504154 ffffL.__GNUC_PAT
  0x00001490 43484c45 56454c5f 5f203000 5f5f4154 CHLEVEL__ 0.__AT
  0x000014a0 4f4d4943 5f52454c 45415345 2033005f OMIC_RELEASE 3._
  0x000014b0 5f464c54 33325f4d 494e5f31 305f4558 _FLT32_MIN_10_EX
  0x000014c0 505f5f20 282d3337 29005f5f 44424c5f P__ (-37).__DBL_
  0x000014d0 44454349 4d414c5f 4449475f 5f203137 DECIMAL_DIG__ 17
  0x000014e0 00474e55 20433131 20372e33 2e30202d .GNU C11 7.3.0 -
  0x000014f0 6d74756e 653d6765 6e657269 63202d6d mtune=generic -m
  0x00001500 61726368 3d783836 2d363420 2d676764 arch=x86-64 -ggd
  0x00001510 6233202d 66737461 636b2d70 726f7465 b3 -fstack-prote
  0x00001520 63746f72 2d737472 6f6e6700 5f5f464c ctor-strong.__FL
  0x00001530 545f4445 43494d41 4c5f4449 475f5f20 T_DECIMAL_DIG__ 
  0x00001540 39005f5f 41544f4d 49435f53 45515f43 9.__ATOMIC_SEQ_C
  0x00001550 53542035 005f5f44 45433132 385f4d49 ST 5.__DEC128_MI
  0x00001560 4e5f5f20 31452d36 31343344 4c005f5f N__ 1E-6143DL.__
  0x00001570 42494747 4553545f 414c4947 4e4d454e BIGGEST_ALIGNMEN
  0x00001580 545f5f20 3136005f 5f53495a 454f465f T__ 16.__SIZEOF_
  0x00001590 494e545f 5f203400 5f5f494e 545f4641 INT__ 4.__INT_FA
  0x000015a0 53543332 5f545950 455f5f20 6c6f6e67 ST32_TYPE__ long
  0x000015b0 20696e74 005f5f4c 44424c5f 44454349  int.__LDBL_DECI
  0x000015c0 4d414c5f 4449475f 5f203231 005f5f44 MAL_DIG__ 21.__D
  0x000015d0 45433132 385f4d41 585f4558 505f5f20 EC128_MAX_EXP__ 
  0x000015e0 36313435 005f5f49 4e543136 5f4d4158 6145.__INT16_MAX
  0x000015f0 5f5f2030 78376666 66005f5f 4743435f __ 0x7fff.__GCC_
  0x00001600 48415645 5f53594e 435f434f 4d504152 HAVE_SYNC_COMPAR
  0x00001610 455f414e 445f5357 41505f34 2031005f E_AND_SWAP_4 1._
  0x00001620 5f474343 5f41534d 5f464c41 475f4f55 _GCC_ASM_FLAG_OU
  0x00001630 54505554 535f5f20 31005f5f 464c5431 TPUTS__ 1.__FLT1
  0x00001640 32385f4d 41585f45 58505f5f 20313633 28_MAX_EXP__ 163
  0x00001650 3834005f 5f464c54 3132385f 4d41585f 84.__FLT128_MAX_
  0x00001660 5f20312e 31383937 33313439 35333537 _ 1.189731495357
  0x00001670 32333137 36353038 35373539 33323636 2317650857593266
  0x00001680 32383030 37303265 2b343933 32463132 2800702e+4932F12
  0x00001690 38005f5f 494e5438 5f545950 455f5f20 8.__INT8_TYPE__ 
  0x000016a0 7369676e 65642063 68617200 5f5f494e signed char.__IN
  0x000016b0 545f5749 4454485f 5f203332 005f5f55 T_WIDTH__ 32.__U
  0x000016c0 494e5438 5f545950 455f5f20 756e7369 INT8_TYPE__ unsi
  0x000016d0 676e6564 20636861 72005f5f 494e544d gned char.__INTM
  0x000016e0 41585f57 49445448 5f5f2036 34005f5f AX_WIDTH__ 64.__
  0x000016f0 55494e54 4d41585f 54595045 5f5f206c UINTMAX_TYPE__ l
  0x00001700 6f6e6720 756e7369 676e6564 20696e74 ong unsigned int
  0x00001710 005f5f49 4e543136 5f545950 455f5f20 .__INT16_TYPE__ 
  0x00001720 73686f72 7420696e 74005f5f 4743435f short int.__GCC_
  0x00001730 41544f4d 49435f53 484f5254 5f4c4f43 ATOMIC_SHORT_LOC
  0x00001740 4b5f4652 45452032 005f5f44 45433132 K_FREE 2.__DEC12
  0x00001750 385f4d41 585f5f20 392e3939 39393939 8_MAX__ 9.999999
  0x00001760 39393939 39393939 39393939 39393939 9999999999999999
  0x00001770 39393939 39393939 39393945 36313434 99999999999E6144
  0x00001780 444c005f 5f535350 5f535452 4f4e475f DL.__SSP_STRONG_
  0x00001790 5f203300 5f5f5049 455f5f20 32005f5f _ 3.__PIE__ 2.__
  0x000017a0 55494e54 5f4c4541 53543136 5f545950 UINT_LEAST16_TYP
  0x000017b0 455f5f20 73686f72 7420756e 7369676e E__ short unsign
  0x000017c0 65642069 6e74005f 5f494e54 5f464153 ed int.__INT_FAS
  0x000017d0 54385f54 5950455f 5f207369 676e6564 T8_TYPE__ signed
  0x000017e0 20636861 72005f5f 44424c5f 4d41585f  char.__DBL_MAX_
  0x000017f0 4558505f 5f203130 3234005f 5f464c54 EXP__ 1024.__FLT
  0x00001800 3332585f 4d414e54 5f444947 5f5f2035 32X_MANT_DIG__ 5
  0x00001810 33005f5f 464c545f 4556414c 5f4d4554 3.__FLT_EVAL_MET
  0x00001820 484f445f 5f203000 5f5f494e 544d4158 HOD__ 0.__INTMAX
  0x00001830 5f4d4158 5f5f2030 78376666 66666666 _MAX__ 0x7ffffff
  0x00001840 66666666 66666666 664c005f 5f41544f fffffffffL.__ATO
  0x00001850 4d49435f 41435155 49524520 32005f5f MIC_ACQUIRE 2.__
  0x00001860 55494e54 5f464153 5433325f 54595045 UINT_FAST32_TYPE
  0x00001870 5f5f206c 6f6e6720 756e7369 676e6564 __ long unsigned
  0x00001880 20696e74 005f5f46 4c543332 5f444543  int.__FLT32_DEC
  0x00001890 494d414c 5f444947 5f5f2039 005f5f49 IMAL_DIG__ 9.__I
  0x000018a0 4e545f4c 45415354 33325f4d 41585f5f NT_LEAST32_MAX__
  0x000018b0 20307837 66666666 66666600 5f5f4743  0x7fffffff.__GC
  0x000018c0 435f4154 4f4d4943 5f434841 525f4c4f C_ATOMIC_CHAR_LO
  0x000018d0 434b5f46 52454520 32005f5f 44454331 CK_FREE 2.__DEC1
  0x000018e0 32385f45 5053494c 4f4e5f5f 2031452d 28_EPSILON__ 1E-
  0x000018f0 3333444c 005f5f46 4c545f4d 41585f5f 33DL.__FLT_MAX__
  0x00001900 20332e34 30323832 33343636 33383532  3.4028234663852
  0x00001910 38383539 38313137 30343138 33343834 8859811704183484
  0x00001920 35313639 3235652b 33384600 5f5f5349 516925e+38F.__SI
  0x00001930 5a454f46 5f574348 41525f54 5f5f2034 ZEOF_WCHAR_T__ 4
  0x00001940 005f5f46 4c543332 585f4445 43494d41 .__FLT32X_DECIMA
  0x00001950 4c5f4449 475f5f20 3137005f 5f494e54 L_DIG__ 17.__INT
  0x00001960 5f464153 5431365f 54595045 5f5f206c _FAST16_TYPE__ l
  0x00001970 6f6e6720 696e7400 5f5f4445 4333325f ong int.__DEC32_
  0x00001980 4d494e5f 4558505f 5f20282d 39342900 MIN_EXP__ (-94).
  0x00001990 5f5f494e 5433325f 4d41585f 5f203078 __INT32_MAX__ 0x
  0x000019a0 37666666 66666666 005f5f53 495a454f 7fffffff.__SIZEO
  0x000019b0 465f464c 4f415431 32385f5f 20313600 F_FLOAT128__ 16.
  0x000019c0 5f5f464c 5436345f 4d494e5f 31305f45 __FLT64_MIN_10_E
  0x000019d0 58505f5f 20282d33 30372900 5f5f5549 XP__ (-307).__UI
  0x000019e0 4e545f46 41535438 5f545950 455f5f20 NT_FAST8_TYPE__ 
  0x000019f0 756e7369 676e6564 20636861 72005f5f unsigned char.__
  0x00001a00 53544443 5f494543 5f353539 5f5f2031 STDC_IEC_559__ 1
  0x00001a10 005f5f44 45433132 385f5355 424e4f52 .__DEC128_SUBNOR
  0x00001a20 4d414c5f 4d494e5f 5f20302e 30303030 MAL_MIN__ 0.0000
  0x00001a30 30303030 30303030 30303030 30303030 0000000000000000
  0x00001a40 30303030 30303030 30303030 31452d36 0000000000001E-6
  0x00001a50 31343344 4c005f5f 41544f4d 49435f48 143DL.__ATOMIC_H
  0x00001a60 4c455f41 43515549 52452036 35353336 LE_ACQUIRE 65536
  0x00001a70 005f5f41 544f4d49 435f484c 455f5245 .__ATOMIC_HLE_RE
  0x00001a80 4c454153 45203133 31303732 005f5f49 LEASE 131072.__I
  0x00001a90 4e545f46 41535431 365f4d41 585f5f20 NT_FAST16_MAX__ 
  0x00001aa0 30783766 66666666 66666666 66666666 0x7fffffffffffff
  0x00001ab0 66664c00 5f5f494e 545f4c45 41535431 ffL.__INT_LEAST1
  0x00001ac0 365f4d41 585f5f20 30783766 6666005f 6_MAX__ 0x7fff._
  0x00001ad0 5f464c54 3634585f 4d41585f 4558505f _FLT64X_MAX_EXP_
  0x00001ae0 5f203136 33383400 5f5f4445 43313238 _ 16384.__DEC128
  0x00001af0 5f4d414e 545f4449 475f5f20 3334005f _MANT_DIG__ 34._
  0x00001b00 5f4c4f4e 475f5749 4454485f 5f203634 _LONG_WIDTH__ 64
  0x00001b10 005f5f53 495a455f 57494454 485f5f20 .__SIZE_WIDTH__ 
  0x00001b20 3634005f 5f464c54 3132385f 44454349 64.__FLT128_DECI
  0x00001b30 4d414c5f 4449475f 5f203336 005f5f57 MAL_DIG__ 36.__W
  0x00001b40 43484152 5f4d494e 5f5f2028 2d5f5f57 CHAR_MIN__ (-__W
  0x00001b50 43484152 5f4d4158 5f5f202d 20312900 CHAR_MAX__ - 1).
  0x00001b60 5f5f4743 435f4841 56455f53 594e435f __GCC_HAVE_SYNC_
  0x00001b70 434f4d50 4152455f 414e445f 53574150 COMPARE_AND_SWAP
  0x00001b80 5f322031 005f5f4c 44424c5f 4d41585f _2 1.__LDBL_MAX_
  0x00001b90 4558505f 5f203136 33383400 5f5f464c EXP__ 16384.__FL
  0x00001ba0 54363458 5f444947 5f5f2031 38005f5f T64X_DIG__ 18.__
  0x00001bb0 464c5433 32585f44 49475f5f 20313500 FLT32X_DIG__ 15.
  0x00001bc0 5f5f6b38 5f5f2031 005f5f43 48415233 __k8__ 1.__CHAR3
  0x00001bd0 325f5459 50455f5f 20756e73 69676e65 2_TYPE__ unsigne
  0x00001be0 6420696e 74005f5f 464c5436 34585f4d d int.__FLT64X_M
  0x00001bf0 494e5f31 305f4558 505f5f20 282d3439 IN_10_EXP__ (-49
  0x00001c00 33312900 5f5f7069 655f5f20 32005f5f 31).__pie__ 2.__
  0x00001c10 494e545f 4c454153 54385f54 5950455f INT_LEAST8_TYPE_
  0x00001c20 5f207369 676e6564 20636861 72005f5f _ signed char.__
  0x00001c30 55494e54 31365f43 28632920 63005f5f UINT16_C(c) c.__
  0x00001c40 53485254 5f4d4158 5f5f2030 78376666 SHRT_MAX__ 0x7ff
  0x00001c50 66005f5f 616d6436 345f5f20 31005f5f f.__amd64__ 1.__
  0x00001c60 53495a45 4f465f46 4c4f4154 5f5f2034 SIZEOF_FLOAT__ 4
  0x00001c70 005f5f47 43435f48 4156455f 53594e43 .__GCC_HAVE_SYNC
  0x00001c80 5f434f4d 50415245 5f414e44 5f535741 _COMPARE_AND_SWA
  0x00001c90 505f3820 31005f5f 57434841 525f4d41 P_8 1.__WCHAR_MA
  0x00001ca0 585f5f20 30783766 66666666 66660066 X__ 0x7fffffff.f
  0x00001cb0 6c616700 5f5f5354 44435f5f 2031005f lag.__STDC__ 1._
  0x00001cc0 5f4f5244 45525f50 44505f45 4e444941 _ORDER_PDP_ENDIA
  0x00001cd0 4e5f5f20 33343132 005f5f47 43435f41 N__ 3412.__GCC_A
  0x00001ce0 544f4d49 435f504f 494e5445 525f4c4f TOMIC_POINTER_LO
  0x00001cf0 434b5f46 52454520 32005f5f 4f524445 CK_FREE 2.__ORDE
  0x00001d00 525f4c49 54544c45 5f454e44 49414e5f R_LITTLE_ENDIAN_
  0x00001d10 5f203132 3334005f 5f57494e 545f5459 _ 1234.__WINT_TY
  0x00001d20 50455f5f 20756e73 69676e65 6420696e PE__ unsigned in
  0x00001d30 74005f5f 41544f4d 49435f52 454c4158 t.__ATOMIC_RELAX
  0x00001d40 45442030 005f5f46 494e4954 455f4d41 ED 0.__FINITE_MA
  0x00001d50 54485f4f 4e4c595f 5f203000 5f5f6c69 TH_ONLY__ 0.__li
  0x00001d60 6e757820 31005f5f 7838365f 36345f5f nux 1.__x86_64__
  0x00001d70 2031005f 5f444543 33325f4d 414e545f  1.__DEC32_MANT_
  0x00001d80 4449475f 5f203700 5f5f4445 4336345f DIG__ 7.__DEC64_
  0x00001d90 45505349 4c4f4e5f 5f203145 2d313544 EPSILON__ 1E-15D
  0x00001da0 44005f5f 53534532 5f4d4154 485f5f20 D.__SSE2_MATH__ 
  0x00001db0 31005f5f 4743435f 4945435f 35353920 1.__GCC_IEC_559 
  0x00001dc0 32005f5f 55494e54 5f464153 5433325f 2.__UINT_FAST32_
  0x00001dd0 4d41585f 5f203078 66666666 66666666 MAX__ 0xffffffff
  0x00001de0 66666666 66666666 554c005f 5f464c54 ffffffffUL.__FLT
  0x00001df0 3332585f 44454e4f 524d5f4d 494e5f5f 32X_DENORM_MIN__
  0x00001e00 20342e39 34303635 36343538 34313234  4.9406564584124
  0x00001e10 36353434 31373635 36383739 32383638 6544176568792868
  0x00001e20 32323133 3732652d 33323446 33327800 221372e-324F32x.
  0x00001e30 5f5f4d4d 585f5f20 31005f5f 494e5436 __MMX__ 1.__INT6
  0x00001e40 345f4d41 585f5f20 30783766 66666666 4_MAX__ 0x7fffff
  0x00001e50 66666666 66666666 66664c00 5f5f464c ffffffffffL.__FL
  0x00001e60 54363458 5f455053 494c4f4e 5f5f2031 T64X_EPSILON__ 1
  0x00001e70 2e303834 32303231 37323438 35353034 .084202172485504
  0x00001e80 34333430 30373435 32383030 38363939 4340074528008699
  0x00001e90 34313731 652d3139 46363478 005f5f50 4171e-19F64x.__P
  0x00001ea0 54524449 46465f4d 41585f5f 20307837 TRDIFF_MAX__ 0x7
  0x00001eb0 66666666 66666666 66666666 6666664c fffffffffffffffL
  0x00001ec0 005f5f53 45475f47 53203100 5f5f5349 .__SEG_GS 1.__SI
  0x00001ed0 475f4154 4f4d4943 5f4d4158 5f5f2030 G_ATOMIC_MAX__ 0
  0x00001ee0 78376666 66666666 66005f5f 7838365f x7fffffff.__x86_
  0x00001ef0 36342031 005f5f53 5444435f 4e4f5f54 64 1.__STDC_NO_T
  0x00001f00 48524541 44535f5f 2031005f 5f55494e HREADS__ 1.__UIN
  0x00001f10 545f4641 53543136 5f545950 455f5f20 T_FAST16_TYPE__ 
  0x00001f20 6c6f6e67 20756e73 69676e65 6420696e long unsigned in
  0x00001f30 74005f5f 464c5433 32585f48 41535f49 t.__FLT32X_HAS_I
  0x00001f40 4e46494e 4954595f 5f203100 5f5f494e NFINITY__ 1.__IN
  0x00001f50 545f4641 53543136 5f574944 54485f5f T_FAST16_WIDTH__
  0x00001f60 20363400 5f5f464c 5433325f 4841535f  64.__FLT32_HAS_
  0x00001f70 44454e4f 524d5f5f 2031005f 5f464c54 DENORM__ 1.__FLT
  0x00001f80 5f524144 49585f5f 2032005f 5f464c54 _RADIX__ 2.__FLT
  0x00001f90 36345f4d 414e545f 4449475f 5f203533 64_MANT_DIG__ 53
  0x00001fa0 005f5f46 4c545f48 41535f49 4e46494e .__FLT_HAS_INFIN
  0x00001fb0 4954595f 5f203100 5f5f5349 475f4154 ITY__ 1.__SIG_AT
  0x00001fc0 4f4d4943 5f574944 54485f5f 20333200 OMIC_WIDTH__ 32.
  0x00001fd0 5f5f494e 545f4641 53543332 5f4d4158 __INT_FAST32_MAX
  0x00001fe0 5f5f2030 78376666 66666666 66666666 __ 0x7ffffffffff
  0x00001ff0 66666666 664c005f 5f464c54 36345f44 fffffL.__FLT64_D
  0x00002000 4543494d 414c5f44 49475f5f 20313700 ECIMAL_DIG__ 17.
  0x00002010 5f5f4c4f 4e475f4c 4f4e475f 57494454 __LONG_LONG_WIDT
  0x00002020 485f5f20 3634005f 5f464c54 36345f44 H__ 64.__FLT64_D
  0x00002030 454e4f52 4d5f4d49 4e5f5f20 342e3934 ENORM_MIN__ 4.94
  0x00002040 30363536 34353834 31323436 35343431 0656458412465441
  0x00002050 37363536 38373932 38363832 32313337 7656879286822137
  0x00002060 32652d33 32344636 34006275 66666572 2e-324F64.buffer
  0x00002070 00737461 636b5f65 78616d70 6c652e63 .stack_example.c
  0x00002080 005f5f46 4c545f45 5053494c 4f4e5f5f .__FLT_EPSILON__
  0x00002090 20312e31 39323039 32383935 35303738  1.1920928955078
  0x000020a0 31323530 30303030 30303030 30303030 1250000000000000
  0x000020b0 30303030 3030652d 3746005f 5f464c54 000000e-7F.__FLT
  0x000020c0 3634585f 4d41585f 5f20312e 31383937 64X_MAX__ 1.1897
  0x000020d0 33313439 35333537 32333137 36353032 3149535723176502
  0x000020e0 31323633 38353330 33303937 30323165 126385303097021e
  0x000020f0 2b343933 32463634 78005f5f 53544443 +4932F64x.__STDC
  0x00002100 5f555446 5f31365f 5f203100 5f5f494e _UTF_16__ 1.__IN
  0x00002110 544d4158 5f545950 455f5f20 6c6f6e67 TMAX_TYPE__ long
  0x00002120 20696e74 005f5f4c 44424c5f 4841535f  int.__LDBL_HAS_
  0x00002130 44454e4f 524d5f5f 2031005f 5f4c4442 DENORM__ 1.__LDB
  0x00002140 4c5f4d41 4e545f44 49475f5f 20363400 L_MANT_DIG__ 64.
  0x00002150 5f5f6861 735f696e 636c7564 65285354 __has_include(ST
  0x00002160 5229205f 5f686173 5f696e63 6c756465 R) __has_include
  0x00002170 5f5f2853 54522900 5f5f4743 435f4154 __(STR).__GCC_AT
  0x00002180 4f4d4943 5f434841 5231365f 545f4c4f OMIC_CHAR16_T_LO
  0x00002190 434b5f46 52454520 32005f5f 44454333 CK_FREE 2.__DEC3
  0x000021a0 325f4550 53494c4f 4e5f5f20 31452d36 2_EPSILON__ 1E-6
  0x000021b0 4446005f 5f53495a 454f465f 464c4f41 DF.__SIZEOF_FLOA
  0x000021c0 5438305f 5f203136 005f5f52 45474953 T80__ 16.__REGIS
  0x000021d0 5445525f 50524546 49585f5f 20005f5f TER_PREFIX__ .__
  0x000021e0 41544f4d 49435f43 4f4e5355 4d452031 ATOMIC_CONSUME 1
  0x000021f0 005f5f55 494e5436 345f4d41 585f5f20 .__UINT64_MAX__ 
  0x00002200 30786666 66666666 66666666 66666666 0xffffffffffffff
  0x00002210 6666554c 005f5f53 5444435f 5554465f ffUL.__STDC_UTF_
  0x00002220 33325f5f 2031005f 5f55494e 5431365f 32__ 1.__UINT16_
  0x00002230 54595045 5f5f2073 686f7274 20756e73 TYPE__ short uns
  0x00002240 69676e65 6420696e 74005f5f 464c5436 igned int.__FLT6
  0x00002250 34585f4d 41585f31 305f4558 505f5f20 4X_MAX_10_EXP__ 
  0x00002260 34393332 005f5f55 494e5433 325f4328 4932.__UINT32_C(
  0x00002270 63292063 20232320 55005f5f 6b382031 c) c ## U.__k8 1
  0x00002280 005f5f53 45475f46 53203100 5f5f5549 .__SEG_FS 1.__UI
  0x00002290 4e544d41 585f4328 63292063 20232320 NTMAX_C(c) c ## 
  0x000022a0 554c005f 5f475858 5f414249 5f564552 UL.__GXX_ABI_VER
  0x000022b0 53494f4e 20313031 31005f5f 53495a45 SION 1011.__SIZE
  0x000022c0 4f465f50 54524449 46465f54 5f5f2038 OF_PTRDIFF_T__ 8
  0x000022d0 005f5f43 4841525f 4249545f 5f203800 .__CHAR_BIT__ 8.
  0x000022e0 5f5f5349 475f4154 4f4d4943 5f4d494e __SIG_ATOMIC_MIN
  0x000022f0 5f5f2028 2d5f5f53 49475f41 544f4d49 __ (-__SIG_ATOMI
  0x00002300 435f4d41 585f5f20 2d203129 005f5f49 C_MAX__ - 1).__I
  0x00002310 4e545f46 41535436 345f5749 4454485f NT_FAST64_WIDTH_
  0x00002320 5f203634 005f5f46 4c543132 385f4445 _ 64.__FLT128_DE
  0x00002330 4e4f524d 5f4d494e 5f5f2036 2e343735 NORM_MIN__ 6.475
  0x00002340 31373531 31393433 38303235 31313039 1751194380251109
  0x00002350 32343433 38393538 32323736 34363535 2443895822764655
  0x00002360 652d3439 36364631 3238005f 5f55494e e-4966F128.__UIN
  0x00002370 545f4c45 41535433 325f5459 50455f5f T_LEAST32_TYPE__
  0x00002380 20756e73 69676e65 6420696e 74005f5f  unsigned int.__
  0x00002390 44424c5f 4841535f 44454e4f 524d5f5f DBL_HAS_DENORM__
  0x000023a0 2031005f 5f464c54 3132385f 4d414e54  1.__FLT128_MANT
  0x000023b0 5f444947 5f5f2031 3133005f 5f464c54 _DIG__ 113.__FLT
  0x000023c0 36345f44 49475f5f 20313500 5f5f5549 64_DIG__ 15.__UI
  0x000023d0 4e544d41 585f4d41 585f5f20 30786666 NTMAX_MAX__ 0xff
  0x000023e0 66666666 66666666 66666666 6666554c ffffffffffffffUL
  0x000023f0 005f5f47 43435f48 4156455f 53594e43 .__GCC_HAVE_SYNC
  0x00002400 5f434f4d 50415245 5f414e44 5f535741 _COMPARE_AND_SWA
  0x00002410 505f3120 31005f5f 44424c5f 4d41585f P_1 1.__DBL_MAX_
  0x00002420 5f202828 646f7562 6c652931 2e373937 _ ((double)1.797
  0x00002430 36393331 33343836 32333135 37303831 6931348623157081
  0x00002440 34353237 34323337 33313730 34333537 4527423731704357
  0x00002450 652b3330 384c2900 5f5f494e 54385f4d e+308L).__INT8_M
  0x00002460 41585f5f 20307837 66005f5f 55494e54 AX__ 0x7f.__UINT
  0x00002470 5f464153 54385f4d 41585f5f 20307866 _FAST8_MAX__ 0xf
  0x00002480 66005f5f 44424c5f 4841535f 51554945 f.__DBL_HAS_QUIE
  0x00002490 545f4e41 4e5f5f20 31005f5f 464c545f T_NAN__ 1.__FLT_
  0x000024a0 4d494e5f 31305f45 58505f5f 20282d33 MIN_10_EXP__ (-3
  0x000024b0 3729005f 5f474343 5f41544f 4d49435f 7).__GCC_ATOMIC_
  0x000024c0 54455354 5f414e44 5f534554 5f545255 TEST_AND_SET_TRU
  0x000024d0 4556414c 2031005f 5f464c54 3634585f EVAL 1.__FLT64X_
  0x000024e0 44454349 4d414c5f 4449475f 5f203231 DECIMAL_DIG__ 21
  0x000024f0 005f5f41 544f4d49 435f4143 515f5245 .__ATOMIC_ACQ_RE
  0x00002500 4c203400 5f5f5743 4841525f 54595045 L 4.__WCHAR_TYPE
  0x00002510 5f5f2069 6e74005f 53544443 5f505245 __ int._STDC_PRE
  0x00002520 4445465f 48203100 5f5f494e 545f4641 DEF_H 1.__INT_FA
  0x00002530 5354385f 57494454 485f5f20 38005f5f ST8_WIDTH__ 8.__
  0x00002540 464c5431 32385f4d 41585f31 305f4558 FLT128_MAX_10_EX
  0x00002550 505f5f20 34393332 005f5f55 5345525f P__ 4932.__USER_
  0x00002560 4c414245 4c5f5052 45464958 5f5f2000 LABEL_PREFIX__ .
  0x00002570 74657374 5f66756e 6374696f 6e005f5f test_function.__
  0x00002580 464c5433 325f4d49 4e5f4558 505f5f20 FLT32_MIN_EXP__ 
  0x00002590 282d3132 3529005f 5f434841 5231365f (-125).__CHAR16_
  0x000025a0 54595045 5f5f2073 686f7274 20756e73 TYPE__ short uns
  0x000025b0 69676e65 6420696e 74005f5f 55494e54 igned int.__UINT
  0x000025c0 385f4328 63292063 005f5f46 4c543132 8_C(c) c.__FLT12
  0x000025d0 385f4449 475f5f20 3333005f 5f55494e 8_DIG__ 33.__UIN
  0x000025e0 545f4c45 41535438 5f545950 455f5f20 T_LEAST8_TYPE__ 
  0x000025f0 756e7369 676e6564 20636861 72005f5f unsigned char.__
  0x00002600 494e5436 345f5459 50455f5f 206c6f6e INT64_TYPE__ lon
  0x00002610 6720696e 74005f5f 494e545f 4c454153 g int.__INT_LEAS
  0x00002620 5436345f 57494454 485f5f20 3634005f T64_WIDTH__ 64._
  0x00002630 5f4c4442 4c5f4449 475f5f20 3138006d _LDBL_DIG__ 18.m
  0x00002640 61696e00 5f5f5549 4e543332 5f4d4158 ain.__UINT32_MAX
  0x00002650 5f5f2030 78666666 66666666 6655005f __ 0xffffffffU._
  0x00002660 5f474343 5f484156 455f4457 41524632 _GCC_HAVE_DWARF2
  0x00002670 5f434649 5f41534d 2031005f 5f494e54 _CFI_ASM 1.__INT
  0x00002680 5f4c4541 5354385f 4d41585f 5f203078 _LEAST8_MAX__ 0x
  0x00002690 3766005f 5f444543 36345f4d 494e5f5f 7f.__DEC64_MIN__
  0x000026a0 2031452d 33383344 44005f5f 44424c5f  1E-383DD.__DBL_
  0x000026b0 4d494e5f 31305f45 58505f5f 20282d33 MIN_10_EXP__ (-3
  0x000026c0 30372900 5f5f4445 43494d41 4c5f4249 07).__DECIMAL_BI
  0x000026d0 445f464f 524d4154 5f5f2031 005f5f47 D_FORMAT__ 1.__G
  0x000026e0 4e55435f 53544443 5f494e4c 494e455f NUC_STDC_INLINE_
  0x000026f0 5f203100 5f5f464c 5436345f 4d41585f _ 1.__FLT64_MAX_
  0x00002700 31305f45 58505f5f 20333038 005f5f46 10_EXP__ 308.__F
  0x00002710 4c545f4d 414e545f 4449475f 5f203234 LT_MANT_DIG__ 24
  0x00002720 00                                  .

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4
  Offset into .debug_line:     0x0

 DW_MACRO_import - offset : 0x1a
 DW_MACRO_start_file - lineno: 0 filenum: 1 filename: stack_example.c
 DW_MACRO_start_file - lineno: 31 filenum: 2 filename: /usr/x86_64-linux-gnu/include/stdc-predef.h
 DW_MACRO_import - offset : 0x822
 DW_MACRO_end_file
 DW_MACRO_end_file

  Offset:                      0x1a
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 0 macro : __STDC__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_VERSION__ 201112L
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_16__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_32__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_HOSTED__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_MINOR__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_PATCHLEVEL__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __VERSION__ "7.3.0"
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELAXED 0
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_SEQ_CST 5
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQUIRE 2
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELEASE 3
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQ_REL 4
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_CONSUME 1
 DW_MACRO_define_strp - lineno : 0 macro : __pic__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIC__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __pie__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIE__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FINITE_MATH_ONLY__ 0
 DW_MACRO_define_strp - lineno : 0 macro : _LP64 1
 DW_MACRO_define_strp - lineno : 0 macro : __LP64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SHORT__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_DOUBLE__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_DOUBLE__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SIZE_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR_BIT__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __BIGGEST_ALIGNMENT__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_LITTLE_ENDIAN__ 1234
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_BIG_ENDIAN__ 4321
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_PDP_ENDIAN__ 3412
 DW_MACRO_define_strp - lineno : 0 macro : __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_POINTER__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __has_include(STR) __has_include__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __has_include_next(STR) __has_include_next__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __GXX_ABI_VERSION 1011
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_MAX__ 0x7fffffffffffffffLL
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MIN__ 0U
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_C(c) c ## U
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559_COMPLEX 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD_TS_18661_3__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __DEC_EVAL_METHOD__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_RADIX__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MANT_DIG__ 113
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DIG__ 33
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DECIMAL_DIG__ 36
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MANT_DIG__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN_EXP__ (-94)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX_EXP__ 97
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN__ 1E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX__ 9.999999E96DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_EPSILON__ 1E-6DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MANT_DIG__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN_EXP__ (-382)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX_EXP__ 385
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN__ 1E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX__ 9.999999999999999E384DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_EPSILON__ 1E-15DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MANT_DIG__ 34
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN_EXP__ (-6142)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX_EXP__ 6145
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN__ 1E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_EPSILON__ 1E-33DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __REGISTER_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __USER_LABEL_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_STDC_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __NO_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_BOOL_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_SHORT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_INT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LLONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_POINTER_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_DWARF2_CFI_ASM 1
 DW_MACRO_define_strp - lineno : 0 macro : __PRAGMA_REDEFINE_EXTNAME 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSP_STRONG__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WCHAR_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WINT_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_PTRDIFF_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __amd64 1
 DW_MACRO_define_strp - lineno : 0 macro : __amd64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT80__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_ACQUIRE 65536
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_RELEASE 131072
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ASM_FLAG_OUTPUTS__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __code_model_small__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __MMX__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FXSR__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_FS 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_GS 1
 DW_MACRO_define_strp - lineno : 0 macro : __gnu_linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix__ 1
 DW_MACRO_define_strp - lineno : 0 macro : unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __ELF__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_BID_FORMAT__ 1

  Offset:                      0x822
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _STDC_PREDEF_H 1
 DW_MACRO_define_strp - lineno : 38 macro : __STDC_IEC_559__ 1
 DW_MACRO_define_strp - lineno : 46 macro : __STDC_IEC_559_COMPLEX__ 1
 DW_MACRO_define_strp - lineno : 58 macro : __STDC_ISO_10646__ 201706L
 DW_MACRO_define_strp - lineno : 61 macro : __STDC_NO_THREADS__ 1


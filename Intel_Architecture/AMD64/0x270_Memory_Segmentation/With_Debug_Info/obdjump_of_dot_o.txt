
stack_example.o:     file format elf64-x86-64
stack_example.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .group        0000000c  0000000000000000  0000000000000000  00000040  2**2
                  CONTENTS, READONLY, GROUP, LINK_ONCE_DISCARD
  1 .group        0000000c  0000000000000000  0000000000000000  0000004c  2**2
                  CONTENTS, READONLY, GROUP, LINK_ONCE_DISCARD
  2 .text         00000069  0000000000000000  0000000000000000  00000058  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  3 .data         00000000  0000000000000000  0000000000000000  000000c1  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000000  0000000000000000  0000000000000000  000000c1  2**0
                  ALLOC
  5 .debug_info   000000de  0000000000000000  0000000000000000  000000c1  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  6 .debug_abbrev 0000008f  0000000000000000  0000000000000000  0000019f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000030  0000000000000000  0000000000000000  0000022e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  8 .debug_macro  0000001a  0000000000000000  0000000000000000  0000025e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  9 .debug_macro  00000808  0000000000000000  0000000000000000  00000278  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 10 .debug_macro  00000022  0000000000000000  0000000000000000  00000a80  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 11 .debug_line   0000007a  0000000000000000  0000000000000000  00000aa2  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 12 .debug_str    00002747  0000000000000000  0000000000000000  00000b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      0000002b  0000000000000000  0000000000000000  00003263  2**0
                  CONTENTS, READONLY
 14 .note.GNU-stack 00000000  0000000000000000  0000000000000000  0000328e  2**0
                  CONTENTS, READONLY
 15 .eh_frame     00000058  0000000000000000  0000000000000000  00003290  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 stack_example.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_macro	0000000000000000 .debug_macro
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .debug_macro	0000000000000000 .debug_macro
0000000000000000 l    d  .debug_macro	0000000000000000 .debug_macro
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l       .group	0000000000000000 wm4.0.52c9fc51a3c7999e669b5384b1132782
0000000000000000 l       .group	0000000000000000 wm4.stdcpredef.h.19.006d14bbbe0dc07ba9b1ce3fdc8e40d3
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .group	0000000000000000 .group
0000000000000000 l    d  .group	0000000000000000 .group
0000000000000000 g     F .text	0000000000000045 test_function
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 __stack_chk_fail
0000000000000045 g     F .text	0000000000000024 main


Contents of section .group:
 0000 01000000 0e000000 0f000000           ............    
Contents of section .group:
 0000 01000000 10000000 11000000           ............    
Contents of section .text:
 0000 554889e5 4883ec30 897ddc89 75d88955  UH..H..0.}..u..U
 0010 d4894dd0 64488b04 25280000 00488945  ..M.dH..%(...H.E
 0020 f831c0c7 45e8697a 0000c645 ee419048  .1..E.iz...E.A.H
 0030 8b45f864 48330425 28000000 7405e800  .E.dH3.%(...t...
 0040 000000c9 c3554889 e5b90400 0000ba03  .....UH.........
 0050 000000be 02000000 bf010000 00e80000  ................
 0060 0000b800 0000005d c3                 .......].       
Contents of section .debug_info:
 0000 da000000 04000000 00000801 00000000  ................
 0010 0c000000 00000000 00000000 00000000  ................
 0020 00690000 00000000 00000000 00000000  .i..............
 0030 00020000 00000109 4e000000 00000000  ........N.......
 0040 00000000 24000000 00000000 019c0304  ....$...........
 0050 05696e74 00040000 00000101 00000000  .int............
 0060 00000000 45000000 00000000 019cbf00  ....E...........
 0070 00000561 0001014e 00000002 914c0562  ...a...N.....L.b
 0080 0001014e 00000002 91480563 0001014e  ...N.....H.c...N
 0090 00000002 91440564 0001014e 00000002  .....D.d...N....
 00a0 91400600 00000001 024e0000 00029158  .@.......N.....X
 00b0 06000000 000103bf 00000002 915e0007  .............^..
 00c0 d6000000 cf000000 08cf0000 00090009  ................
 00d0 08070000 00000901 06000000 0000      ..............  
Contents of section .debug_abbrev:
 0000 01110125 0e130b03 0e1b0e11 01120710  ...%............
 0010 17994217 0000022e 003f1903 0e3a0b3b  ..B......?...:.;
 0020 0b491311 01120740 18964219 00000324  .I.....@..B....$
 0030 000b0b3e 0b030800 00042e01 3f19030e  ...>........?...
 0040 3a0b3b0b 27191101 12074018 96421901  :.;.'.....@..B..
 0050 13000005 05000308 3a0b3b0b 49130218  ........:.;.I...
 0060 00000634 00030e3a 0b3b0b49 13021800  ...4...:.;.I....
 0070 00070101 49130113 00000821 0049132f  ....I......!.I./
 0080 0b000009 24000b0b 3e0b030e 000000    ....$...>...... 
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 00000000 00000000 69000000 00000000  ........i.......
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_macro:
 0000 04000200 00000007 00000000 03000103  ................
 0010 1f020700 00000004 0400               ..........      
Contents of section .debug_macro:
 0000 04000005 00000000 00050000 00000005  ................
 0010 00000000 00050000 00000005 00000000  ................
 0020 00050000 00000005 00000000 00050000  ................
 0030 00000005 00000000 00050000 00000005  ................
 0040 00000000 00050000 00000005 00000000  ................
 0050 00050000 00000005 00000000 00050000  ................
 0060 00000005 00000000 00050000 00000005  ................
 0070 00000000 00050000 00000005 00000000  ................
 0080 00050000 00000005 00000000 00050000  ................
 0090 00000005 00000000 00050000 00000005  ................
 00a0 00000000 00050000 00000005 00000000  ................
 00b0 00050000 00000005 00000000 00050000  ................
 00c0 00000005 00000000 00050000 00000005  ................
 00d0 00000000 00050000 00000005 00000000  ................
 00e0 00050000 00000005 00000000 00050000  ................
 00f0 00000005 00000000 00050000 00000005  ................
 0100 00000000 00050000 00000005 00000000  ................
 0110 00050000 00000005 00000000 00050000  ................
 0120 00000005 00000000 00050000 00000005  ................
 0130 00000000 00050000 00000005 00000000  ................
 0140 00050000 00000005 00000000 00050000  ................
 0150 00000005 00000000 00050000 00000005  ................
 0160 00000000 00050000 00000005 00000000  ................
 0170 00050000 00000005 00000000 00050000  ................
 0180 00000005 00000000 00050000 00000005  ................
 0190 00000000 00050000 00000005 00000000  ................
 01a0 00050000 00000005 00000000 00050000  ................
 01b0 00000005 00000000 00050000 00000005  ................
 01c0 00000000 00050000 00000005 00000000  ................
 01d0 00050000 00000005 00000000 00050000  ................
 01e0 00000005 00000000 00050000 00000005  ................
 01f0 00000000 00050000 00000005 00000000  ................
 0200 00050000 00000005 00000000 00050000  ................
 0210 00000005 00000000 00050000 00000005  ................
 0220 00000000 00050000 00000005 00000000  ................
 0230 00050000 00000005 00000000 00050000  ................
 0240 00000005 00000000 00050000 00000005  ................
 0250 00000000 00050000 00000005 00000000  ................
 0260 00050000 00000005 00000000 00050000  ................
 0270 00000005 00000000 00050000 00000005  ................
 0280 00000000 00050000 00000005 00000000  ................
 0290 00050000 00000005 00000000 00050000  ................
 02a0 00000005 00000000 00050000 00000005  ................
 02b0 00000000 00050000 00000005 00000000  ................
 02c0 00050000 00000005 00000000 00050000  ................
 02d0 00000005 00000000 00050000 00000005  ................
 02e0 00000000 00050000 00000005 00000000  ................
 02f0 00050000 00000005 00000000 00050000  ................
 0300 00000005 00000000 00050000 00000005  ................
 0310 00000000 00050000 00000005 00000000  ................
 0320 00050000 00000005 00000000 00050000  ................
 0330 00000005 00000000 00050000 00000005  ................
 0340 00000000 00050000 00000005 00000000  ................
 0350 00050000 00000005 00000000 00050000  ................
 0360 00000005 00000000 00050000 00000005  ................
 0370 00000000 00050000 00000005 00000000  ................
 0380 00050000 00000005 00000000 00050000  ................
 0390 00000005 00000000 00050000 00000005  ................
 03a0 00000000 00050000 00000005 00000000  ................
 03b0 00050000 00000005 00000000 00050000  ................
 03c0 00000005 00000000 00050000 00000005  ................
 03d0 00000000 00050000 00000005 00000000  ................
 03e0 00050000 00000005 00000000 00050000  ................
 03f0 00000005 00000000 00050000 00000005  ................
 0400 00000000 00050000 00000005 00000000  ................
 0410 00050000 00000005 00000000 00050000  ................
 0420 00000005 00000000 00050000 00000005  ................
 0430 00000000 00050000 00000005 00000000  ................
 0440 00050000 00000005 00000000 00050000  ................
 0450 00000005 00000000 00050000 00000005  ................
 0460 00000000 00050000 00000005 00000000  ................
 0470 00050000 00000005 00000000 00050000  ................
 0480 00000005 00000000 00050000 00000005  ................
 0490 00000000 00050000 00000005 00000000  ................
 04a0 00050000 00000005 00000000 00050000  ................
 04b0 00000005 00000000 00050000 00000005  ................
 04c0 00000000 00050000 00000005 00000000  ................
 04d0 00050000 00000005 00000000 00050000  ................
 04e0 00000005 00000000 00050000 00000005  ................
 04f0 00000000 00050000 00000005 00000000  ................
 0500 00050000 00000005 00000000 00050000  ................
 0510 00000005 00000000 00050000 00000005  ................
 0520 00000000 00050000 00000005 00000000  ................
 0530 00050000 00000005 00000000 00050000  ................
 0540 00000005 00000000 00050000 00000005  ................
 0550 00000000 00050000 00000005 00000000  ................
 0560 00050000 00000005 00000000 00050000  ................
 0570 00000005 00000000 00050000 00000005  ................
 0580 00000000 00050000 00000005 00000000  ................
 0590 00050000 00000005 00000000 00050000  ................
 05a0 00000005 00000000 00050000 00000005  ................
 05b0 00000000 00050000 00000005 00000000  ................
 05c0 00050000 00000005 00000000 00050000  ................
 05d0 00000005 00000000 00050000 00000005  ................
 05e0 00000000 00050000 00000005 00000000  ................
 05f0 00050000 00000005 00000000 00050000  ................
 0600 00000005 00000000 00050000 00000005  ................
 0610 00000000 00050000 00000005 00000000  ................
 0620 00050000 00000005 00000000 00050000  ................
 0630 00000005 00000000 00050000 00000005  ................
 0640 00000000 00050000 00000005 00000000  ................
 0650 00050000 00000005 00000000 00050000  ................
 0660 00000005 00000000 00050000 00000005  ................
 0670 00000000 00050000 00000005 00000000  ................
 0680 00050000 00000005 00000000 00050000  ................
 0690 00000005 00000000 00050000 00000005  ................
 06a0 00000000 00050000 00000005 00000000  ................
 06b0 00050000 00000005 00000000 00050000  ................
 06c0 00000005 00000000 00050000 00000005  ................
 06d0 00000000 00050000 00000005 00000000  ................
 06e0 00050000 00000005 00000000 00050000  ................
 06f0 00000005 00000000 00050000 00000005  ................
 0700 00000000 00050000 00000005 00000000  ................
 0710 00050000 00000005 00000000 00050000  ................
 0720 00000005 00000000 00050000 00000005  ................
 0730 00000000 00050000 00000005 00000000  ................
 0740 00050000 00000005 00000000 00050000  ................
 0750 00000005 00000000 00050000 00000005  ................
 0760 00000000 00050000 00000005 00000000  ................
 0770 00050000 00000005 00000000 00050000  ................
 0780 00000005 00000000 00050000 00000005  ................
 0790 00000000 00050000 00000005 00000000  ................
 07a0 00050000 00000005 00000000 00050000  ................
 07b0 00000005 00000000 00050000 00000005  ................
 07c0 00000000 00050000 00000005 00000000  ................
 07d0 00050000 00000005 00000000 00050000  ................
 07e0 00000005 00000000 00050000 00000005  ................
 07f0 00000000 00050000 00000005 00000000  ................
 0800 00050000 00000000                    ........        
Contents of section .debug_macro:
 0000 04000005 13000000 00052600 00000005  ..........&.....
 0010 2e000000 00053a00 00000005 3d000000  ......:.....=...
 0020 0000                                 ..              
Contents of section .debug_line:
 0000 76000000 02005500 00000101 fb0e0d00  v.....U.........
 0010 01010101 00000001 0000012f 7573722f  .........../usr/
 0020 7838365f 36342d6c 696e7578 2d676e75  x86_64-linux-gnu
 0030 2f696e63 6c756465 00007374 61636b5f  /include..stack_
 0040 6578616d 706c652e 63000000 00737464  example.c....std
 0050 632d7072 65646566 2e680001 00000000  c-predef.h......
 0060 09020000 00000000 00000108 3ce8754b  ............<.uK
 0070 08684b08 c9020200 0101               .hK.......      
Contents of section .debug_str:
 0000 5f5f5549 4e545f4c 45415354 385f4d41  __UINT_LEAST8_MA
 0010 585f5f20 30786666 005f5f46 4c543634  X__ 0xff.__FLT64
 0020 5f484153 5f44454e 4f524d5f 5f203100  _HAS_DENORM__ 1.
 0030 5f5f464c 54363458 5f4d414e 545f4449  __FLT64X_MANT_DI
 0040 475f5f20 3634005f 5f464c54 33325f44  G__ 64.__FLT32_D
 0050 49475f5f 2036005f 5f464c54 3634585f  IG__ 6.__FLT64X_
 0060 4d494e5f 4558505f 5f20282d 31363338  MIN_EXP__ (-1638
 0070 3129005f 5f55494e 545f4c45 41535433  1).__UINT_LEAST3
 0080 325f4d41 585f5f20 30786666 66666666  2_MAX__ 0xffffff
 0090 66665500 5f5f5349 5a454f46 5f53495a  ffU.__SIZEOF_SIZ
 00a0 455f545f 5f203800 5f5f4743 435f4154  E_T__ 8.__GCC_AT
 00b0 4f4d4943 5f4c4f4e 475f4c4f 434b5f46  OMIC_LONG_LOCK_F
 00c0 52454520 32005f5f 464c5433 32585f48  REE 2.__FLT32X_H
 00d0 41535f44 454e4f52 4d5f5f20 31005f5f  AS_DENORM__ 1.__
 00e0 756e6978 2031005f 5f535444 435f5645  unix 1.__STDC_VE
 00f0 5253494f 4e5f5f20 32303131 31324c00  RSION__ 201112L.
 0100 5f5f5349 5a454f46 5f504f49 4e544552  __SIZEOF_POINTER
 0110 5f5f2038 005f5f57 43484152 5f574944  __ 8.__WCHAR_WID
 0120 54485f5f 20333200 5f5f4445 43313238  TH__ 32.__DEC128
 0130 5f4d494e 5f455850 5f5f2028 2d363134  _MIN_EXP__ (-614
 0140 3229005f 5f636f64 655f6d6f 64656c5f  2).__code_model_
 0150 736d616c 6c5f5f20 31005f5f 44454336  small__ 1.__DEC6
 0160 345f4d41 4e545f44 49475f5f 20313600  4_MANT_DIG__ 16.
 0170 5f5f4445 4336345f 4d494e5f 4558505f  __DEC64_MIN_EXP_
 0180 5f20282d 33383229 005f5f44 424c5f4d  _ (-382).__DBL_M
 0190 494e5f5f 20282864 6f75626c 6529322e  IN__ ((double)2.
 01a0 32323530 37333835 38353037 32303133  2250738585072013
 01b0 38333039 30323332 37313733 33323430  8309023271733240
 01c0 34303665 2d333038 4c29005f 5f55494e  406e-308L).__UIN
 01d0 545f4641 53543634 5f4d4158 5f5f2030  T_FAST64_MAX__ 0
 01e0 78666666 66666666 66666666 66666666  xfffffffffffffff
 01f0 66554c00 5f5f756e 69785f5f 2031005f  fUL.__unix__ 1._
 0200 5f55494e 54505452 5f545950 455f5f20  _UINTPTR_TYPE__ 
 0210 6c6f6e67 20756e73 69676e65 6420696e  long unsigned in
 0220 74005f5f 464c5433 32585f4d 41585f45  t.__FLT32X_MAX_E
 0230 58505f5f 20313032 34005f5f 4c44424c  XP__ 1024.__LDBL
 0240 5f4d4158 5f31305f 4558505f 5f203439  _MAX_10_EXP__ 49
 0250 3332005f 5f444543 33325f4d 494e5f5f  32.__DEC32_MIN__
 0260 2031452d 39354446 005f5f46 4c543634   1E-95DF.__FLT64
 0270 5f4d4158 5f5f2031 2e373937 36393331  _MAX__ 1.7976931
 0280 33343836 32333135 37303831 34353237  3486231570814527
 0290 34323337 33313730 34333537 652b3330  423731704357e+30
 02a0 38463634 005f5f46 4c543332 585f4841  8F64.__FLT32X_HA
 02b0 535f5155 4945545f 4e414e5f 5f203100  S_QUIET_NAN__ 1.
 02c0 5f5f5349 5a454f46 5f57494e 545f545f  __SIZEOF_WINT_T_
 02d0 5f203400 5f5f464c 54313238 5f484153  _ 4.__FLT128_HAS
 02e0 5f494e46 494e4954 595f5f20 31005f5f  _INFINITY__ 1.__
 02f0 44424c5f 4d41585f 31305f45 58505f5f  DBL_MAX_10_EXP__
 0300 20333038 005f5f46 4c543634 5f4d494e   308.__FLT64_MIN
 0310 5f5f2032 2e323235 30373338 35383530  __ 2.22507385850
 0320 37323031 33383330 39303233 32373137  7201383090232717
 0330 33333234 30343036 652d3330 38463634  33240406e-308F64
 0340 005f5f61 6d643634 2031005f 5f4c4442  .__amd64 1.__LDB
 0350 4c5f4d49 4e5f5f20 332e3336 32313033  L_MIN__ 3.362103
 0360 31343331 31323039 33353036 32363236  1431120935062626
 0370 37373831 37333231 37353236 30652d34  7781732175260e-4
 0380 3933324c 005f5f49 4e545f4c 45415354  932L.__INT_LEAST
 0390 33325f57 49445448 5f5f2033 32005f5f  32_WIDTH__ 32.__
 03a0 55494e54 5054525f 4d41585f 5f203078  UINTPTR_MAX__ 0x
 03b0 66666666 66666666 66666666 66666666  ffffffffffffffff
 03c0 554c002f 686f6d65 2f756275 6e74752f  UL./home/ubuntu/
 03d0 456e6769 6e656572 696e672f 50726f67  Engineering/Prog
 03e0 72616d6d 696e672f 4861636b 696e675f  ramming/Hacking_
 03f0 4172745f 6f665f45 78706c6f 69746174  Art_of_Exploitat
 0400 696f6e2f 496e7465 6c5f4172 63686974  ion/Intel_Archit
 0410 65637475 72652f41 4d443634 2f307832  ecture/AMD64/0x2
 0420 37305f4d 656d6f72 795f5365 676d656e  70_Memory_Segmen
 0430 74617469 6f6e2f57 6974685f 44656275  tation/With_Debu
 0440 675f496e 666f005f 5f4c5036 345f5f20  g_Info.__LP64__ 
 0450 31005f5f 55494e54 36345f43 28632920  1.__UINT64_C(c) 
 0460 63202323 20554c00 5f5f4442 4c5f4841  c ## UL.__DBL_HA
 0470 535f494e 46494e49 54595f5f 2031005f  S_INFINITY__ 1._
 0480 5f464c54 3132385f 4841535f 51554945  _FLT128_HAS_QUIE
 0490 545f4e41 4e5f5f20 31005f5f 474e5543  T_NAN__ 1.__GNUC
 04a0 5f5f2037 005f5f46 4c543332 585f4d49  __ 7.__FLT32X_MI
 04b0 4e5f3130 5f455850 5f5f2028 2d333037  N_10_EXP__ (-307
 04c0 29005f5f 494e5433 325f4328 63292063  ).__INT32_C(c) c
 04d0 005f5f46 4c543332 585f4550 53494c4f  .__FLT32X_EPSILO
 04e0 4e5f5f20 322e3232 30343436 30343932  N__ 2.2204460492
 04f0 35303331 33303830 38343732 36333333  5031308084726333
 0500 36313831 36343036 32652d31 36463332  618164062e-16F32
 0510 78005f5f 464c5431 32385f45 5053494c  x.__FLT128_EPSIL
 0520 4f4e5f5f 20312e39 32353932 39393434  ON__ 1.925929944
 0530 33383732 33353835 33303535 39373739  3872358530559779
 0540 34323538 34393237 3332652d 33344631  4258492732e-34F1
 0550 3238005f 5f464c54 3634585f 4841535f  28.__FLT64X_HAS_
 0560 44454e4f 524d5f5f 2031005f 5f494e54  DENORM__ 1.__INT
 0570 5054525f 57494454 485f5f20 3634005f  PTR_WIDTH__ 64._
 0580 5f535444 435f484f 53544544 5f5f2031  _STDC_HOSTED__ 1
 0590 005f5f57 494e545f 4d494e5f 5f203055  .__WINT_MIN__ 0U
 05a0 005f5f46 4c545f45 56414c5f 4d455448  .__FLT_EVAL_METH
 05b0 4f445f54 535f3138 3636315f 335f5f20  OD_TS_18661_3__ 
 05c0 30005f5f 4c44424c 5f44454e 4f524d5f  0.__LDBL_DENORM_
 05d0 4d494e5f 5f20332e 36343531 39393533  MIN__ 3.64519953
 05e0 31383832 34373436 30323532 38343035  1882474602528405
 05f0 39333336 31393431 39383265 2d343935  93361941982e-495
 0600 314c005f 5f44424c 5f455053 494c4f4e  1L.__DBL_EPSILON
 0610 5f5f2028 28646f75 626c6529 322e3232  __ ((double)2.22
 0620 30343436 30343932 35303331 33303830  0446049250313080
 0630 38343732 36333333 36313831 36343036  8472633361816406
 0640 32652d31 364c2900 5f5f494e 545f4c45  2e-16L).__INT_LE
 0650 41535438 5f574944 54485f5f 2038005f  AST8_WIDTH__ 8._
 0660 5f44424c 5f444947 5f5f2031 35005f5f  _DBL_DIG__ 15.__
 0670 4743435f 41544f4d 49435f57 43484152  GCC_ATOMIC_WCHAR
 0680 5f545f4c 4f434b5f 46524545 2032005f  _T_LOCK_FREE 2._
 0690 5f57494e 545f4d41 585f5f20 30786666  _WINT_MAX__ 0xff
 06a0 66666666 66665500 5f5f4658 53525f5f  ffffffU.__FXSR__
 06b0 2031005f 5f464c54 36345f48 41535f51   1.__FLT64_HAS_Q
 06c0 55494554 5f4e414e 5f5f2031 005f5f44  UIET_NAN__ 1.__D
 06d0 45433634 5f535542 4e4f524d 414c5f4d  EC64_SUBNORMAL_M
 06e0 494e5f5f 20302e30 30303030 30303030  IN__ 0.000000000
 06f0 30303030 3031452d 33383344 44005f5f  000001E-383DD.__
 0700 53434841 525f5749 4454485f 5f203800  SCHAR_WIDTH__ 8.
 0710 5f5f4c44 424c5f45 5053494c 4f4e5f5f  __LDBL_EPSILON__
 0720 20312e30 38343230 32313732 34383535   1.0842021724855
 0730 30343433 34303037 34353238 30303836  0443400745280086
 0740 39393431 3731652d 31394c00 6c6f6e67  994171e-19L.long
 0750 20756e73 69676e65 6420696e 74005f5f   unsigned int.__
 0760 44424c5f 4d414e54 5f444947 5f5f2035  DBL_MANT_DIG__ 5
 0770 33005f5f 464c5433 325f4550 53494c4f  3.__FLT32_EPSILO
 0780 4e5f5f20 312e3139 32303932 38393535  N__ 1.1920928955
 0790 30373831 32353030 30303030 30303030  0781250000000000
 07a0 30303030 30303030 30652d37 46333200  000000000e-7F32.
 07b0 5f5f464c 5433325f 44454e4f 524d5f4d  __FLT32_DENORM_M
 07c0 494e5f5f 20312e34 30313239 38343634  IN__ 1.401298464
 07d0 33323438 31373037 30393233 37323935  3248170709237295
 07e0 38333238 39393136 3133652d 34354633  8328991613e-45F3
 07f0 32005f5f 494e545f 46415354 385f4d41  2.__INT_FAST8_MA
 0800 585f5f20 30783766 005f5f55 494e5433  X__ 0x7f.__UINT3
 0810 325f5459 50455f5f 20756e73 69676e65  2_TYPE__ unsigne
 0820 6420696e 74005f5f 464c5436 345f4550  d int.__FLT64_EP
 0830 53494c4f 4e5f5f20 322e3232 30343436  SILON__ 2.220446
 0840 30343932 35303331 33303830 38343732  0492503130808472
 0850 36333333 36313831 36343036 32652d31  6333618164062e-1
 0860 36463634 005f5f4c 44424c5f 4d494e5f  6F64.__LDBL_MIN_
 0870 31305f45 58505f5f 20282d34 39333129  10_EXP__ (-4931)
 0880 005f5f53 4852545f 57494454 485f5f20  .__SHRT_WIDTH__ 
 0890 3136005f 5f444543 33325f4d 41585f45  16.__DEC32_MAX_E
 08a0 58505f5f 20393700 5f5f494e 5433325f  XP__ 97.__INT32_
 08b0 54595045 5f5f2069 6e74005f 5f534947  TYPE__ int.__SIG
 08c0 5f41544f 4d49435f 54595045 5f5f2069  _ATOMIC_TYPE__ i
 08d0 6e74005f 5f444543 36345f4d 41585f45  nt.__DEC64_MAX_E
 08e0 58505f5f 20333835 005f5f44 424c5f4d  XP__ 385.__DBL_M
 08f0 494e5f45 58505f5f 20282d31 30323129  IN_EXP__ (-1021)
 0900 005f5f70 69635f5f 2032005f 4c503634  .__pic__ 2._LP64
 0910 2031005f 5f494e54 5f4c4541 53543136   1.__INT_LEAST16
 0920 5f574944 54485f5f 20313600 5f5f464c  _WIDTH__ 16.__FL
 0930 5433325f 4841535f 494e4649 4e495459  T32_HAS_INFINITY
 0940 5f5f2031 005f5f4c 44424c5f 4841535f  __ 1.__LDBL_HAS_
 0950 494e4649 4e495459 5f5f2031 005f5f53  INFINITY__ 1.__S
 0960 495a454f 465f4c4f 4e475f5f 2038005f  IZEOF_LONG__ 8._
 0970 5f464c54 5f484153 5f44454e 4f524d5f  _FLT_HAS_DENORM_
 0980 5f203100 5f5f464c 54313238 5f4d494e  _ 1.__FLT128_MIN
 0990 5f455850 5f5f2028 2d313633 38312900  _EXP__ (-16381).
 09a0 5f5f5353 455f4d41 54485f5f 2031005f  __SSE_MATH__ 1._
 09b0 5f55494e 5431365f 4d41585f 5f203078  _UINT16_MAX__ 0x
 09c0 66666666 005f5f46 4c543634 585f4841  ffff.__FLT64X_HA
 09d0 535f5155 4945545f 4e414e5f 5f203100  S_QUIET_NAN__ 1.
 09e0 5f5f5549 4e545f46 41535436 345f5459  __UINT_FAST64_TY
 09f0 50455f5f 206c6f6e 6720756e 7369676e  PE__ long unsign
 0a00 65642069 6e74005f 5f425954 455f4f52  ed int.__BYTE_OR
 0a10 4445525f 5f205f5f 4f524445 525f4c49  DER__ __ORDER_LI
 0a20 54544c45 5f454e44 49414e5f 5f005f5f  TTLE_ENDIAN__.__
 0a30 454c465f 5f203100 5f5f464c 54333258  ELF__ 1.__FLT32X
 0a40 5f4d494e 5f455850 5f5f2028 2d313032  _MIN_EXP__ (-102
 0a50 3129005f 5f464c4f 41545f57 4f52445f  1).__FLOAT_WORD_
 0a60 4f524445 525f5f20 5f5f4f52 4445525f  ORDER__ __ORDER_
 0a70 4c495454 4c455f45 4e444941 4e5f5f00  LITTLE_ENDIAN__.
 0a80 5f5f5549 4e545f4c 45415354 31365f4d  __UINT_LEAST16_M
 0a90 41585f5f 20307866 66666600 5f5f5052  AX__ 0xffff.__PR
 0aa0 41474d41 5f524544 4546494e 455f4558  AGMA_REDEFINE_EX
 0ab0 544e414d 45203100 5f5f494e 545f4c45  TNAME 1.__INT_LE
 0ac0 41535431 365f5459 50455f5f 2073686f  AST16_TYPE__ sho
 0ad0 72742069 6e74005f 5f464c54 33325f48  rt int.__FLT32_H
 0ae0 41535f51 55494554 5f4e414e 5f5f2031  AS_QUIET_NAN__ 1
 0af0 005f5f46 4c545f4d 41585f45 58505f5f  .__FLT_MAX_EXP__
 0b00 20313238 005f5f68 61735f69 6e636c75   128.__has_inclu
 0b10 64655f6e 65787428 53545229 205f5f68  de_next(STR) __h
 0b20 61735f69 6e636c75 64655f6e 6578745f  as_include_next_
 0b30 5f285354 5229005f 5f494e54 5054525f  _(STR).__INTPTR_
 0b40 4d41585f 5f203078 37666666 66666666  MAX__ 0x7fffffff
 0b50 66666666 66666666 4c005f5f 676e755f  ffffffffL.__gnu_
 0b60 6c696e75 785f5f20 31005f5f 464c5433  linux__ 1.__FLT3
 0b70 32585f4d 41585f31 305f4558 505f5f20  2X_MAX_10_EXP__ 
 0b80 33303800 5f5f464c 545f4445 4e4f524d  308.__FLT_DENORM
 0b90 5f4d494e 5f5f2031 2e343031 32393834  _MIN__ 1.4012984
 0ba0 36343332 34383137 30373039 32333732  6432481707092372
 0bb0 39353833 32383939 31363133 652d3435  958328991613e-45
 0bc0 46005f5f 4c44424c 5f484153 5f515549  F.__LDBL_HAS_QUI
 0bd0 45545f4e 414e5f5f 2031005f 5f53495a  ET_NAN__ 1.__SIZ
 0be0 454f465f 444f5542 4c455f5f 2038005f  EOF_DOUBLE__ 8._
 0bf0 5f564552 53494f4e 5f5f2022 372e332e  _VERSION__ "7.3.
 0c00 3022005f 5f464c54 3332585f 4d41585f  0".__FLT32X_MAX_
 0c10 5f20312e 37393736 39333133 34383632  _ 1.797693134862
 0c20 33313537 30383134 35323734 32333733  3157081452742373
 0c30 31373034 33353765 2b333038 46333278  1704357e+308F32x
 0c40 005f5f55 494e5438 5f4d4158 5f5f2030  .__UINT8_MAX__ 0
 0c50 78666600 5f5f5749 4e545f57 49445448  xff.__WINT_WIDTH
 0c60 5f5f2033 32005f5f 55494e54 36345f54  __ 32.__UINT64_T
 0c70 5950455f 5f206c6f 6e672075 6e736967  YPE__ long unsig
 0c80 6e656420 696e7400 5f5f494e 545f4c45  ned int.__INT_LE
 0c90 41535433 325f5459 50455f5f 20696e74  AST32_TYPE__ int
 0ca0 005f5f46 4c543332 5f4d4158 5f455850  .__FLT32_MAX_EXP
 0cb0 5f5f2031 3238005f 5f504943 5f5f2032  __ 128.__PIC__ 2
 0cc0 005f5f46 4c543634 5f4d4158 5f455850  .__FLT64_MAX_EXP
 0cd0 5f5f2031 30323400 5f5f5353 45325f5f  __ 1024.__SSE2__
 0ce0 2031005f 5f464c54 36345f4d 494e5f45   1.__FLT64_MIN_E
 0cf0 58505f5f 20282d31 30323129 005f5f49  XP__ (-1021).__I
 0d00 4e544d41 585f4328 63292063 20232320  NTMAX_C(c) c ## 
 0d10 4c005f5f 4743435f 41544f4d 49435f43  L.__GCC_ATOMIC_C
 0d20 48415233 325f545f 4c4f434b 5f465245  HAR32_T_LOCK_FRE
 0d30 45203200 5f5f5349 5a454f46 5f494e54  E 2.__SIZEOF_INT
 0d40 3132385f 5f203136 005f5f50 54524449  128__ 16.__PTRDI
 0d50 46465f54 5950455f 5f206c6f 6e672069  FF_TYPE__ long i
 0d60 6e74005f 5f464c54 33325f4d 41585f5f  nt.__FLT32_MAX__
 0d70 20332e34 30323832 33343636 33383532   3.4028234663852
 0d80 38383539 38313137 30343138 33343834  8859811704183484
 0d90 35313639 3235652b 33384633 32005f5f  516925e+38F32.__
 0da0 494e5438 5f432863 29206300 5f5f5349  INT8_C(c) c.__SI
 0db0 5a454f46 5f4c4f4e 475f4c4f 4e475f5f  ZEOF_LONG_LONG__
 0dc0 2038005f 5f464c54 5f444947 5f5f2036   8.__FLT_DIG__ 6
 0dd0 005f5f44 424c5f44 454e4f52 4d5f4d49  .__DBL_DENORM_MI
 0de0 4e5f5f20 2828646f 75626c65 29342e39  N__ ((double)4.9
 0df0 34303635 36343538 34313234 36353434  4065645841246544
 0e00 31373635 36383739 32383638 32323133  1765687928682213
 0e10 3732652d 3332344c 29005f5f 494e5436  72e-324L).__INT6
 0e20 345f4328 63292063 20232320 4c005f5f  4_C(c) c ## L.__
 0e30 55494e54 5f464153 5431365f 4d41585f  UINT_FAST16_MAX_
 0e40 5f203078 66666666 66666666 66666666  _ 0xffffffffffff
 0e50 66666666 554c005f 5f464c54 5f4d4158  ffffUL.__FLT_MAX
 0e60 5f31305f 4558505f 5f203338 005f5f4e  _10_EXP__ 38.__N
 0e70 4f5f494e 4c494e45 5f5f2031 005f5f55  O_INLINE__ 1.__U
 0e80 494e545f 4c454153 5436345f 54595045  INT_LEAST64_TYPE
 0e90 5f5f206c 6f6e6720 756e7369 676e6564  __ long unsigned
 0ea0 20696e74 005f5f53 495a454f 465f4c4f   int.__SIZEOF_LO
 0eb0 4e475f44 4f55424c 455f5f20 3136005f  NG_DOUBLE__ 16._
 0ec0 5f535444 435f4953 4f5f3130 3634365f  _STDC_ISO_10646_
 0ed0 5f203230 31373036 4c005f5f 50545244  _ 201706L.__PTRD
 0ee0 4946465f 57494454 485f5f20 3634005f  IFF_WIDTH__ 64._
 0ef0 5f534348 41525f4d 41585f5f 20307837  _SCHAR_MAX__ 0x7
 0f00 66005f5f 464c5433 325f4d49 4e5f5f20  f.__FLT32_MIN__ 
 0f10 312e3137 35343934 33353038 32323238  1.17549435082228
 0f20 37353037 39363837 33363533 37323232  7507968736537222
 0f30 32343536 38652d33 38463332 005f5f49  24568e-38F32.__I
 0f40 4e545f4c 45415354 36345f54 5950455f  NT_LEAST64_TYPE_
 0f50 5f206c6f 6e672069 6e74005f 5f474e55  _ long int.__GNU
 0f60 435f4d49 4e4f525f 5f203300 5f5f464c  C_MINOR__ 3.__FL
 0f70 54363458 5f4d494e 5f5f2033 2e333632  T64X_MIN__ 3.362
 0f80 31303331 34333131 32303933 35303632  1031431120935062
 0f90 36323637 37383137 33323137 35323630  6267781732175260
 0fa0 652d3439 33324636 3478005f 5f444543  e-4932F64x.__DEC
 0fb0 5f455641 4c5f4d45 54484f44 5f5f2032  _EVAL_METHOD__ 2
 0fc0 005f5f44 45433332 5f4d4158 5f5f2039  .__DEC32_MAX__ 9
 0fd0 2e393939 39393945 39364446 005f5f4c  .999999E96DF.__L
 0fe0 4f4e475f 4c4f4e47 5f4d4158 5f5f2030  ONG_LONG_MAX__ 0
 0ff0 78376666 66666666 66666666 66666666  x7ffffffffffffff
 1000 664c4c00 5f5f4743 435f4154 4f4d4943  fLL.__GCC_ATOMIC
 1010 5f424f4f 4c5f4c4f 434b5f46 52454520  _BOOL_LOCK_FREE 
 1020 32005f5f 53495a45 5f545950 455f5f20  2.__SIZE_TYPE__ 
 1030 6c6f6e67 20756e73 69676e65 6420696e  long unsigned in
 1040 74005f5f 4c44424c 5f4d494e 5f455850  t.__LDBL_MIN_EXP
 1050 5f5f2028 2d313633 38312900 5f5f464c  __ (-16381).__FL
 1060 5433325f 4d414e54 5f444947 5f5f2032  T32_MANT_DIG__ 2
 1070 34005f5f 4743435f 4945435f 3535395f  4.__GCC_IEC_559_
 1080 434f4d50 4c455820 32005f5f 464c545f  COMPLEX 2.__FLT_
 1090 4841535f 51554945 545f4e41 4e5f5f20  HAS_QUIET_NAN__ 
 10a0 31005f5f 53544443 5f494543 5f353539  1.__STDC_IEC_559
 10b0 5f434f4d 504c4558 5f5f2031 005f5f46  _COMPLEX__ 1.__F
 10c0 4c545f4d 494e5f45 58505f5f 20282d31  LT_MIN_EXP__ (-1
 10d0 32352900 5f5f6c69 6e75785f 5f203100  25).__linux__ 1.
 10e0 5f5f464c 54333258 5f4d494e 5f5f2032  __FLT32X_MIN__ 2
 10f0 2e323235 30373338 35383530 37323031  .225073858507201
 1100 33383330 39303233 32373137 33333234  3830902327173324
 1110 30343036 652d3330 38463332 78005f5f  0406e-308F32x.__
 1120 53495a45 5f4d4158 5f5f2030 78666666  SIZE_MAX__ 0xfff
 1130 66666666 66666666 66666666 66554c00  fffffffffffffUL.
 1140 5f5f5549 4e545f4c 45415354 36345f4d  __UINT_LEAST64_M
 1150 41585f5f 20307866 66666666 66666666  AX__ 0xfffffffff
 1160 66666666 66666655 4c005f5f 494e545f  fffffffUL.__INT_
 1170 46415354 36345f4d 41585f5f 20307837  FAST64_MAX__ 0x7
 1180 66666666 66666666 66666666 6666664c  fffffffffffffffL
 1190 005f5f53 53455f5f 2031005f 5f4f5244  .__SSE__ 1.__ORD
 11a0 45525f42 49475f45 4e444941 4e5f5f20  ER_BIG_ENDIAN__ 
 11b0 34333231 005f5f49 4e545054 525f5459  4321.__INTPTR_TY
 11c0 50455f5f 206c6f6e 6720696e 74005f5f  PE__ long int.__
 11d0 4c4f4e47 5f4d4158 5f5f2030 78376666  LONG_MAX__ 0x7ff
 11e0 66666666 66666666 66666666 664c005f  fffffffffffffL._
 11f0 5f494e54 5f464153 5433325f 57494454  _INT_FAST32_WIDT
 1200 485f5f20 3634005f 5f464c54 3634585f  H__ 64.__FLT64X_
 1210 44454e4f 524d5f4d 494e5f5f 20332e36  DENORM_MIN__ 3.6
 1220 34353139 39353331 38383234 37343630  4519953188247460
 1230 32353238 34303539 33333631 39343139  2528405933619419
 1240 3832652d 34393531 46363478 005f5f46  82e-4951F64x.__F
 1250 4c543332 5f4d4158 5f31305f 4558505f  LT32_MAX_10_EXP_
 1260 5f203338 005f5f4c 44424c5f 4d41585f  _ 38.__LDBL_MAX_
 1270 5f20312e 31383937 33313439 35333537  _ 1.189731495357
 1280 32333137 36353032 31323633 38353330  2317650212638530
 1290 33303937 30323165 2b343933 324c005f  3097021e+4932L._
 12a0 5f53495a 454f465f 53484f52 545f5f20  _SIZEOF_SHORT__ 
 12b0 32005f5f 464c545f 4d494e5f 5f20312e  2.__FLT_MIN__ 1.
 12c0 31373534 39343335 30383232 32383735  1754943508222875
 12d0 30373936 38373336 35333732 32323234  0796873653722224
 12e0 35363865 2d333846 005f5f47 43435f41  568e-38F.__GCC_A
 12f0 544f4d49 435f494e 545f4c4f 434b5f46  TOMIC_INT_LOCK_F
 1300 52454520 32005f5f 464c5436 345f4841  REE 2.__FLT64_HA
 1310 535f494e 46494e49 54595f5f 2031005f  S_INFINITY__ 1._
 1320 5f494e54 31365f43 28632920 63005f5f  _INT16_C(c) c.__
 1330 464c5436 34585f48 41535f49 4e46494e  FLT64X_HAS_INFIN
 1340 4954595f 5f203100 5f5f4445 43494d41  ITY__ 1.__DECIMA
 1350 4c5f4449 475f5f20 3231005f 5f494e54  L_DIG__ 21.__INT
 1360 5f464153 5436345f 54595045 5f5f206c  _FAST64_TYPE__ l
 1370 6f6e6720 696e7400 5f5f4445 4336345f  ong int.__DEC64_
 1380 4d41585f 5f20392e 39393939 39393939  MAX__ 9.99999999
 1390 39393939 39393945 33383444 44005f5f  9999999E384DD.__
 13a0 44454333 325f5355 424e4f52 4d414c5f  DEC32_SUBNORMAL_
 13b0 4d494e5f 5f20302e 30303030 3031452d  MIN__ 0.000001E-
 13c0 39354446 005f5f46 4c543132 385f4d49  95DF.__FLT128_MI
 13d0 4e5f3130 5f455850 5f5f2028 2d343933  N_10_EXP__ (-493
 13e0 3129005f 5f494e54 5f4d4158 5f5f2030  1).__INT_MAX__ 0
 13f0 78376666 66666666 66005f5f 464c5431  x7fffffff.__FLT1
 1400 32385f48 41535f44 454e4f52 4d5f5f20  28_HAS_DENORM__ 
 1410 31005f5f 4743435f 41544f4d 49435f4c  1.__GCC_ATOMIC_L
 1420 4c4f4e47 5f4c4f43 4b5f4652 45452032  LONG_LOCK_FREE 2
 1430 005f5f46 4c543132 385f4d49 4e5f5f20  .__FLT128_MIN__ 
 1440 332e3336 32313033 31343331 31323039  3.36210314311209
 1450 33353036 32363236 37373831 37333231  3506262677817321
 1460 37353236 30652d34 39333246 31323800  75260e-4932F128.
 1470 5f5f494e 545f4c45 41535436 345f4d41  __INT_LEAST64_MA
 1480 585f5f20 30783766 66666666 66666666  X__ 0x7fffffffff
 1490 66666666 66664c00 5f5f474e 55435f50  ffffffL.__GNUC_P
 14a0 41544348 4c455645 4c5f5f20 30005f5f  ATCHLEVEL__ 0.__
 14b0 41544f4d 49435f52 454c4541 53452033  ATOMIC_RELEASE 3
 14c0 005f5f46 4c543332 5f4d494e 5f31305f  .__FLT32_MIN_10_
 14d0 4558505f 5f20282d 33372900 5f5f4442  EXP__ (-37).__DB
 14e0 4c5f4445 43494d41 4c5f4449 475f5f20  L_DECIMAL_DIG__ 
 14f0 31370047 4e552043 31312037 2e332e30  17.GNU C11 7.3.0
 1500 202d6d74 756e653d 67656e65 72696320   -mtune=generic 
 1510 2d6d6172 63683d78 38362d36 34202d67  -march=x86-64 -g
 1520 67646233 202d6673 7461636b 2d70726f  gdb3 -fstack-pro
 1530 74656374 6f722d73 74726f6e 67005f5f  tector-strong.__
 1540 464c545f 44454349 4d414c5f 4449475f  FLT_DECIMAL_DIG_
 1550 5f203900 5f5f4154 4f4d4943 5f534551  _ 9.__ATOMIC_SEQ
 1560 5f435354 2035005f 5f444543 3132385f  _CST 5.__DEC128_
 1570 4d494e5f 5f203145 2d363134 33444c00  MIN__ 1E-6143DL.
 1580 5f5f4249 47474553 545f414c 49474e4d  __BIGGEST_ALIGNM
 1590 454e545f 5f203136 005f5f53 495a454f  ENT__ 16.__SIZEO
 15a0 465f494e 545f5f20 34005f5f 494e545f  F_INT__ 4.__INT_
 15b0 46415354 33325f54 5950455f 5f206c6f  FAST32_TYPE__ lo
 15c0 6e672069 6e74005f 5f4c4442 4c5f4445  ng int.__LDBL_DE
 15d0 43494d41 4c5f4449 475f5f20 3231005f  CIMAL_DIG__ 21._
 15e0 5f444543 3132385f 4d41585f 4558505f  _DEC128_MAX_EXP_
 15f0 5f203631 3435005f 5f494e54 31365f4d  _ 6145.__INT16_M
 1600 41585f5f 20307837 66666600 5f5f4743  AX__ 0x7fff.__GC
 1610 435f4841 56455f53 594e435f 434f4d50  C_HAVE_SYNC_COMP
 1620 4152455f 414e445f 53574150 5f342031  ARE_AND_SWAP_4 1
 1630 005f5f47 43435f41 534d5f46 4c41475f  .__GCC_ASM_FLAG_
 1640 4f555450 5554535f 5f203100 5f5f464c  OUTPUTS__ 1.__FL
 1650 54313238 5f4d4158 5f455850 5f5f2031  T128_MAX_EXP__ 1
 1660 36333834 005f5f46 4c543132 385f4d41  6384.__FLT128_MA
 1670 585f5f20 312e3138 39373331 34393533  X__ 1.1897314953
 1680 35373233 31373635 30383537 35393332  5723176508575932
 1690 36363238 30303730 32652b34 39333246  662800702e+4932F
 16a0 31323800 5f5f494e 54385f54 5950455f  128.__INT8_TYPE_
 16b0 5f207369 676e6564 20636861 72005f5f  _ signed char.__
 16c0 494e545f 57494454 485f5f20 3332005f  INT_WIDTH__ 32._
 16d0 5f55494e 54385f54 5950455f 5f20756e  _UINT8_TYPE__ un
 16e0 7369676e 65642063 68617200 5f5f494e  signed char.__IN
 16f0 544d4158 5f574944 54485f5f 20363400  TMAX_WIDTH__ 64.
 1700 5f5f5549 4e544d41 585f5459 50455f5f  __UINTMAX_TYPE__
 1710 206c6f6e 6720756e 7369676e 65642069   long unsigned i
 1720 6e740075 6e697820 31005f5f 494e5431  nt.unix 1.__INT1
 1730 365f5459 50455f5f 2073686f 72742069  6_TYPE__ short i
 1740 6e74005f 5f474343 5f41544f 4d49435f  nt.__GCC_ATOMIC_
 1750 53484f52 545f4c4f 434b5f46 52454520  SHORT_LOCK_FREE 
 1760 32005f5f 44454331 32385f4d 41585f5f  2.__DEC128_MAX__
 1770 20392e39 39393939 39393939 39393939   9.9999999999999
 1780 39393939 39393939 39393939 39393939  9999999999999999
 1790 39393939 45363134 34444c00 5f5f5353  9999E6144DL.__SS
 17a0 505f5354 524f4e47 5f5f2033 005f5f50  P_STRONG__ 3.__P
 17b0 49455f5f 2032005f 5f55494e 545f4c45  IE__ 2.__UINT_LE
 17c0 41535431 365f5459 50455f5f 2073686f  AST16_TYPE__ sho
 17d0 72742075 6e736967 6e656420 696e7400  rt unsigned int.
 17e0 5f5f494e 545f4641 5354385f 54595045  __INT_FAST8_TYPE
 17f0 5f5f2073 69676e65 64206368 6172005f  __ signed char._
 1800 5f44424c 5f4d4158 5f455850 5f5f2031  _DBL_MAX_EXP__ 1
 1810 30323400 5f5f464c 54333258 5f4d414e  024.__FLT32X_MAN
 1820 545f4449 475f5f20 3533005f 5f464c54  T_DIG__ 53.__FLT
 1830 5f455641 4c5f4d45 54484f44 5f5f2030  _EVAL_METHOD__ 0
 1840 005f5f49 4e544d41 585f4d41 585f5f20  .__INTMAX_MAX__ 
 1850 30783766 66666666 66666666 66666666  0x7fffffffffffff
 1860 66664c00 5f5f4154 4f4d4943 5f414351  ffL.__ATOMIC_ACQ
 1870 55495245 2032005f 5f55494e 545f4641  UIRE 2.__UINT_FA
 1880 53543332 5f545950 455f5f20 6c6f6e67  ST32_TYPE__ long
 1890 20756e73 69676e65 6420696e 74005f5f   unsigned int.__
 18a0 464c5433 325f4445 43494d41 4c5f4449  FLT32_DECIMAL_DI
 18b0 475f5f20 39005f5f 494e545f 4c454153  G__ 9.__INT_LEAS
 18c0 5433325f 4d41585f 5f203078 37666666  T32_MAX__ 0x7fff
 18d0 66666666 005f5f47 43435f41 544f4d49  ffff.__GCC_ATOMI
 18e0 435f4348 41525f4c 4f434b5f 46524545  C_CHAR_LOCK_FREE
 18f0 2032005f 5f444543 3132385f 45505349   2.__DEC128_EPSI
 1900 4c4f4e5f 5f203145 2d333344 4c005f5f  LON__ 1E-33DL.__
 1910 464c545f 4d41585f 5f20332e 34303238  FLT_MAX__ 3.4028
 1920 32333436 36333835 32383835 39383131  2346638528859811
 1930 37303431 38333438 34353136 39323565  704183484516925e
 1940 2b333846 005f5f53 495a454f 465f5743  +38F.__SIZEOF_WC
 1950 4841525f 545f5f20 34005f5f 464c5433  HAR_T__ 4.__FLT3
 1960 32585f44 4543494d 414c5f44 49475f5f  2X_DECIMAL_DIG__
 1970 20313700 5f5f494e 545f4641 53543136   17.__INT_FAST16
 1980 5f545950 455f5f20 6c6f6e67 20696e74  _TYPE__ long int
 1990 005f5f44 45433332 5f4d494e 5f455850  .__DEC32_MIN_EXP
 19a0 5f5f2028 2d393429 005f5f49 4e543332  __ (-94).__INT32
 19b0 5f4d4158 5f5f2030 78376666 66666666  _MAX__ 0x7ffffff
 19c0 66005f5f 53495a45 4f465f46 4c4f4154  f.__SIZEOF_FLOAT
 19d0 3132385f 5f203136 005f5f46 4c543634  128__ 16.__FLT64
 19e0 5f4d494e 5f31305f 4558505f 5f20282d  _MIN_10_EXP__ (-
 19f0 33303729 005f5f55 494e545f 46415354  307).__UINT_FAST
 1a00 385f5459 50455f5f 20756e73 69676e65  8_TYPE__ unsigne
 1a10 64206368 6172005f 5f535444 435f4945  d char.__STDC_IE
 1a20 435f3535 395f5f20 31005f5f 44454331  C_559__ 1.__DEC1
 1a30 32385f53 55424e4f 524d414c 5f4d494e  28_SUBNORMAL_MIN
 1a40 5f5f2030 2e303030 30303030 30303030  __ 0.00000000000
 1a50 30303030 30303030 30303030 30303030  0000000000000000
 1a60 30303030 3031452d 36313433 444c005f  000001E-6143DL._
 1a70 5f41544f 4d49435f 484c455f 41435155  _ATOMIC_HLE_ACQU
 1a80 49524520 36353533 36005f5f 41544f4d  IRE 65536.__ATOM
 1a90 49435f48 4c455f52 454c4541 53452031  IC_HLE_RELEASE 1
 1aa0 33313037 32005f5f 494e545f 46415354  31072.__INT_FAST
 1ab0 31365f4d 41585f5f 20307837 66666666  16_MAX__ 0x7ffff
 1ac0 66666666 66666666 6666664c 005f5f49  fffffffffffL.__I
 1ad0 4e545f4c 45415354 31365f4d 41585f5f  NT_LEAST16_MAX__
 1ae0 20307837 66666600 5f5f464c 54363458   0x7fff.__FLT64X
 1af0 5f4d4158 5f455850 5f5f2031 36333834  _MAX_EXP__ 16384
 1b00 005f5f44 45433132 385f4d41 4e545f44  .__DEC128_MANT_D
 1b10 49475f5f 20333400 5f5f4c4f 4e475f57  IG__ 34.__LONG_W
 1b20 49445448 5f5f2036 34005f5f 53495a45  IDTH__ 64.__SIZE
 1b30 5f574944 54485f5f 20363400 5f5f464c  _WIDTH__ 64.__FL
 1b40 54313238 5f444543 494d414c 5f444947  T128_DECIMAL_DIG
 1b50 5f5f2033 36005f5f 57434841 525f4d49  __ 36.__WCHAR_MI
 1b60 4e5f5f20 282d5f5f 57434841 525f4d41  N__ (-__WCHAR_MA
 1b70 585f5f20 2d203129 005f5f47 43435f48  X__ - 1).__GCC_H
 1b80 4156455f 53594e43 5f434f4d 50415245  AVE_SYNC_COMPARE
 1b90 5f414e44 5f535741 505f3220 31005f5f  _AND_SWAP_2 1.__
 1ba0 4c44424c 5f4d4158 5f455850 5f5f2031  LDBL_MAX_EXP__ 1
 1bb0 36333834 005f5f46 4c543634 585f4449  6384.__FLT64X_DI
 1bc0 475f5f20 3138005f 5f464c54 3332585f  G__ 18.__FLT32X_
 1bd0 4449475f 5f203135 005f5f6b 385f5f20  DIG__ 15.__k8__ 
 1be0 31005f5f 43484152 33325f54 5950455f  1.__CHAR32_TYPE_
 1bf0 5f20756e 7369676e 65642069 6e74005f  _ unsigned int._
 1c00 5f464c54 3634585f 4d494e5f 31305f45  _FLT64X_MIN_10_E
 1c10 58505f5f 20282d34 39333129 005f5f70  XP__ (-4931).__p
 1c20 69655f5f 2032005f 5f494e54 5f4c4541  ie__ 2.__INT_LEA
 1c30 5354385f 54595045 5f5f2073 69676e65  ST8_TYPE__ signe
 1c40 64206368 6172005f 5f55494e 5431365f  d char.__UINT16_
 1c50 43286329 2063005f 5f534852 545f4d41  C(c) c.__SHRT_MA
 1c60 585f5f20 30783766 6666005f 5f616d64  X__ 0x7fff.__amd
 1c70 36345f5f 2031005f 5f53495a 454f465f  64__ 1.__SIZEOF_
 1c80 464c4f41 545f5f20 34005f5f 4743435f  FLOAT__ 4.__GCC_
 1c90 48415645 5f53594e 435f434f 4d504152  HAVE_SYNC_COMPAR
 1ca0 455f414e 445f5357 41505f38 2031005f  E_AND_SWAP_8 1._
 1cb0 5f574348 41525f4d 41585f5f 20307837  _WCHAR_MAX__ 0x7
 1cc0 66666666 66666600 666c6167 005f5f53  fffffff.flag.__S
 1cd0 5444435f 5f203100 5f5f4f52 4445525f  TDC__ 1.__ORDER_
 1ce0 5044505f 454e4449 414e5f5f 20333431  PDP_ENDIAN__ 341
 1cf0 32005f5f 4743435f 41544f4d 49435f50  2.__GCC_ATOMIC_P
 1d00 4f494e54 45525f4c 4f434b5f 46524545  OINTER_LOCK_FREE
 1d10 2032005f 5f4f5244 45525f4c 4954544c   2.__ORDER_LITTL
 1d20 455f454e 4449414e 5f5f2031 32333400  E_ENDIAN__ 1234.
 1d30 5f5f5749 4e545f54 5950455f 5f20756e  __WINT_TYPE__ un
 1d40 7369676e 65642069 6e74006c 696e7578  signed int.linux
 1d50 2031005f 5f41544f 4d49435f 52454c41   1.__ATOMIC_RELA
 1d60 58454420 30005f5f 46494e49 54455f4d  XED 0.__FINITE_M
 1d70 4154485f 4f4e4c59 5f5f2030 005f5f6c  ATH_ONLY__ 0.__l
 1d80 696e7578 2031005f 5f783836 5f36345f  inux 1.__x86_64_
 1d90 5f203100 5f5f4445 4333325f 4d414e54  _ 1.__DEC32_MANT
 1da0 5f444947 5f5f2037 005f5f44 45433634  _DIG__ 7.__DEC64
 1db0 5f455053 494c4f4e 5f5f2031 452d3135  _EPSILON__ 1E-15
 1dc0 4444005f 5f535345 325f4d41 54485f5f  DD.__SSE2_MATH__
 1dd0 2031005f 5f474343 5f494543 5f353539   1.__GCC_IEC_559
 1de0 2032005f 5f55494e 545f4641 53543332   2.__UINT_FAST32
 1df0 5f4d4158 5f5f2030 78666666 66666666  _MAX__ 0xfffffff
 1e00 66666666 66666666 66554c00 5f5f464c  fffffffffUL.__FL
 1e10 54333258 5f44454e 4f524d5f 4d494e5f  T32X_DENORM_MIN_
 1e20 5f20342e 39343036 35363435 38343132  _ 4.940656458412
 1e30 34363534 34313736 35363837 39323836  4654417656879286
 1e40 38323231 33373265 2d333234 46333278  8221372e-324F32x
 1e50 005f5f4d 4d585f5f 2031005f 5f494e54  .__MMX__ 1.__INT
 1e60 36345f4d 41585f5f 20307837 66666666  64_MAX__ 0x7ffff
 1e70 66666666 66666666 6666664c 005f5f46  fffffffffffL.__F
 1e80 4c543634 585f4550 53494c4f 4e5f5f20  LT64X_EPSILON__ 
 1e90 312e3038 34323032 31373234 38353530  1.08420217248550
 1ea0 34343334 30303734 35323830 30383639  4434007452800869
 1eb0 39343137 31652d31 39463634 78005f5f  94171e-19F64x.__
 1ec0 50545244 4946465f 4d41585f 5f203078  PTRDIFF_MAX__ 0x
 1ed0 37666666 66666666 66666666 66666666  7fffffffffffffff
 1ee0 4c005f5f 5345475f 47532031 005f5f53  L.__SEG_GS 1.__S
 1ef0 49475f41 544f4d49 435f4d41 585f5f20  IG_ATOMIC_MAX__ 
 1f00 30783766 66666666 6666005f 5f783836  0x7fffffff.__x86
 1f10 5f363420 31006368 6172005f 5f535444  _64 1.char.__STD
 1f20 435f4e4f 5f544852 45414453 5f5f2031  C_NO_THREADS__ 1
 1f30 005f5f55 494e545f 46415354 31365f54  .__UINT_FAST16_T
 1f40 5950455f 5f206c6f 6e672075 6e736967  YPE__ long unsig
 1f50 6e656420 696e7400 5f5f464c 54333258  ned int.__FLT32X
 1f60 5f484153 5f494e46 494e4954 595f5f20  _HAS_INFINITY__ 
 1f70 31005f5f 494e545f 46415354 31365f57  1.__INT_FAST16_W
 1f80 49445448 5f5f2036 34005f5f 464c5433  IDTH__ 64.__FLT3
 1f90 325f4841 535f4445 4e4f524d 5f5f2031  2_HAS_DENORM__ 1
 1fa0 005f5f46 4c545f52 41444958 5f5f2032  .__FLT_RADIX__ 2
 1fb0 005f5f46 4c543634 5f4d414e 545f4449  .__FLT64_MANT_DI
 1fc0 475f5f20 3533005f 5f464c54 5f484153  G__ 53.__FLT_HAS
 1fd0 5f494e46 494e4954 595f5f20 31005f5f  _INFINITY__ 1.__
 1fe0 5349475f 41544f4d 49435f57 49445448  SIG_ATOMIC_WIDTH
 1ff0 5f5f2033 32005f5f 494e545f 46415354  __ 32.__INT_FAST
 2000 33325f4d 41585f5f 20307837 66666666  32_MAX__ 0x7ffff
 2010 66666666 66666666 6666664c 005f5f46  fffffffffffL.__F
 2020 4c543634 5f444543 494d414c 5f444947  LT64_DECIMAL_DIG
 2030 5f5f2031 37005f5f 4c4f4e47 5f4c4f4e  __ 17.__LONG_LON
 2040 475f5749 4454485f 5f203634 005f5f46  G_WIDTH__ 64.__F
 2050 4c543634 5f44454e 4f524d5f 4d494e5f  LT64_DENORM_MIN_
 2060 5f20342e 39343036 35363435 38343132  _ 4.940656458412
 2070 34363534 34313736 35363837 39323836  4654417656879286
 2080 38323231 33373265 2d333234 46363400  8221372e-324F64.
 2090 62756666 65720073 7461636b 5f657861  buffer.stack_exa
 20a0 6d706c65 2e63005f 5f464c54 5f455053  mple.c.__FLT_EPS
 20b0 494c4f4e 5f5f2031 2e313932 30393238  ILON__ 1.1920928
 20c0 39353530 37383132 35303030 30303030  9550781250000000
 20d0 30303030 30303030 30303030 652d3746  000000000000e-7F
 20e0 005f5f46 4c543634 585f4d41 585f5f20  .__FLT64X_MAX__ 
 20f0 312e3138 39373331 34393533 35373233  1.18973149535723
 2100 31373635 30323132 36333835 33303330  1765021263853030
 2110 39373032 31652b34 39333246 36347800  97021e+4932F64x.
 2120 5f5f5354 44435f55 54465f31 365f5f20  __STDC_UTF_16__ 
 2130 31005f5f 494e544d 41585f54 5950455f  1.__INTMAX_TYPE_
 2140 5f206c6f 6e672069 6e74005f 5f4c4442  _ long int.__LDB
 2150 4c5f4841 535f4445 4e4f524d 5f5f2031  L_HAS_DENORM__ 1
 2160 005f5f4c 44424c5f 4d414e54 5f444947  .__LDBL_MANT_DIG
 2170 5f5f2036 34005f5f 6861735f 696e636c  __ 64.__has_incl
 2180 75646528 53545229 205f5f68 61735f69  ude(STR) __has_i
 2190 6e636c75 64655f5f 28535452 29005f5f  nclude__(STR).__
 21a0 4743435f 41544f4d 49435f43 48415231  GCC_ATOMIC_CHAR1
 21b0 365f545f 4c4f434b 5f465245 45203200  6_T_LOCK_FREE 2.
 21c0 5f5f4445 4333325f 45505349 4c4f4e5f  __DEC32_EPSILON_
 21d0 5f203145 2d364446 005f5f53 495a454f  _ 1E-6DF.__SIZEO
 21e0 465f464c 4f415438 305f5f20 3136005f  F_FLOAT80__ 16._
 21f0 5f524547 49535445 525f5052 45464958  _REGISTER_PREFIX
 2200 5f5f2000 5f5f4154 4f4d4943 5f434f4e  __ .__ATOMIC_CON
 2210 53554d45 2031005f 5f55494e 5436345f  SUME 1.__UINT64_
 2220 4d41585f 5f203078 66666666 66666666  MAX__ 0xffffffff
 2230 66666666 66666666 554c005f 5f535444  ffffffffUL.__STD
 2240 435f5554 465f3332 5f5f2031 005f5f55  C_UTF_32__ 1.__U
 2250 494e5431 365f5459 50455f5f 2073686f  INT16_TYPE__ sho
 2260 72742075 6e736967 6e656420 696e7400  rt unsigned int.
 2270 5f5f464c 54363458 5f4d4158 5f31305f  __FLT64X_MAX_10_
 2280 4558505f 5f203439 3332005f 5f55494e  EXP__ 4932.__UIN
 2290 5433325f 43286329 20632023 23205500  T32_C(c) c ## U.
 22a0 5f5f6b38 2031005f 5f534547 5f465320  __k8 1.__SEG_FS 
 22b0 31005f5f 55494e54 4d41585f 43286329  1.__UINTMAX_C(c)
 22c0 20632023 2320554c 005f5f47 58585f41   c ## UL.__GXX_A
 22d0 42495f56 45525349 4f4e2031 30313100  BI_VERSION 1011.
 22e0 5f5f5349 5a454f46 5f505452 44494646  __SIZEOF_PTRDIFF
 22f0 5f545f5f 2038005f 5f434841 525f4249  _T__ 8.__CHAR_BI
 2300 545f5f20 38005f5f 5349475f 41544f4d  T__ 8.__SIG_ATOM
 2310 49435f4d 494e5f5f 20282d5f 5f534947  IC_MIN__ (-__SIG
 2320 5f41544f 4d49435f 4d41585f 5f202d20  _ATOMIC_MAX__ - 
 2330 3129005f 5f494e54 5f464153 5436345f  1).__INT_FAST64_
 2340 57494454 485f5f20 3634005f 5f464c54  WIDTH__ 64.__FLT
 2350 3132385f 44454e4f 524d5f4d 494e5f5f  128_DENORM_MIN__
 2360 20362e34 37353137 35313139 34333830   6.4751751194380
 2370 32353131 30393234 34333839 35383232  2511092443895822
 2380 37363436 3535652d 34393636 46313238  764655e-4966F128
 2390 005f5f55 494e545f 4c454153 5433325f  .__UINT_LEAST32_
 23a0 54595045 5f5f2075 6e736967 6e656420  TYPE__ unsigned 
 23b0 696e7400 5f5f4442 4c5f4841 535f4445  int.__DBL_HAS_DE
 23c0 4e4f524d 5f5f2031 005f5f46 4c543132  NORM__ 1.__FLT12
 23d0 385f4d41 4e545f44 49475f5f 20313133  8_MANT_DIG__ 113
 23e0 005f5f46 4c543634 5f444947 5f5f2031  .__FLT64_DIG__ 1
 23f0 35005f5f 55494e54 4d41585f 4d41585f  5.__UINTMAX_MAX_
 2400 5f203078 66666666 66666666 66666666  _ 0xffffffffffff
 2410 66666666 554c005f 5f474343 5f484156  ffffUL.__GCC_HAV
 2420 455f5359 4e435f43 4f4d5041 52455f41  E_SYNC_COMPARE_A
 2430 4e445f53 5741505f 31203100 5f5f4442  ND_SWAP_1 1.__DB
 2440 4c5f4d41 585f5f20 2828646f 75626c65  L_MAX__ ((double
 2450 29312e37 39373639 33313334 38363233  )1.7976931348623
 2460 31353730 38313435 32373432 33373331  1570814527423731
 2470 37303433 3537652b 3330384c 29005f5f  704357e+308L).__
 2480 494e5438 5f4d4158 5f5f2030 78376600  INT8_MAX__ 0x7f.
 2490 5f5f5549 4e545f46 41535438 5f4d4158  __UINT_FAST8_MAX
 24a0 5f5f2030 78666600 5f5f4442 4c5f4841  __ 0xff.__DBL_HA
 24b0 535f5155 4945545f 4e414e5f 5f203100  S_QUIET_NAN__ 1.
 24c0 5f5f464c 545f4d49 4e5f3130 5f455850  __FLT_MIN_10_EXP
 24d0 5f5f2028 2d333729 005f5f47 43435f41  __ (-37).__GCC_A
 24e0 544f4d49 435f5445 53545f41 4e445f53  TOMIC_TEST_AND_S
 24f0 45545f54 52554556 414c2031 005f5f46  ET_TRUEVAL 1.__F
 2500 4c543634 585f4445 43494d41 4c5f4449  LT64X_DECIMAL_DI
 2510 475f5f20 3231005f 5f41544f 4d49435f  G__ 21.__ATOMIC_
 2520 4143515f 52454c20 34005f5f 57434841  ACQ_REL 4.__WCHA
 2530 525f5459 50455f5f 20696e74 005f5354  R_TYPE__ int._ST
 2540 44435f50 52454445 465f4820 31005f5f  DC_PREDEF_H 1.__
 2550 494e545f 46415354 385f5749 4454485f  INT_FAST8_WIDTH_
 2560 5f203800 5f5f464c 54313238 5f4d4158  _ 8.__FLT128_MAX
 2570 5f31305f 4558505f 5f203439 3332005f  _10_EXP__ 4932._
 2580 5f555345 525f4c41 42454c5f 50524546  _USER_LABEL_PREF
 2590 49585f5f 20007465 73745f66 756e6374  IX__ .test_funct
 25a0 696f6e00 5f5f464c 5433325f 4d494e5f  ion.__FLT32_MIN_
 25b0 4558505f 5f20282d 31323529 005f5f43  EXP__ (-125).__C
 25c0 48415231 365f5459 50455f5f 2073686f  HAR16_TYPE__ sho
 25d0 72742075 6e736967 6e656420 696e7400  rt unsigned int.
 25e0 5f5f5549 4e54385f 43286329 2063005f  __UINT8_C(c) c._
 25f0 5f464c54 3132385f 4449475f 5f203333  _FLT128_DIG__ 33
 2600 005f5f55 494e545f 4c454153 54385f54  .__UINT_LEAST8_T
 2610 5950455f 5f20756e 7369676e 65642063  YPE__ unsigned c
 2620 68617200 5f5f494e 5436345f 54595045  har.__INT64_TYPE
 2630 5f5f206c 6f6e6720 696e7400 5f5f494e  __ long int.__IN
 2640 545f4c45 41535436 345f5749 4454485f  T_LEAST64_WIDTH_
 2650 5f203634 005f5f4c 44424c5f 4449475f  _ 64.__LDBL_DIG_
 2660 5f203138 006d6169 6e005f5f 55494e54  _ 18.main.__UINT
 2670 33325f4d 41585f5f 20307866 66666666  32_MAX__ 0xfffff
 2680 66666655 005f5f47 43435f48 4156455f  fffU.__GCC_HAVE_
 2690 44574152 46325f43 46495f41 534d2031  DWARF2_CFI_ASM 1
 26a0 005f5f49 4e545f4c 45415354 385f4d41  .__INT_LEAST8_MA
 26b0 585f5f20 30783766 005f5f44 45433634  X__ 0x7f.__DEC64
 26c0 5f4d494e 5f5f2031 452d3338 33444400  _MIN__ 1E-383DD.
 26d0 5f5f4442 4c5f4d49 4e5f3130 5f455850  __DBL_MIN_10_EXP
 26e0 5f5f2028 2d333037 29005f5f 44454349  __ (-307).__DECI
 26f0 4d414c5f 4249445f 464f524d 41545f5f  MAL_BID_FORMAT__
 2700 2031005f 5f474e55 435f5354 44435f49   1.__GNUC_STDC_I
 2710 4e4c494e 455f5f20 31005f5f 464c5436  NLINE__ 1.__FLT6
 2720 345f4d41 585f3130 5f455850 5f5f2033  4_MAX_10_EXP__ 3
 2730 3038005f 5f464c54 5f4d414e 545f4449  08.__FLT_MANT_DI
 2740 475f5f20 323400                      G__ 24.         
Contents of section .comment:
 0000 00474343 3a202855 62756e74 7520372e  .GCC: (Ubuntu 7.
 0010 332e302d 32377562 756e7475 317e3138  3.0-27ubuntu1~18
 0020 2e303429 20372e33 2e3000             .04) 7.3.0.     
Contents of section .eh_frame:
 0000 14000000 00000000 017a5200 01781001  .........zR..x..
 0010 1b0c0708 90010000 1c000000 1c000000  ................
 0020 00000000 45000000 00410e10 8602430d  ....E....A....C.
 0030 0602400c 07080000 1c000000 3c000000  ..@.........<...
 0040 00000000 24000000 00410e10 8602430d  ....$....A....C.
 0050 065f0c07 08000000                    ._......        

Disassembly of section .group:

0000000000000000 <wm4.0.52c9fc51a3c7999e669b5384b1132782>:
   0:	01 00                	add    DWORD PTR [rax],eax
void test_function(int a, int b, int c, int d) {
   2:	00 00                	add    BYTE PTR [rax],al
   4:	0e                   	(bad)  
   5:	00 00                	add    BYTE PTR [rax],al
   7:	00 0f                	add    BYTE PTR [rdi],cl
   9:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .group:

0000000000000000 <wm4.stdcpredef.h.19.006d14bbbe0dc07ba9b1ce3fdc8e40d3>:
   0:	01 00                	add    DWORD PTR [rax],eax
   2:	00 00                	add    BYTE PTR [rax],al
   4:	10 00                	adc    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	11 00                	adc    DWORD PTR [rax],eax
	...

Disassembly of section .text:

0000000000000000 <test_function>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 30          	sub    rsp,0x30
   8:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
   b:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
   e:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
  11:	89 4d d0             	mov    DWORD PTR [rbp-0x30],ecx
  14:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  1b:	00 00 
  1d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  21:	31 c0                	xor    eax,eax
	int flag;
	char buffer[10];

	flag = 31337;
  23:	c7 45 e8 69 7a 00 00 	mov    DWORD PTR [rbp-0x18],0x7a69
	buffer[0] = 'A';
  2a:	c6 45 ee 41          	mov    BYTE PTR [rbp-0x12],0x41
}
  2e:	90                   	nop
  2f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  33:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
  3a:	00 00 
  3c:	74 05                	je     43 <test_function+0x43>
  3e:	e8 00 00 00 00       	call   43 <test_function+0x43>
			3f: R_X86_64_PLT32	__stack_chk_fail-0x4
  43:	c9                   	leave  
  44:	c3                   	ret    

0000000000000045 <main>:

int main() {
  45:	55                   	push   rbp
  46:	48 89 e5             	mov    rbp,rsp
	test_function(1, 2, 3, 4);
  49:	b9 04 00 00 00       	mov    ecx,0x4
  4e:	ba 03 00 00 00       	mov    edx,0x3
  53:	be 02 00 00 00       	mov    esi,0x2
  58:	bf 01 00 00 00       	mov    edi,0x1
  5d:	e8 00 00 00 00       	call   62 <main+0x1d>
			5e: R_X86_64_PC32	test_function-0x4
  62:	b8 00 00 00 00       	mov    eax,0x0
}
  67:	5d                   	pop    rbp
  68:	c3                   	ret    

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
void test_function(int a, int b, int c, int d) {
   0:	da 00                	fiadd  DWORD PTR [rax]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [rax],al
			6: R_X86_64_32	.debug_abbrev
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	00 00                	add    BYTE PTR [rax],al
			c: R_X86_64_32	.debug_str+0x14f3
   e:	00 00                	add    BYTE PTR [rax],al
  10:	0c 00                	or     al,0x0
			11: R_X86_64_32	.debug_str+0x2097
	...
			15: R_X86_64_32	.debug_str+0x3c3
			19: R_X86_64_64	.text
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 69 00             	add    BYTE PTR [rcx+0x0],ch
	...
			29: R_X86_64_32	.debug_line
			2d: R_X86_64_32	.debug_macro
}
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	02 00                	add    al,BYTE PTR [rax]
			32: R_X86_64_32	.debug_str+0x2665
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 01                	add    BYTE PTR [rcx],al
  37:	09 4e 00             	or     DWORD PTR [rsi+0x0],ecx
	...
			3c: R_X86_64_64	.text+0x45
  42:	00 00                	add    BYTE PTR [rax],al
  44:	24 00                	and    al,0x0
int main() {
  46:	00 00                	add    BYTE PTR [rax],al
  48:	00 00                	add    BYTE PTR [rax],al
	test_function(1, 2, 3, 4);
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	01 9c 03 04 05 69 6e 	add    DWORD PTR [rbx+rax*1+0x6e690504],ebx
  53:	74 00                	je     55 <.debug_info+0x55>
  55:	04 00                	add    al,0x0
			56: R_X86_64_32	.debug_str+0x2596
  57:	00 00                	add    BYTE PTR [rax],al
  59:	00 01                	add    BYTE PTR [rcx],al
  5b:	01 00                	add    DWORD PTR [rax],eax
			5c: R_X86_64_64	.text
  5d:	00 00                	add    BYTE PTR [rax],al
  5f:	00 00                	add    BYTE PTR [rax],al
  61:	00 00                	add    BYTE PTR [rax],al
  63:	00 45 00             	add    BYTE PTR [rbp+0x0],al
  66:	00 00                	add    BYTE PTR [rax],al
}
  68:	00 00                	add    BYTE PTR [rax],al
  6a:	00 00                	add    BYTE PTR [rax],al
  6c:	01 9c bf 00 00 00 05 	add    DWORD PTR [rdi+rdi*4+0x5000000],ebx
  73:	61                   	(bad)  
  74:	00 01                	add    BYTE PTR [rcx],al
  76:	01 4e 00             	add    DWORD PTR [rsi+0x0],ecx
  79:	00 00                	add    BYTE PTR [rax],al
  7b:	02 91 4c 05 62 00    	add    dl,BYTE PTR [rcx+0x62054c]
  81:	01 01                	add    DWORD PTR [rcx],eax
  83:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
  86:	00 02                	add    BYTE PTR [rdx],al
  88:	91                   	xchg   ecx,eax
  89:	48 05 63 00 01 01    	add    rax,0x1010063
  8f:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
  92:	00 02                	add    BYTE PTR [rdx],al
  94:	91                   	xchg   ecx,eax
  95:	44 05 64 00 01 01    	rex.R add eax,0x1010064
  9b:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
  9e:	00 02                	add    BYTE PTR [rdx],al
  a0:	91                   	xchg   ecx,eax
  a1:	40 06                	rex (bad) 
  a3:	00 00                	add    BYTE PTR [rax],al
			a3: R_X86_64_32	.debug_str+0x1cc8
  a5:	00 00                	add    BYTE PTR [rax],al
  a7:	01 02                	add    DWORD PTR [rdx],eax
  a9:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
  ac:	00 02                	add    BYTE PTR [rdx],al
  ae:	91                   	xchg   ecx,eax
  af:	58                   	pop    rax
  b0:	06                   	(bad)  
  b1:	00 00                	add    BYTE PTR [rax],al
			b1: R_X86_64_32	.debug_str+0x2090
  b3:	00 00                	add    BYTE PTR [rax],al
  b5:	01 03                	add    DWORD PTR [rbx],eax
  b7:	bf 00 00 00 02       	mov    edi,0x2000000
  bc:	91                   	xchg   ecx,eax
  bd:	5e                   	pop    rsi
  be:	00 07                	add    BYTE PTR [rdi],al
  c0:	d6                   	(bad)  
  c1:	00 00                	add    BYTE PTR [rax],al
  c3:	00 cf                	add    bh,cl
  c5:	00 00                	add    BYTE PTR [rax],al
  c7:	00 08                	add    BYTE PTR [rax],cl
  c9:	cf                   	iret   
  ca:	00 00                	add    BYTE PTR [rax],al
  cc:	00 09                	add    BYTE PTR [rcx],cl
  ce:	00 09                	add    BYTE PTR [rcx],cl
  d0:	08 07                	or     BYTE PTR [rdi],al
  d2:	00 00                	add    BYTE PTR [rax],al
			d2: R_X86_64_32	.debug_str+0x74c
  d4:	00 00                	add    BYTE PTR [rax],al
  d6:	09 01                	or     DWORD PTR [rcx],eax
  d8:	06                   	(bad)  
  d9:	00 00                	add    BYTE PTR [rax],al
			d9: R_X86_64_32	.debug_str+0x1f16
  db:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
void test_function(int a, int b, int c, int d) {
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <main+0x30b12d1>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	99                   	cdq    
  12:	42 17                	rex.X (bad) 
  14:	00 00                	add    BYTE PTR [rax],al
  16:	02 2e                	add    ch,BYTE PTR [rsi]
  18:	00 3f                	add    BYTE PTR [rdi],bh
  1a:	19 03                	sbb    DWORD PTR [rbx],eax
  1c:	0e                   	(bad)  
  1d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  1f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  21:	49 13 11             	adc    rdx,QWORD PTR [r9]
	flag = 31337;
  24:	01 12                	add    DWORD PTR [rdx],edx
  26:	07                   	(bad)  
  27:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
}
  2e:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
  31:	0b 0b                	or     ecx,DWORD PTR [rbx]
  33:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  36:	08 00                	or     BYTE PTR [rax],al
  38:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
  3b:	01 3f                	add    DWORD PTR [rdi],edi
  3d:	19 03                	sbb    DWORD PTR [rbx],eax
  3f:	0e                   	(bad)  
  40:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  42:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  44:	27                   	(bad)  
int main() {
  45:	19 11                	sbb    DWORD PTR [rcx],edx
  47:	01 12                	add    DWORD PTR [rdx],edx
	test_function(1, 2, 3, 4);
  49:	07                   	(bad)  
  4a:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
  51:	00 00                	add    BYTE PTR [rax],al
  53:	05 05 00 03 08       	add    eax,0x8030005
  58:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  5a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  5c:	49 13 02             	adc    rax,QWORD PTR [r10]
  5f:	18 00                	sbb    BYTE PTR [rax],al
  61:	00 06                	add    BYTE PTR [rsi],al
  63:	34 00                	xor    al,0x0
  65:	03 0e                	add    ecx,DWORD PTR [rsi]
}
  67:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  69:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  6b:	49 13 02             	adc    rax,QWORD PTR [r10]
  6e:	18 00                	sbb    BYTE PTR [rax],al
  70:	00 07                	add    BYTE PTR [rdi],al
  72:	01 01                	add    DWORD PTR [rcx],eax
  74:	49 13 01             	adc    rax,QWORD PTR [r9]
  77:	13 00                	adc    eax,DWORD PTR [rax]
  79:	00 08                	add    BYTE PTR [rax],cl
  7b:	21 00                	and    DWORD PTR [rax],eax
  7d:	49 13 2f             	adc    rbp,QWORD PTR [r15]
  80:	0b 00                	or     eax,DWORD PTR [rax]
  82:	00 09                	add    BYTE PTR [rcx],cl
  84:	24 00                	and    al,0x0
  86:	0b 0b                	or     ecx,DWORD PTR [rbx]
  88:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  8b:	0e                   	(bad)  
  8c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
void test_function(int a, int b, int c, int d) {
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
			6: R_X86_64_32	.debug_info
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
	...
			10: R_X86_64_64	.text
  18:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
	...

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
   0:	04 00                	add    al,0x0
   2:	02 00                	add    al,BYTE PTR [rax]
			3: R_X86_64_32	.debug_line
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 07                	add    BYTE PTR [rdi],al
   8:	00 00                	add    BYTE PTR [rax],al
			8: R_X86_64_32	.debug_macro
   a:	00 00                	add    BYTE PTR [rax],al
   c:	03 00                	add    eax,DWORD PTR [rax]
   e:	01 03                	add    DWORD PTR [rbx],eax
  10:	1f                   	(bad)  
  11:	02 07                	add    al,BYTE PTR [rdi]
  13:	00 00                	add    BYTE PTR [rax],al
			13: R_X86_64_32	.debug_macro
  15:	00 00                	add    BYTE PTR [rax],al
  17:	04 04                	add    al,0x4
	...

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
   0:	04 00                	add    al,0x0
   2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 8 <.debug_macro+0x8>
			5: R_X86_64_32	.debug_str+0x1ccd
   8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # e <.debug_macro+0xe>
			b: R_X86_64_32	.debug_str+0xe7
   e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 14 <.debug_macro+0x14>
			11: R_X86_64_32	.debug_str+0x2120
  14:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1a <.debug_macro+0x1a>
			17: R_X86_64_32	.debug_str+0x223b
  1a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 20 <.debug_macro+0x20>
			1d: R_X86_64_32	.debug_str+0x57f
  20:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 26 <.debug_macro+0x26>
			23: R_X86_64_32	.debug_str+0x49a
	flag = 31337;
  26:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2c <.debug_macro+0x2c>
			29: R_X86_64_32	.debug_str+0xf5b
	buffer[0] = 'A';
  2c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 32 <.debug_macro+0x32>
			2f: R_X86_64_32	.debug_str+0x1498
}
  32:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 38 <.debug_macro+0x38>
			35: R_X86_64_32	.debug_str+0xbef
  38:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e <.debug_macro+0x3e>
			3b: R_X86_64_32	.debug_str+0x1d53
  3e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 44 <.debug_macro+0x44>
			41: R_X86_64_32	.debug_str+0x1554
  44:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4a <.debug_macro+0x4a>
			47: R_X86_64_32	.debug_str+0x1864
	test_function(1, 2, 3, 4);
  4a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 50 <.debug_macro+0x50>
			4d: R_X86_64_32	.debug_str+0x14ae
  50:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 56 <.debug_macro+0x56>
			53: R_X86_64_32	.debug_str+0x2517
  56:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5c <.debug_macro+0x5c>
			59: R_X86_64_32	.debug_str+0x2204
  5c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 62 <.debug_macro+0x62>
			5f: R_X86_64_32	.debug_str+0x901
  62:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 68 <.debug_macro+0x68>
			65: R_X86_64_32	.debug_str+0xcb7
}
  68:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6e <.debug_macro+0x6e>
			6b: R_X86_64_32	.debug_str+0x1c1d
  6e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 74 <.debug_macro+0x74>
			71: R_X86_64_32	.debug_str+0x17ad
  74:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7a <.debug_macro+0x7a>
			77: R_X86_64_32	.debug_str+0x1d66
  7a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 80 <.debug_macro+0x80>
			7d: R_X86_64_32	.debug_str+0x90b
  80:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 86 <.debug_macro+0x86>
			83: R_X86_64_32	.debug_str+0x447
  86:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 8c <.debug_macro+0x8c>
			89: R_X86_64_32	.debug_str+0x1599
  8c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 92 <.debug_macro+0x92>
			8f: R_X86_64_32	.debug_str+0x95d
  92:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 98 <.debug_macro+0x98>
			95: R_X86_64_32	.debug_str+0xdac
  98:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 9e <.debug_macro+0x9e>
			9b: R_X86_64_32	.debug_str+0x129f
  9e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # a4 <.debug_macro+0xa4>
			a1: R_X86_64_32	.debug_str+0x1c77
  a4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # aa <.debug_macro+0xaa>
			a7: R_X86_64_32	.debug_str+0xbdb
  aa:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # b0 <.debug_macro+0xb0>
			ad: R_X86_64_32	.debug_str+0xea5
  b0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # b6 <.debug_macro+0xb6>
			b3: R_X86_64_32	.debug_str+0x94
  b6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # bc <.debug_macro+0xbc>
			b9: R_X86_64_32	.debug_str+0x22f7
  bc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # c2 <.debug_macro+0xc2>
			bf: R_X86_64_32	.debug_str+0x1580
  c2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # c8 <.debug_macro+0xc8>
			c5: R_X86_64_32	.debug_str+0x1d13
  c8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # ce <.debug_macro+0xce>
			cb: R_X86_64_32	.debug_str+0x119b
  ce:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # d4 <.debug_macro+0xd4>
			d1: R_X86_64_32	.debug_str+0x1cd8
  d4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # da <.debug_macro+0xda>
			d7: R_X86_64_32	.debug_str+0xa07
  da:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # e0 <.debug_macro+0xe0>
			dd: R_X86_64_32	.debug_str+0xa53
  e0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # e6 <.debug_macro+0xe6>
			e3: R_X86_64_32	.debug_str+0x100
  e6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # ec <.debug_macro+0xec>
			e9: R_X86_64_32	.debug_str+0x1022
  ec:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # f2 <.debug_macro+0xf2>
			ef: R_X86_64_32	.debug_str+0xd49
  f2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # f8 <.debug_macro+0xf8>
			f5: R_X86_64_32	.debug_str+0x252a
  f8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # fe <.debug_macro+0xfe>
			fb: R_X86_64_32	.debug_str+0x1d30
  fe:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 104 <.debug_macro+0x104>
			101: R_X86_64_32	.debug_str+0x2132
 104:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10a <.debug_macro+0x10a>
			107: R_X86_64_32	.debug_str+0x1700
 10a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 110 <.debug_macro+0x110>
			10d: R_X86_64_32	.debug_str+0x25bd
 110:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 116 <.debug_macro+0x116>
			113: R_X86_64_32	.debug_str+0x1be2
 116:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 11c <.debug_macro+0x11c>
			119: R_X86_64_32	.debug_str+0x8bb
 11c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 122 <.debug_macro+0x122>
			11f: R_X86_64_32	.debug_str+0x16a4
 122:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 128 <.debug_macro+0x128>
			125: R_X86_64_32	.debug_str+0x172a
 128:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 12e <.debug_macro+0x12e>
			12b: R_X86_64_32	.debug_str+0x8a8
 12e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 134 <.debug_macro+0x134>
			131: R_X86_64_32	.debug_str+0x2624
 134:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 13a <.debug_macro+0x13a>
			137: R_X86_64_32	.debug_str+0x16cf
 13a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 140 <.debug_macro+0x140>
			13d: R_X86_64_32	.debug_str+0x224d
 140:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 146 <.debug_macro+0x146>
			143: R_X86_64_32	.debug_str+0x809
 146:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 14c <.debug_macro+0x14c>
			149: R_X86_64_32	.debug_str+0xc66
 14c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 152 <.debug_macro+0x152>
			14f: R_X86_64_32	.debug_str+0x1c27
 152:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 158 <.debug_macro+0x158>
			155: R_X86_64_32	.debug_str+0xab8
 158:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 15e <.debug_macro+0x15e>
			15b: R_X86_64_32	.debug_str+0xc88
 15e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 164 <.debug_macro+0x164>
			161: R_X86_64_32	.debug_str+0xf3d
 164:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 16a <.debug_macro+0x16a>
			167: R_X86_64_32	.debug_str+0x2601
 16a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 170 <.debug_macro+0x170>
			16d: R_X86_64_32	.debug_str+0x17b7
 170:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 176 <.debug_macro+0x176>
			173: R_X86_64_32	.debug_str+0x2391
 176:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 17c <.debug_macro+0x17c>
			179: R_X86_64_32	.debug_str+0xe7d
 17c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 182 <.debug_macro+0x182>
			17f: R_X86_64_32	.debug_str+0x17e0
 182:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 188 <.debug_macro+0x188>
			185: R_X86_64_32	.debug_str+0x1974
 188:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 18e <.debug_macro+0x18e>
			18b: R_X86_64_32	.debug_str+0x15aa
 18e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 194 <.debug_macro+0x194>
			191: R_X86_64_32	.debug_str+0x135b
 194:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 19a <.debug_macro+0x19a>
			197: R_X86_64_32	.debug_str+0x19f5
 19a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1a0 <.debug_macro+0x1a0>
			19d: R_X86_64_32	.debug_str+0x1f31
 1a0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1a6 <.debug_macro+0x1a6>
			1a3: R_X86_64_32	.debug_str+0x1877
 1a6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1ac <.debug_macro+0x1ac>
			1a9: R_X86_64_32	.debug_str+0x9e0
 1ac:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1b2 <.debug_macro+0x1b2>
			1af: R_X86_64_32	.debug_str+0x11b5
 1b2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1b8 <.debug_macro+0x1b8>
			1b5: R_X86_64_32	.debug_str+0x1ff
 1b8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1be <.debug_macro+0x1be>
			1bb: R_X86_64_32	.debug_str+0x2176
 1be:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1c4 <.debug_macro+0x1c4>
			1c1: R_X86_64_32	.debug_str+0xb05
 1c4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1ca <.debug_macro+0x1ca>
			1c7: R_X86_64_32	.debug_str+0x22c9
 1ca:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1d0 <.debug_macro+0x1d0>
			1cd: R_X86_64_32	.debug_str+0xeef
 1d0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1d6 <.debug_macro+0x1d6>
			1d3: R_X86_64_32	.debug_str+0x1c57
 1d6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1dc <.debug_macro+0x1dc>
			1d9: R_X86_64_32	.debug_str+0x13e3
 1dc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1e2 <.debug_macro+0x1e2>
			1df: R_X86_64_32	.debug_str+0x11ce
 1e2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1e8 <.debug_macro+0x1e8>
			1e5: R_X86_64_32	.debug_str+0xfdd
 1e8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1ee <.debug_macro+0x1ee>
			1eb: R_X86_64_32	.debug_str+0x1caf
 1ee:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1f4 <.debug_macro+0x1f4>
			1f1: R_X86_64_32	.debug_str+0x1b56
 1f4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1fa <.debug_macro+0x1fa>
			1f7: R_X86_64_32	.debug_str+0x68f
 1fa:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200 <.debug_macro+0x200>
			1fd: R_X86_64_32	.debug_str+0x591
 200:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 206 <.debug_macro+0x206>
			203: R_X86_64_32	.debug_str+0x1ebe
 206:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 20c <.debug_macro+0x20c>
			209: R_X86_64_32	.debug_str+0x111e
 20c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 212 <.debug_macro+0x212>
			20f: R_X86_64_32	.debug_str+0x6fe
 212:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 218 <.debug_macro+0x218>
			215: R_X86_64_32	.debug_str+0x881
 218:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 21e <.debug_macro+0x21e>
			21b: R_X86_64_32	.debug_str+0x16be
 21e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 224 <.debug_macro+0x224>
			221: R_X86_64_32	.debug_str+0x1b18
 224:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 22a <.debug_macro+0x22a>
			227: R_X86_64_32	.debug_str+0x2036
 22a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 230 <.debug_macro+0x230>
			22d: R_X86_64_32	.debug_str+0x115
 230:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 236 <.debug_macro+0x236>
			233: R_X86_64_32	.debug_str+0xc54
 236:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 23c <.debug_macro+0x23c>
			239: R_X86_64_32	.debug_str+0xeda
 23c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 242 <.debug_macro+0x242>
			23f: R_X86_64_32	.debug_str+0x1b2a
 242:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 248 <.debug_macro+0x248>
			245: R_X86_64_32	.debug_str+0x1841
 248:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 24e <.debug_macro+0x24e>
			24b: R_X86_64_32	.debug_str+0xcfd
 24e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 254 <.debug_macro+0x254>
			251: R_X86_64_32	.debug_str+0x23f2
 254:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 25a <.debug_macro+0x25a>
			257: R_X86_64_32	.debug_str+0x22b2
 25a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 260 <.debug_macro+0x260>
			25d: R_X86_64_32	.debug_str+0x16ec
 260:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 266 <.debug_macro+0x266>
			263: R_X86_64_32	.debug_str+0x1eed
 266:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 26c <.debug_macro+0x26c>
			269: R_X86_64_32	.debug_str+0x2306
 26c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 272 <.debug_macro+0x272>
			26f: R_X86_64_32	.debug_str+0x1fde
 272:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 278 <.debug_macro+0x278>
			275: R_X86_64_32	.debug_str+0x247e
 278:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 27e <.debug_macro+0x27e>
			27b: R_X86_64_32	.debug_str+0x15f7
 27e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 284 <.debug_macro+0x284>
			281: R_X86_64_32	.debug_str+0x19a9
 284:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 28a <.debug_macro+0x28a>
			287: R_X86_64_32	.debug_str+0x1e5b
 28a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 290 <.debug_macro+0x290>
			28d: R_X86_64_32	.debug_str+0xc41
 290:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 296 <.debug_macro+0x296>
			293: R_X86_64_32	.debug_str+0x9af
 296:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 29c <.debug_macro+0x29c>
			299: R_X86_64_32	.debug_str+0x266a
 29c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2a2 <.debug_macro+0x2a2>
			29f: R_X86_64_32	.debug_str+0x2217
 2a2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2a8 <.debug_macro+0x2a8>
			2a5: R_X86_64_32	.debug_str+0x26a1
 2a8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2ae <.debug_macro+0x2ae>
			2ab: R_X86_64_32	.debug_str+0xd9e
 2ae:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2b4 <.debug_macro+0x2b4>
			2b1: R_X86_64_32	.debug_str+0x648
 2b4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2ba <.debug_macro+0x2ba>
			2b7: R_X86_64_32	.debug_str+0x1acd
 2ba:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2c0 <.debug_macro+0x2c0>
			2bd: R_X86_64_32	.debug_str+0x131f
 2c0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2c6 <.debug_macro+0x2c6>
			2c3: R_X86_64_32	.debug_str+0x913
 2c6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2cc <.debug_macro+0x2cc>
			2c9: R_X86_64_32	.debug_str+0x18b6
 2cc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2d2 <.debug_macro+0x2d2>
			2cf: R_X86_64_32	.debug_str+0x4c2
 2d2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2d8 <.debug_macro+0x2d8>
			2d5: R_X86_64_32	.debug_str+0x385
 2d8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2de <.debug_macro+0x2de>
			2db: R_X86_64_32	.debug_str+0x1470
 2de:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2e4 <.debug_macro+0x2e4>
			2e1: R_X86_64_32	.debug_str+0xe1a
 2e4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2ea <.debug_macro+0x2ea>
			2e7: R_X86_64_32	.debug_str+0x263c
 2ea:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2f0 <.debug_macro+0x2f0>
			2ed: R_X86_64_32	.debug_str
 2f0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2f6 <.debug_macro+0x2f6>
			2f3: R_X86_64_32	.debug_str+0x25e0
 2f6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 2fc <.debug_macro+0x2fc>
			2f9: R_X86_64_32	.debug_str+0xa80
 2fc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 302 <.debug_macro+0x302>
			2ff: R_X86_64_32	.debug_str+0x1c47
 302:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 308 <.debug_macro+0x308>
			305: R_X86_64_32	.debug_str+0x73
 308:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 30e <.debug_macro+0x30e>
			30b: R_X86_64_32	.debug_str+0x228b
 30e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 314 <.debug_macro+0x314>
			311: R_X86_64_32	.debug_str+0x1140
 314:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 31a <.debug_macro+0x31a>
			317: R_X86_64_32	.debug_str+0x452
 31a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 320 <.debug_macro+0x320>
			31d: R_X86_64_32	.debug_str+0x7f2
 320:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 326 <.debug_macro+0x326>
			323: R_X86_64_32	.debug_str+0x254e
 326:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 32c <.debug_macro+0x32c>
			329: R_X86_64_32	.debug_str+0x1aa6
 32c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 332 <.debug_macro+0x332>
			32f: R_X86_64_32	.debug_str+0x1f72
 332:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 338 <.debug_macro+0x338>
			335: R_X86_64_32	.debug_str+0x1ff6
 338:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 33e <.debug_macro+0x33e>
			33b: R_X86_64_32	.debug_str+0x11ef
 33e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 344 <.debug_macro+0x344>
			341: R_X86_64_32	.debug_str+0x116a
 344:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 34a <.debug_macro+0x34a>
			347: R_X86_64_32	.debug_str+0x2333
 34a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 350 <.debug_macro+0x350>
			34d: R_X86_64_32	.debug_str+0x2490
 350:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 356 <.debug_macro+0x356>
			353: R_X86_64_32	.debug_str+0xe2e
 356:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 35c <.debug_macro+0x35c>
			359: R_X86_64_32	.debug_str+0x1de3
 35c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 362 <.debug_macro+0x362>
			35f: R_X86_64_32	.debug_str+0x1cb
 362:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 368 <.debug_macro+0x368>
			365: R_X86_64_32	.debug_str+0xb37
 368:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 36e <.debug_macro+0x36e>
			36b: R_X86_64_32	.debug_str+0x56b
 36e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 374 <.debug_macro+0x374>
			371: R_X86_64_32	.debug_str+0x39e
 374:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 37a <.debug_macro+0x37a>
			377: R_X86_64_32	.debug_str+0x1dd3
 37a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 380 <.debug_macro+0x380>
			37d: R_X86_64_32	.debug_str+0x1072
 380:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 386 <.debug_macro+0x386>
			383: R_X86_64_32	.debug_str+0x182b
 386:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 38c <.debug_macro+0x38c>
			389: R_X86_64_32	.debug_str+0x5a1
 38c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 392 <.debug_macro+0x392>
			38f: R_X86_64_32	.debug_str+0xfab
 392:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 398 <.debug_macro+0x398>
			395: R_X86_64_32	.debug_str+0x1fa1
 398:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 39e <.debug_macro+0x39e>
			39b: R_X86_64_32	.debug_str+0x2733
 39e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3a4 <.debug_macro+0x3a4>
			3a1: R_X86_64_32	.debug_str+0xdc3
 3a4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3aa <.debug_macro+0x3aa>
			3a7: R_X86_64_32	.debug_str+0x10bd
 3aa:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3b0 <.debug_macro+0x3b0>
			3ad: R_X86_64_32	.debug_str+0x24c0
 3b0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3b6 <.debug_macro+0x3b6>
			3b3: R_X86_64_32	.debug_str+0xaf1
 3b6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3bc <.debug_macro+0x3bc>
			3b9: R_X86_64_32	.debug_str+0xe57
 3bc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3c2 <.debug_macro+0x3c2>
			3bf: R_X86_64_32	.debug_str+0x153e
 3c2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3c8 <.debug_macro+0x3c8>
			3c5: R_X86_64_32	.debug_str+0x190e
 3c8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3ce <.debug_macro+0x3ce>
			3cb: R_X86_64_32	.debug_str+0x12b2
 3ce:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3d4 <.debug_macro+0x3d4>
			3d1: R_X86_64_32	.debug_str+0x20a7
 3d4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3da <.debug_macro+0x3da>
			3d7: R_X86_64_32	.debug_str+0xb84
 3da:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e0 <.debug_macro+0x3e0>
			3dd: R_X86_64_32	.debug_str+0x96f
 3e0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e6 <.debug_macro+0x3e6>
			3e3: R_X86_64_32	.debug_str+0x1fc7
 3e6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3ec <.debug_macro+0x3ec>
			3e9: R_X86_64_32	.debug_str+0x108a
 3ec:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3f2 <.debug_macro+0x3f2>
			3ef: R_X86_64_32	.debug_str+0x75e
 3f2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3f8 <.debug_macro+0x3f8>
			3f5: R_X86_64_32	.debug_str+0x65f
 3f8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3fe <.debug_macro+0x3fe>
			3fb: R_X86_64_32	.debug_str+0x8e9
 3fe:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 404 <.debug_macro+0x404>
			401: R_X86_64_32	.debug_str+0x26d0
 404:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 40a <.debug_macro+0x40a>
			407: R_X86_64_32	.debug_str+0x17ff
 40a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 410 <.debug_macro+0x410>
			40d: R_X86_64_32	.debug_str+0x2ee
 410:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 416 <.debug_macro+0x416>
			413: R_X86_64_32	.debug_str+0x14dc
 416:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 41c <.debug_macro+0x41c>
			419: R_X86_64_32	.debug_str+0x243c
 41c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 422 <.debug_macro+0x422>
			41f: R_X86_64_32	.debug_str+0x189
 422:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 428 <.debug_macro+0x428>
			425: R_X86_64_32	.debug_str+0x603
 428:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 42e <.debug_macro+0x42e>
			42b: R_X86_64_32	.debug_str+0xdd1
 42e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 434 <.debug_macro+0x434>
			431: R_X86_64_32	.debug_str+0x23b4
 434:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 43a <.debug_macro+0x43a>
			437: R_X86_64_32	.debug_str+0x468
 43a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 440 <.debug_macro+0x440>
			43d: R_X86_64_32	.debug_str+0x24a8
 440:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 446 <.debug_macro+0x446>
			443: R_X86_64_32	.debug_str+0x2161
 446:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 44c <.debug_macro+0x44c>
			449: R_X86_64_32	.debug_str+0x2655
 44c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 452 <.debug_macro+0x452>
			44f: R_X86_64_32	.debug_str+0x1042
 452:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 458 <.debug_macro+0x458>
			455: R_X86_64_32	.debug_str+0x865
 458:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 45e <.debug_macro+0x45e>
			45b: R_X86_64_32	.debug_str+0x1b9e
 45e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 464 <.debug_macro+0x464>
			461: R_X86_64_32	.debug_str+0x23a
 464:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 46a <.debug_macro+0x46a>
			467: R_X86_64_32	.debug_str+0x1348
 46a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 470 <.debug_macro+0x470>
			46d: R_X86_64_32	.debug_str+0x15c7
 470:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 476 <.debug_macro+0x476>
			473: R_X86_64_32	.debug_str+0x1265
 476:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 47c <.debug_macro+0x47c>
			479: R_X86_64_32	.debug_str+0x34b
 47c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 482 <.debug_macro+0x482>
			47f: R_X86_64_32	.debug_str+0x710
 482:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 488 <.debug_macro+0x488>
			485: R_X86_64_32	.debug_str+0x5c2
 488:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 48e <.debug_macro+0x48e>
			48b: R_X86_64_32	.debug_str+0x214b
 48e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 494 <.debug_macro+0x494>
			491: R_X86_64_32	.debug_str+0x945
 494:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 49a <.debug_macro+0x49a>
			497: R_X86_64_32	.debug_str+0xbc2
 49a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4a0 <.debug_macro+0x4a0>
			49d: R_X86_64_32	.debug_str+0x105c
 4a0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4a6 <.debug_macro+0x4a6>
			4a3: R_X86_64_32	.debug_str+0x47
 4a6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4ac <.debug_macro+0x4ac>
			4a9: R_X86_64_32	.debug_str+0x25a4
 4ac:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4b2 <.debug_macro+0x4b2>
			4af: R_X86_64_32	.debug_str+0x14c1
 4b2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4b8 <.debug_macro+0x4b8>
			4b5: R_X86_64_32	.debug_str+0xca1
 4b8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4be <.debug_macro+0x4be>
			4bb: R_X86_64_32	.debug_str+0x124d
 4be:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4c4 <.debug_macro+0x4c4>
			4c1: R_X86_64_32	.debug_str+0x189e
 4c4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4ca <.debug_macro+0x4ca>
			4c7: R_X86_64_32	.debug_str+0xd63
 4ca:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4d0 <.debug_macro+0x4d0>
			4cd: R_X86_64_32	.debug_str+0xf02
 4d0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4d6 <.debug_macro+0x4d6>
			4d3: R_X86_64_32	.debug_str+0x772
 4d6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4dc <.debug_macro+0x4dc>
			4d9: R_X86_64_32	.debug_str+0x7b0
 4dc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4e2 <.debug_macro+0x4e2>
			4df: R_X86_64_32	.debug_str+0x1f8a
 4e2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4e8 <.debug_macro+0x4e8>
			4e5: R_X86_64_32	.debug_str+0x92c
 4e8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4ee <.debug_macro+0x4ee>
			4eb: R_X86_64_32	.debug_str+0xad7
 4ee:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4f4 <.debug_macro+0x4f4>
			4f1: R_X86_64_32	.debug_str+0x1fb1
 4f4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4fa <.debug_macro+0x4fa>
			4f7: R_X86_64_32	.debug_str+0x23e1
 4fa:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 500 <.debug_macro+0x500>
			4fd: R_X86_64_32	.debug_str+0xce3
 500:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 506 <.debug_macro+0x506>
			503: R_X86_64_32	.debug_str+0x19d9
 506:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 50c <.debug_macro+0x50c>
			509: R_X86_64_32	.debug_str+0xcc1
 50c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 512 <.debug_macro+0x512>
			50f: R_X86_64_32	.debug_str+0x271a
 512:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 518 <.debug_macro+0x518>
			515: R_X86_64_32	.debug_str+0x201d
 518:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 51e <.debug_macro+0x51e>
			51b: R_X86_64_32	.debug_str+0x269
 51e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 524 <.debug_macro+0x524>
			521: R_X86_64_32	.debug_str+0x305
 524:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 52a <.debug_macro+0x52a>
			527: R_X86_64_32	.debug_str+0x826
 52a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 530 <.debug_macro+0x530>
			52d: R_X86_64_32	.debug_str+0x204d
 530:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 536 <.debug_macro+0x536>
			533: R_X86_64_32	.debug_str+0x19
 536:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 53c <.debug_macro+0x53c>
			539: R_X86_64_32	.debug_str+0x1306
 53c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 542 <.debug_macro+0x542>
			53f: R_X86_64_32	.debug_str+0x6b3
 542:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 548 <.debug_macro+0x548>
			545: R_X86_64_32	.debug_str+0x23c9
 548:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 54e <.debug_macro+0x54e>
			54b: R_X86_64_32	.debug_str+0x25ef
 54e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 554 <.debug_macro+0x554>
			551: R_X86_64_32	.debug_str+0x984
 554:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 55a <.debug_macro+0x55a>
			557: R_X86_64_32	.debug_str+0x13c5
 55a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 560 <.debug_macro+0x560>
			55d: R_X86_64_32	.debug_str+0x164c
 560:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 566 <.debug_macro+0x566>
			563: R_X86_64_32	.debug_str+0x2564
 566:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 56c <.debug_macro+0x56c>
			569: R_X86_64_32	.debug_str+0x1b3c
 56c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 572 <.debug_macro+0x572>
			56f: R_X86_64_32	.debug_str+0x1665
 572:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 578 <.debug_macro+0x578>
			575: R_X86_64_32	.debug_str+0x1431
 578:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 57e <.debug_macro+0x57e>
			57b: R_X86_64_32	.debug_str+0x512
 57e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 584 <.debug_macro+0x584>
			581: R_X86_64_32	.debug_str+0x234b
 584:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 58a <.debug_macro+0x58a>
			587: R_X86_64_32	.debug_str+0x13fa
 58a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 590 <.debug_macro+0x590>
			58d: R_X86_64_32	.debug_str+0x2d4
 590:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 596 <.debug_macro+0x596>
			593: R_X86_64_32	.debug_str+0x47f
 596:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 59c <.debug_macro+0x59c>
			599: R_X86_64_32	.debug_str+0x1814
 59c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5a2 <.debug_macro+0x5a2>
			59f: R_X86_64_32	.debug_str+0x1bc7
 5a2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5a8 <.debug_macro+0x5a8>
			5a5: R_X86_64_32	.debug_str+0xa38
 5a8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5ae <.debug_macro+0x5ae>
			5ab: R_X86_64_32	.debug_str+0x4a5
 5ae:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5b4 <.debug_macro+0x5b4>
			5b1: R_X86_64_32	.debug_str+0x222
 5b4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5ba <.debug_macro+0x5ba>
			5b7: R_X86_64_32	.debug_str+0xb6a
 5ba:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5c0 <.debug_macro+0x5c0>
			5bd: R_X86_64_32	.debug_str+0x195a
 5c0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5c6 <.debug_macro+0x5c6>
			5c3: R_X86_64_32	.debug_str+0xc03
 5c6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5cc <.debug_macro+0x5cc>
			5c9: R_X86_64_32	.debug_str+0x10e0
 5cc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5d2 <.debug_macro+0x5d2>
			5cf: R_X86_64_32	.debug_str+0x4d1
 5d2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5d8 <.debug_macro+0x5d8>
			5d5: R_X86_64_32	.debug_str+0x1e0c
 5d8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5de <.debug_macro+0x5de>
			5db: R_X86_64_32	.debug_str+0xc6
 5de:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5e4 <.debug_macro+0x5e4>
			5e1: R_X86_64_32	.debug_str+0x1f58
 5e4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5ea <.debug_macro+0x5ea>
			5e7: R_X86_64_32	.debug_str+0x2a5
 5ea:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5f0 <.debug_macro+0x5f0>
			5ed: R_X86_64_32	.debug_str+0x30
 5f0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5f6 <.debug_macro+0x5f6>
			5f3: R_X86_64_32	.debug_str+0x1bb5
 5f6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5fc <.debug_macro+0x5fc>
			5f9: R_X86_64_32	.debug_str+0x57
 5fc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 602 <.debug_macro+0x602>
			5ff: R_X86_64_32	.debug_str+0x1bff
 602:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 608 <.debug_macro+0x608>
			605: R_X86_64_32	.debug_str+0x1ae8
 608:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 60e <.debug_macro+0x60e>
			60b: R_X86_64_32	.debug_str+0x2270
 60e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 614 <.debug_macro+0x614>
			611: R_X86_64_32	.debug_str+0x24fd
 614:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 61a <.debug_macro+0x61a>
			617: R_X86_64_32	.debug_str+0x20e1
 61a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 620 <.debug_macro+0x620>
			61d: R_X86_64_32	.debug_str+0xf6c
 620:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 626 <.debug_macro+0x626>
			623: R_X86_64_32	.debug_str+0x1e7d
 626:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 62c <.debug_macro+0x62c>
			629: R_X86_64_32	.debug_str+0x1207
 62c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 632 <.debug_macro+0x632>
			62f: R_X86_64_32	.debug_str+0x553
 632:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 638 <.debug_macro+0x638>
			635: R_X86_64_32	.debug_str+0x132e
 638:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 63e <.debug_macro+0x63e>
			63b: R_X86_64_32	.debug_str+0x9c5
 63e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 644 <.debug_macro+0x644>
			641: R_X86_64_32	.debug_str+0x1d94
 644:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 64a <.debug_macro+0x64a>
			647: R_X86_64_32	.debug_str+0x1991
 64a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 650 <.debug_macro+0x650>
			64d: R_X86_64_32	.debug_str+0x893
 650:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 656 <.debug_macro+0x656>
			653: R_X86_64_32	.debug_str+0x253
 656:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 65c <.debug_macro+0x65c>
			659: R_X86_64_32	.debug_str+0xfc1
 65c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 662 <.debug_macro+0x662>
			65f: R_X86_64_32	.debug_str+0x21c0
 662:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 668 <.debug_macro+0x668>
			665: R_X86_64_32	.debug_str+0x139e
 668:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 66e <.debug_macro+0x66e>
			66b: R_X86_64_32	.debug_str+0x15a
 66e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 674 <.debug_macro+0x674>
			671: R_X86_64_32	.debug_str+0x170
 674:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 67a <.debug_macro+0x67a>
			677: R_X86_64_32	.debug_str+0x8d3
 67a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 680 <.debug_macro+0x680>
			67d: R_X86_64_32	.debug_str+0x26b9
 680:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 686 <.debug_macro+0x686>
			683: R_X86_64_32	.debug_str+0x1378
 686:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 68c <.debug_macro+0x68c>
			689: R_X86_64_32	.debug_str+0x1da9
 68c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 692 <.debug_macro+0x692>
			68f: R_X86_64_32	.debug_str+0x6cd
 692:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 698 <.debug_macro+0x698>
			695: R_X86_64_32	.debug_str+0x1b01
 698:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 69e <.debug_macro+0x69e>
			69b: R_X86_64_32	.debug_str+0x128
 69e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6a4 <.debug_macro+0x6a4>
			6a1: R_X86_64_32	.debug_str+0x15df
 6a4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6aa <.debug_macro+0x6aa>
			6a7: R_X86_64_32	.debug_str+0x1567
 6aa:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6b0 <.debug_macro+0x6b0>
			6ad: R_X86_64_32	.debug_str+0x1762
 6b0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6b6 <.debug_macro+0x6b6>
			6b3: R_X86_64_32	.debug_str+0x18f3
 6b6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6bc <.debug_macro+0x6bc>
			6b9: R_X86_64_32	.debug_str+0x1a2a
 6bc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6c2 <.debug_macro+0x6c2>
			6bf: R_X86_64_32	.debug_str+0x21ef
 6c2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6c8 <.debug_macro+0x6c8>
			6c5: R_X86_64_32	.debug_str+0x257f
 6c8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6ce <.debug_macro+0x6ce>
			6cb: R_X86_64_32	.debug_str+0x2703
 6ce:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6d4 <.debug_macro+0x6d4>
			6d1: R_X86_64_32	.debug_str+0xe6d
 6d4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6da <.debug_macro+0x6da>
			6d7: R_X86_64_32	.debug_str+0x2417
 6da:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6e0 <.debug_macro+0x6e0>
			6dd: R_X86_64_32	.debug_str+0x1b79
 6e0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6e6 <.debug_macro+0x6e6>
			6e3: R_X86_64_32	.debug_str+0x160c
 6e6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6ec <.debug_macro+0x6ec>
			6e9: R_X86_64_32	.debug_str+0x1c8a
 6ec:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6f2 <.debug_macro+0x6f2>
			6ef: R_X86_64_32	.debug_str+0x1004
 6f2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6f8 <.debug_macro+0x6f8>
			6f5: R_X86_64_32	.debug_str+0x18d5
 6f8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6fe <.debug_macro+0x6fe>
			6fb: R_X86_64_32	.debug_str+0x219e
 6fe:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 704 <.debug_macro+0x704>
			701: R_X86_64_32	.debug_str+0xd12
 704:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 70a <.debug_macro+0x70a>
			707: R_X86_64_32	.debug_str+0x66e
 70a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 710 <.debug_macro+0x710>
			70d: R_X86_64_32	.debug_str+0x1743
 710:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 716 <.debug_macro+0x716>
			713: R_X86_64_32	.debug_str+0x12e9
 716:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 71c <.debug_macro+0x71c>
			719: R_X86_64_32	.debug_str+0xa8
 71c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 722 <.debug_macro+0x722>
			71f: R_X86_64_32	.debug_str+0x1412
 722:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 728 <.debug_macro+0x728>
			725: R_X86_64_32	.debug_str+0x24d9
 728:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 72e <.debug_macro+0x72e>
			72b: R_X86_64_32	.debug_str+0x1cf2
 72e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 734 <.debug_macro+0x734>
			731: R_X86_64_32	.debug_str+0x2685
 734:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 73a <.debug_macro+0x73a>
			737: R_X86_64_32	.debug_str+0xa9c
 73a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 740 <.debug_macro+0x740>
			73d: R_X86_64_32	.debug_str+0x179c
 740:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 746 <.debug_macro+0x746>
			743: R_X86_64_32	.debug_str+0xd34
 746:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 74c <.debug_macro+0x74c>
			749: R_X86_64_32	.debug_str+0x1945
 74c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 752 <.debug_macro+0x752>
			74f: R_X86_64_32	.debug_str+0x2c0
 752:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 758 <.debug_macro+0x758>
			755: R_X86_64_32	.debug_str+0x22e0
 758:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 75e <.debug_macro+0x75e>
			75b: R_X86_64_32	.debug_str+0x341
 75e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 764 <.debug_macro+0x764>
			761: R_X86_64_32	.debug_str+0x1c6b
 764:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 76a <.debug_macro+0x76a>
			767: R_X86_64_32	.debug_str+0x1f0b
 76a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 770 <.debug_macro+0x770>
			76d: R_X86_64_32	.debug_str+0x1d87
 770:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 776 <.debug_macro+0x776>
			773: R_X86_64_32	.debug_str+0x21d9
 776:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 77c <.debug_macro+0x77c>
			779: R_X86_64_32	.debug_str+0x19c2
 77c:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 782 <.debug_macro+0x782>
			77f: R_X86_64_32	.debug_str+0x1a6f
 782:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 788 <.debug_macro+0x788>
			785: R_X86_64_32	.debug_str+0x1a8a
 788:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 78e <.debug_macro+0x78e>
			78b: R_X86_64_32	.debug_str+0x1631
 78e:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 794 <.debug_macro+0x794>
			791: R_X86_64_32	.debug_str+0x22a0
 794:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 79a <.debug_macro+0x79a>
			797: R_X86_64_32	.debug_str+0x1bd9
 79a:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7a0 <.debug_macro+0x7a0>
			79d: R_X86_64_32	.debug_str+0x143
 7a0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7a6 <.debug_macro+0x7a6>
			7a3: R_X86_64_32	.debug_str+0x1e51
 7a6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7ac <.debug_macro+0x7ac>
			7a9: R_X86_64_32	.debug_str+0x1191
 7ac:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7b2 <.debug_macro+0x7b2>
			7af: R_X86_64_32	.debug_str+0xcd8
 7b2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7b8 <.debug_macro+0x7b8>
			7b5: R_X86_64_32	.debug_str+0x6a8
 7b8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7be <.debug_macro+0x7be>
			7bb: R_X86_64_32	.debug_str+0x9a0
 7be:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7c4 <.debug_macro+0x7c4>
			7c1: R_X86_64_32	.debug_str+0x1dc3
 7c4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7ca <.debug_macro+0x7ca>
			7c7: R_X86_64_32	.debug_str+0x22a7
 7ca:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7d0 <.debug_macro+0x7d0>
			7cd: R_X86_64_32	.debug_str+0x1ee2
 7d0:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7d6 <.debug_macro+0x7d6>
			7d3: R_X86_64_32	.debug_str+0xb5a
 7d6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7dc <.debug_macro+0x7dc>
			7d9: R_X86_64_32	.debug_str+0x1d7d
 7dc:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7e2 <.debug_macro+0x7e2>
			7df: R_X86_64_32	.debug_str+0x10d4
 7e2:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7e8 <.debug_macro+0x7e8>
			7e5: R_X86_64_32	.debug_str+0x1d4b
 7e8:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7ee <.debug_macro+0x7ee>
			7eb: R_X86_64_32	.debug_str+0xde
 7ee:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7f4 <.debug_macro+0x7f4>
			7f1: R_X86_64_32	.debug_str+0x1f4
 7f4:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 7fa <.debug_macro+0x7fa>
			7f7: R_X86_64_32	.debug_str+0x1723
 7fa:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 800 <.debug_macro+0x800>
			7fd: R_X86_64_32	.debug_str+0xa2e
 800:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 806 <.debug_macro+0x806>
			803: R_X86_64_32	.debug_str+0x26ea
	...

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
void test_function(int a, int b, int c, int d) {
   0:	04 00                	add    al,0x0
   2:	00 05 13 00 00 00    	add    BYTE PTR [rip+0x13],al        # 1b <.debug_macro+0x1b>
			5: R_X86_64_32	.debug_str+0x253d
   8:	00 05 26 00 00 00    	add    BYTE PTR [rip+0x26],al        # 34 <wm4.0.52c9fc51a3c7999e669b5384b1132782+0x34>
			b: R_X86_64_32	.debug_str+0x1a17
   e:	00 05 2e 00 00 00    	add    BYTE PTR [rip+0x2e],al        # 42 <wm4.0.52c9fc51a3c7999e669b5384b1132782+0x42>
			11: R_X86_64_32	.debug_str+0x10a2
  14:	00 05 3a 00 00 00    	add    BYTE PTR [rip+0x3a],al        # 54 <main+0xf>
			17: R_X86_64_32	.debug_str+0xebf
  1a:	00 05 3d 00 00 00    	add    BYTE PTR [rip+0x3d],al        # 5d <main+0x18>
			1d: R_X86_64_32	.debug_str+0x1f1b
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	76 00                	jbe    2 <.debug_line+0x2>
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	55                   	push   rbp
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <main+0x4c>
  1e:	72 2f                	jb     4f <.debug_line+0x4f>
  20:	78 38                	js     5a <.debug_line+0x5a>
  22:	36 5f                	ss pop rdi
	flag = 31337;
  24:	36 34 2d             	ss xor al,0x2d
  27:	6c                   	ins    BYTE PTR es:[rdi],dx
  28:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
}
  2f:	75 2f                	jne    60 <.debug_line+0x60>
  31:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	73 74                	jae    b0 <main+0x6b>
  3c:	61                   	(bad)  
  3d:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  40:	65 78 61             	gs js  a4 <main+0x5f>
  43:	6d                   	ins    DWORD PTR es:[rdi],dx
  44:	70 6c                	jo     b2 <main+0x6d>
int main() {
  46:	65 2e 63 00          	gs movsxd eax,DWORD PTR cs:[rax]
	test_function(1, 2, 3, 4);
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
  4f:	64 63 2d 70 72 65 64 	movsxd ebp,DWORD PTR fs:[rip+0x64657270]        # 646572c6 <main+0x64657281>
  56:	65 66 2e 68 00 01    	gs cs pushw 0x100
  5c:	00 00                	add    BYTE PTR [rax],al
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	09 02                	or     DWORD PTR [rdx],eax
	...
			62: R_X86_64_64	.text
  6a:	01 08                	add    DWORD PTR [rax],ecx
  6c:	3c e8                	cmp    al,0xe8
  6e:	75 4b                	jne    bb <main+0x76>
  70:	08 68 4b             	or     BYTE PTR [rax+0x4b],ch
  73:	08 c9                	or     cl,cl
  75:	02 02                	add    al,BYTE PTR [rdx]
  77:	00 01                	add    BYTE PTR [rcx],al
  79:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
void test_function(int a, int b, int c, int d) {
       0:	5f                   	pop    rdi
       1:	5f                   	pop    rdi
       2:	55                   	push   rbp
       3:	49                   	rex.WB
       4:	4e 54                	rex.WRX push rsp
       6:	5f                   	pop    rdi
       7:	4c                   	rex.WR
       8:	45                   	rex.RB
       9:	41 53                	push   r11
       b:	54                   	push   rsp
       c:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
       f:	41 58                	pop    r8
      11:	5f                   	pop    rdi
      12:	5f                   	pop    rdi
      13:	20 30                	and    BYTE PTR [rax],dh
      15:	78 66                	js     7d <.debug_str+0x7d>
      17:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
      1b:	46                   	rex.RX
      1c:	4c 54                	rex.WR push rsp
      1e:	36 34 5f             	ss xor al,0x5f
      21:	48                   	rex.W
      22:	41 53                	push   r11
	flag = 31337;
      24:	5f                   	pop    rdi
      25:	44                   	rex.R
      26:	45                   	rex.RB
      27:	4e                   	rex.WRX
      28:	4f 52                	rex.WRXB push r10
	buffer[0] = 'A';
      2a:	4d 5f                	rex.WRB pop r15
      2c:	5f                   	pop    rdi
      2d:	20 31                	and    BYTE PTR [rcx],dh
}
      2f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      32:	46                   	rex.RX
      33:	4c 54                	rex.WR push rsp
      35:	36 34 58             	ss xor al,0x58
      38:	5f                   	pop    rdi
      39:	4d                   	rex.WRB
      3a:	41                   	rex.B
      3b:	4e 54                	rex.WRX push rsp
      3d:	5f                   	pop    rdi
      3e:	44                   	rex.R
      3f:	49                   	rex.WB
      40:	47 5f                	rex.RXB pop r15
      42:	5f                   	pop    rdi
      43:	20 36                	and    BYTE PTR [rsi],dh
int main() {
      45:	34 00                	xor    al,0x0
      47:	5f                   	pop    rdi
      48:	5f                   	pop    rdi
	test_function(1, 2, 3, 4);
      49:	46                   	rex.RX
      4a:	4c 54                	rex.WR push rsp
      4c:	33 32                	xor    esi,DWORD PTR [rdx]
      4e:	5f                   	pop    rdi
      4f:	44                   	rex.R
      50:	49                   	rex.WB
      51:	47 5f                	rex.RXB pop r15
      53:	5f                   	pop    rdi
      54:	20 36                	and    BYTE PTR [rsi],dh
      56:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      59:	46                   	rex.RX
      5a:	4c 54                	rex.WR push rsp
      5c:	36 34 58             	ss xor al,0x58
      5f:	5f                   	pop    rdi
      60:	4d                   	rex.WRB
      61:	49                   	rex.WB
      62:	4e 5f                	rex.WRX pop rdi
      64:	45 58                	rex.RB pop r8
      66:	50                   	push   rax
}
      67:	5f                   	pop    rdi
      68:	5f                   	pop    rdi
      69:	20 28                	and    BYTE PTR [rax],ch
      6b:	2d 31 36 33 38       	sub    eax,0x38333631
      70:	31 29                	xor    DWORD PTR [rcx],ebp
      72:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      75:	55                   	push   rbp
      76:	49                   	rex.WB
      77:	4e 54                	rex.WRX push rsp
      79:	5f                   	pop    rdi
      7a:	4c                   	rex.WR
      7b:	45                   	rex.RB
      7c:	41 53                	push   r11
      7e:	54                   	push   rsp
      7f:	33 32                	xor    esi,DWORD PTR [rdx]
      81:	5f                   	pop    rdi
      82:	4d                   	rex.WRB
      83:	41 58                	pop    r8
      85:	5f                   	pop    rdi
      86:	5f                   	pop    rdi
      87:	20 30                	and    BYTE PTR [rax],dh
      89:	78 66                	js     f1 <.debug_str+0xf1>
      8b:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
      92:	55 
      93:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      96:	53                   	push   rbx
      97:	49 5a                	rex.WB pop r10
      99:	45                   	rex.RB
      9a:	4f                   	rex.WRXB
      9b:	46 5f                	rex.RX pop rdi
      9d:	53                   	push   rbx
      9e:	49 5a                	rex.WB pop r10
      a0:	45 5f                	rex.RB pop r15
      a2:	54                   	push   rsp
      a3:	5f                   	pop    rdi
      a4:	5f                   	pop    rdi
      a5:	20 38                	and    BYTE PTR [rax],bh
      a7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      aa:	47                   	rex.RXB
      ab:	43                   	rex.XB
      ac:	43 5f                	rex.XB pop r15
      ae:	41 54                	push   r12
      b0:	4f                   	rex.WRXB
      b1:	4d                   	rex.WRB
      b2:	49                   	rex.WB
      b3:	43 5f                	rex.XB pop r15
      b5:	4c                   	rex.WR
      b6:	4f                   	rex.WRXB
      b7:	4e                   	rex.WRX
      b8:	47 5f                	rex.RXB pop r15
      ba:	4c                   	rex.WR
      bb:	4f                   	rex.WRXB
      bc:	43                   	rex.XB
      bd:	4b 5f                	rex.WXB pop r15
      bf:	46 52                	rex.RX push rdx
      c1:	45                   	rex.RB
      c2:	45 20 32             	and    BYTE PTR [r10],r14b
      c5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      c8:	46                   	rex.RX
      c9:	4c 54                	rex.WR push rsp
      cb:	33 32                	xor    esi,DWORD PTR [rdx]
      cd:	58                   	pop    rax
      ce:	5f                   	pop    rdi
      cf:	48                   	rex.W
      d0:	41 53                	push   r11
      d2:	5f                   	pop    rdi
      d3:	44                   	rex.R
      d4:	45                   	rex.RB
      d5:	4e                   	rex.WRX
      d6:	4f 52                	rex.WRXB push r10
      d8:	4d 5f                	rex.WRB pop r15
      da:	5f                   	pop    rdi
      db:	20 31                	and    BYTE PTR [rcx],dh
      dd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      e0:	75 6e                	jne    150 <.debug_str+0x150>
      e2:	69 78 20 31 00 5f 5f 	imul   edi,DWORD PTR [rax+0x20],0x5f5f0031
      e9:	53                   	push   rbx
      ea:	54                   	push   rsp
      eb:	44                   	rex.R
      ec:	43 5f                	rex.XB pop r15
      ee:	56                   	push   rsi
      ef:	45 52                	rex.RB push r10
      f1:	53                   	push   rbx
      f2:	49                   	rex.WB
      f3:	4f                   	rex.WRXB
      f4:	4e 5f                	rex.WRX pop rdi
      f6:	5f                   	pop    rdi
      f7:	20 32                	and    BYTE PTR [rdx],dh
      f9:	30 31                	xor    BYTE PTR [rcx],dh
      fb:	31 31                	xor    DWORD PTR [rcx],esi
      fd:	32 4c 00 5f          	xor    cl,BYTE PTR [rax+rax*1+0x5f]
     101:	5f                   	pop    rdi
     102:	53                   	push   rbx
     103:	49 5a                	rex.WB pop r10
     105:	45                   	rex.RB
     106:	4f                   	rex.WRXB
     107:	46 5f                	rex.RX pop rdi
     109:	50                   	push   rax
     10a:	4f                   	rex.WRXB
     10b:	49                   	rex.WB
     10c:	4e 54                	rex.WRX push rsp
     10e:	45 52                	rex.RB push r10
     110:	5f                   	pop    rdi
     111:	5f                   	pop    rdi
     112:	20 38                	and    BYTE PTR [rax],bh
     114:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     117:	57                   	push   rdi
     118:	43                   	rex.XB
     119:	48                   	rex.W
     11a:	41 52                	push   r10
     11c:	5f                   	pop    rdi
     11d:	57                   	push   rdi
     11e:	49                   	rex.WB
     11f:	44 54                	rex.R push rsp
     121:	48 5f                	rex.W pop rdi
     123:	5f                   	pop    rdi
     124:	20 33                	and    BYTE PTR [rbx],dh
     126:	32 00                	xor    al,BYTE PTR [rax]
     128:	5f                   	pop    rdi
     129:	5f                   	pop    rdi
     12a:	44                   	rex.R
     12b:	45                   	rex.RB
     12c:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
     12f:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     132:	49                   	rex.WB
     133:	4e 5f                	rex.WRX pop rdi
     135:	45 58                	rex.RB pop r8
     137:	50                   	push   rax
     138:	5f                   	pop    rdi
     139:	5f                   	pop    rdi
     13a:	20 28                	and    BYTE PTR [rax],ch
     13c:	2d 36 31 34 32       	sub    eax,0x32343136
     141:	29 00                	sub    DWORD PTR [rax],eax
     143:	5f                   	pop    rdi
     144:	5f                   	pop    rdi
     145:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
     148:	65 5f                	gs pop rdi
     14a:	6d                   	ins    DWORD PTR es:[rdi],dx
     14b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     14c:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     14f:	5f                   	pop    rdi
     150:	73 6d                	jae    1bf <.debug_str+0x1bf>
     152:	61                   	(bad)  
     153:	6c                   	ins    BYTE PTR es:[rdi],dx
     154:	6c                   	ins    BYTE PTR es:[rdi],dx
     155:	5f                   	pop    rdi
     156:	5f                   	pop    rdi
     157:	20 31                	and    BYTE PTR [rcx],dh
     159:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     15c:	44                   	rex.R
     15d:	45                   	rex.RB
     15e:	43                   	rex.XB
     15f:	36 34 5f             	ss xor al,0x5f
     162:	4d                   	rex.WRB
     163:	41                   	rex.B
     164:	4e 54                	rex.WRX push rsp
     166:	5f                   	pop    rdi
     167:	44                   	rex.R
     168:	49                   	rex.WB
     169:	47 5f                	rex.RXB pop r15
     16b:	5f                   	pop    rdi
     16c:	20 31                	and    BYTE PTR [rcx],dh
     16e:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     172:	44                   	rex.R
     173:	45                   	rex.RB
     174:	43                   	rex.XB
     175:	36 34 5f             	ss xor al,0x5f
     178:	4d                   	rex.WRB
     179:	49                   	rex.WB
     17a:	4e 5f                	rex.WRX pop rdi
     17c:	45 58                	rex.RB pop r8
     17e:	50                   	push   rax
     17f:	5f                   	pop    rdi
     180:	5f                   	pop    rdi
     181:	20 28                	and    BYTE PTR [rax],ch
     183:	2d 33 38 32 29       	sub    eax,0x29323833
     188:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     18b:	44                   	rex.R
     18c:	42                   	rex.X
     18d:	4c 5f                	rex.WR pop rdi
     18f:	4d                   	rex.WRB
     190:	49                   	rex.WB
     191:	4e 5f                	rex.WRX pop rdi
     193:	5f                   	pop    rdi
     194:	20 28                	and    BYTE PTR [rax],ch
     196:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     19a:	62                   	(bad)  
     19b:	6c                   	ins    BYTE PTR es:[rdi],dx
     19c:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
     19f:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     1a2:	35 30 37 33 38       	xor    eax,0x38333730
     1a7:	35 38 35 30 37       	xor    eax,0x37303538
     1ac:	32 30                	xor    dh,BYTE PTR [rax]
     1ae:	31 33                	xor    DWORD PTR [rbx],esi
     1b0:	38 33                	cmp    BYTE PTR [rbx],dh
     1b2:	30 39                	xor    BYTE PTR [rcx],bh
     1b4:	30 32                	xor    BYTE PTR [rdx],dh
     1b6:	33 32                	xor    esi,DWORD PTR [rdx]
     1b8:	37                   	(bad)  
     1b9:	31 37                	xor    DWORD PTR [rdi],esi
     1bb:	33 33                	xor    esi,DWORD PTR [rbx]
     1bd:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
     1c0:	34 30                	xor    al,0x30
     1c2:	36 65 2d 33 30 38 4c 	ss gs sub eax,0x4c383033
     1c9:	29 00                	sub    DWORD PTR [rax],eax
     1cb:	5f                   	pop    rdi
     1cc:	5f                   	pop    rdi
     1cd:	55                   	push   rbp
     1ce:	49                   	rex.WB
     1cf:	4e 54                	rex.WRX push rsp
     1d1:	5f                   	pop    rdi
     1d2:	46                   	rex.RX
     1d3:	41 53                	push   r11
     1d5:	54                   	push   rsp
     1d6:	36 34 5f             	ss xor al,0x5f
     1d9:	4d                   	rex.WRB
     1da:	41 58                	pop    r8
     1dc:	5f                   	pop    rdi
     1dd:	5f                   	pop    rdi
     1de:	20 30                	and    BYTE PTR [rax],dh
     1e0:	78 66                	js     248 <.debug_str+0x248>
     1e2:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     1e9:	66 66 66 66 66 66 66 
     1f0:	66 55                	push   bp
     1f2:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     1f6:	75 6e                	jne    266 <.debug_str+0x266>
     1f8:	69 78 5f 5f 20 31 00 	imul   edi,DWORD PTR [rax+0x5f],0x31205f
     1ff:	5f                   	pop    rdi
     200:	5f                   	pop    rdi
     201:	55                   	push   rbp
     202:	49                   	rex.WB
     203:	4e 54                	rex.WRX push rsp
     205:	50                   	push   rax
     206:	54                   	push   rsp
     207:	52                   	push   rdx
     208:	5f                   	pop    rdi
     209:	54                   	push   rsp
     20a:	59                   	pop    rcx
     20b:	50                   	push   rax
     20c:	45 5f                	rex.RB pop r15
     20e:	5f                   	pop    rdi
     20f:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     213:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     217:	73 69                	jae    282 <.debug_str+0x282>
     219:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     21b:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     220:	74 00                	je     222 <.debug_str+0x222>
     222:	5f                   	pop    rdi
     223:	5f                   	pop    rdi
     224:	46                   	rex.RX
     225:	4c 54                	rex.WR push rsp
     227:	33 32                	xor    esi,DWORD PTR [rdx]
     229:	58                   	pop    rax
     22a:	5f                   	pop    rdi
     22b:	4d                   	rex.WRB
     22c:	41 58                	pop    r8
     22e:	5f                   	pop    rdi
     22f:	45 58                	rex.RB pop r8
     231:	50                   	push   rax
     232:	5f                   	pop    rdi
     233:	5f                   	pop    rdi
     234:	20 31                	and    BYTE PTR [rcx],dh
     236:	30 32                	xor    BYTE PTR [rdx],dh
     238:	34 00                	xor    al,0x0
     23a:	5f                   	pop    rdi
     23b:	5f                   	pop    rdi
     23c:	4c                   	rex.WR
     23d:	44                   	rex.R
     23e:	42                   	rex.X
     23f:	4c 5f                	rex.WR pop rdi
     241:	4d                   	rex.WRB
     242:	41 58                	pop    r8
     244:	5f                   	pop    rdi
     245:	31 30                	xor    DWORD PTR [rax],esi
     247:	5f                   	pop    rdi
     248:	45 58                	rex.RB pop r8
     24a:	50                   	push   rax
     24b:	5f                   	pop    rdi
     24c:	5f                   	pop    rdi
     24d:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
     250:	33 32                	xor    esi,DWORD PTR [rdx]
     252:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     255:	44                   	rex.R
     256:	45                   	rex.RB
     257:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     25a:	5f                   	pop    rdi
     25b:	4d                   	rex.WRB
     25c:	49                   	rex.WB
     25d:	4e 5f                	rex.WRX pop rdi
     25f:	5f                   	pop    rdi
     260:	20 31                	and    BYTE PTR [rcx],dh
     262:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
     268:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     26b:	46                   	rex.RX
     26c:	4c 54                	rex.WR push rsp
     26e:	36 34 5f             	ss xor al,0x5f
     271:	4d                   	rex.WRB
     272:	41 58                	pop    r8
     274:	5f                   	pop    rdi
     275:	5f                   	pop    rdi
     276:	20 31                	and    BYTE PTR [rcx],dh
     278:	2e 37                	cs (bad) 
     27a:	39 37                	cmp    DWORD PTR [rdi],esi
     27c:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
     27f:	31 33                	xor    DWORD PTR [rbx],esi
     281:	34 38                	xor    al,0x38
     283:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
     286:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 313832c3 <main+0x3138327e>
     28c:	34 35                	xor    al,0x35
     28e:	32 37                	xor    dh,BYTE PTR [rdi]
     290:	34 32                	xor    al,0x32
     292:	33 37                	xor    esi,DWORD PTR [rdi]
     294:	33 31                	xor    esi,DWORD PTR [rcx]
     296:	37                   	(bad)  
     297:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
     29a:	35 37 65 2b 33       	xor    eax,0x332b6537
     29f:	30 38                	xor    BYTE PTR [rax],bh
     2a1:	46                   	rex.RX
     2a2:	36 34 00             	ss xor al,0x0
     2a5:	5f                   	pop    rdi
     2a6:	5f                   	pop    rdi
     2a7:	46                   	rex.RX
     2a8:	4c 54                	rex.WR push rsp
     2aa:	33 32                	xor    esi,DWORD PTR [rdx]
     2ac:	58                   	pop    rax
     2ad:	5f                   	pop    rdi
     2ae:	48                   	rex.W
     2af:	41 53                	push   r11
     2b1:	5f                   	pop    rdi
     2b2:	51                   	push   rcx
     2b3:	55                   	push   rbp
     2b4:	49                   	rex.WB
     2b5:	45 54                	rex.RB push r12
     2b7:	5f                   	pop    rdi
     2b8:	4e                   	rex.WRX
     2b9:	41                   	rex.B
     2ba:	4e 5f                	rex.WRX pop rdi
     2bc:	5f                   	pop    rdi
     2bd:	20 31                	and    BYTE PTR [rcx],dh
     2bf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2c2:	53                   	push   rbx
     2c3:	49 5a                	rex.WB pop r10
     2c5:	45                   	rex.RB
     2c6:	4f                   	rex.WRXB
     2c7:	46 5f                	rex.RX pop rdi
     2c9:	57                   	push   rdi
     2ca:	49                   	rex.WB
     2cb:	4e 54                	rex.WRX push rsp
     2cd:	5f                   	pop    rdi
     2ce:	54                   	push   rsp
     2cf:	5f                   	pop    rdi
     2d0:	5f                   	pop    rdi
     2d1:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
     2d4:	5f                   	pop    rdi
     2d5:	5f                   	pop    rdi
     2d6:	46                   	rex.RX
     2d7:	4c 54                	rex.WR push rsp
     2d9:	31 32                	xor    DWORD PTR [rdx],esi
     2db:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
     2de:	41 53                	push   r11
     2e0:	5f                   	pop    rdi
     2e1:	49                   	rex.WB
     2e2:	4e                   	rex.WRX
     2e3:	46                   	rex.RX
     2e4:	49                   	rex.WB
     2e5:	4e                   	rex.WRX
     2e6:	49 54                	rex.WB push r12
     2e8:	59                   	pop    rcx
     2e9:	5f                   	pop    rdi
     2ea:	5f                   	pop    rdi
     2eb:	20 31                	and    BYTE PTR [rcx],dh
     2ed:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2f0:	44                   	rex.R
     2f1:	42                   	rex.X
     2f2:	4c 5f                	rex.WR pop rdi
     2f4:	4d                   	rex.WRB
     2f5:	41 58                	pop    r8
     2f7:	5f                   	pop    rdi
     2f8:	31 30                	xor    DWORD PTR [rax],esi
     2fa:	5f                   	pop    rdi
     2fb:	45 58                	rex.RB pop r8
     2fd:	50                   	push   rax
     2fe:	5f                   	pop    rdi
     2ff:	5f                   	pop    rdi
     300:	20 33                	and    BYTE PTR [rbx],dh
     302:	30 38                	xor    BYTE PTR [rax],bh
     304:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     307:	46                   	rex.RX
     308:	4c 54                	rex.WR push rsp
     30a:	36 34 5f             	ss xor al,0x5f
     30d:	4d                   	rex.WRB
     30e:	49                   	rex.WB
     30f:	4e 5f                	rex.WRX pop rdi
     311:	5f                   	pop    rdi
     312:	20 32                	and    BYTE PTR [rdx],dh
     314:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     317:	35 30 37 33 38       	xor    eax,0x38333730
     31c:	35 38 35 30 37       	xor    eax,0x37303538
     321:	32 30                	xor    dh,BYTE PTR [rax]
     323:	31 33                	xor    DWORD PTR [rbx],esi
     325:	38 33                	cmp    BYTE PTR [rbx],dh
     327:	30 39                	xor    BYTE PTR [rcx],bh
     329:	30 32                	xor    BYTE PTR [rdx],dh
     32b:	33 32                	xor    esi,DWORD PTR [rdx]
     32d:	37                   	(bad)  
     32e:	31 37                	xor    DWORD PTR [rdi],esi
     330:	33 33                	xor    esi,DWORD PTR [rbx]
     332:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
     335:	34 30                	xor    al,0x30
     337:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
     33e:	36 34 00             	ss xor al,0x0
     341:	5f                   	pop    rdi
     342:	5f                   	pop    rdi
     343:	61                   	(bad)  
     344:	6d                   	ins    DWORD PTR es:[rdi],dx
     345:	64 36 34 20          	fs ss xor al,0x20
     349:	31 00                	xor    DWORD PTR [rax],eax
     34b:	5f                   	pop    rdi
     34c:	5f                   	pop    rdi
     34d:	4c                   	rex.WR
     34e:	44                   	rex.R
     34f:	42                   	rex.X
     350:	4c 5f                	rex.WR pop rdi
     352:	4d                   	rex.WRB
     353:	49                   	rex.WB
     354:	4e 5f                	rex.WRX pop rdi
     356:	5f                   	pop    rdi
     357:	20 33                	and    BYTE PTR [rbx],dh
     359:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
     35c:	32 31                	xor    dh,BYTE PTR [rcx]
     35e:	30 33                	xor    BYTE PTR [rbx],dh
     360:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
     363:	31 31                	xor    DWORD PTR [rcx],esi
     365:	32 30                	xor    dh,BYTE PTR [rax]
     367:	39 33                	cmp    DWORD PTR [rbx],esi
     369:	35 30 36 32 36       	xor    eax,0x36323630
     36e:	32 36                	xor    dh,BYTE PTR [rsi]
     370:	37                   	(bad)  
     371:	37                   	(bad)  
     372:	38 31                	cmp    BYTE PTR [rcx],dh
     374:	37                   	(bad)  
     375:	33 32                	xor    esi,DWORD PTR [rdx]
     377:	31 37                	xor    DWORD PTR [rdi],esi
     379:	35 32 36 30 65       	xor    eax,0x65303632
     37e:	2d 34 39 33 32       	sub    eax,0x32333934
     383:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     387:	49                   	rex.WB
     388:	4e 54                	rex.WRX push rsp
     38a:	5f                   	pop    rdi
     38b:	4c                   	rex.WR
     38c:	45                   	rex.RB
     38d:	41 53                	push   r11
     38f:	54                   	push   rsp
     390:	33 32                	xor    esi,DWORD PTR [rdx]
     392:	5f                   	pop    rdi
     393:	57                   	push   rdi
     394:	49                   	rex.WB
     395:	44 54                	rex.R push rsp
     397:	48 5f                	rex.W pop rdi
     399:	5f                   	pop    rdi
     39a:	20 33                	and    BYTE PTR [rbx],dh
     39c:	32 00                	xor    al,BYTE PTR [rax]
     39e:	5f                   	pop    rdi
     39f:	5f                   	pop    rdi
     3a0:	55                   	push   rbp
     3a1:	49                   	rex.WB
     3a2:	4e 54                	rex.WRX push rsp
     3a4:	50                   	push   rax
     3a5:	54                   	push   rsp
     3a6:	52                   	push   rdx
     3a7:	5f                   	pop    rdi
     3a8:	4d                   	rex.WRB
     3a9:	41 58                	pop    r8
     3ab:	5f                   	pop    rdi
     3ac:	5f                   	pop    rdi
     3ad:	20 30                	and    BYTE PTR [rax],dh
     3af:	78 66                	js     417 <.debug_str+0x417>
     3b1:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     3b8:	66 66 66 66 66 66 66 
     3bf:	66 55                	push   bp
     3c1:	4c 00 2f             	rex.WR add BYTE PTR [rdi],r13b
     3c4:	68 6f 6d 65 2f       	push   0x2f656d6f
     3c9:	75 62                	jne    42d <.debug_str+0x42d>
     3cb:	75 6e                	jne    43b <.debug_str+0x43b>
     3cd:	74 75                	je     444 <.debug_str+0x444>
     3cf:	2f                   	(bad)  
     3d0:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
     3d2:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
     3d9:	6e 
     3da:	67 2f                	addr32 (bad) 
     3dc:	50                   	push   rax
     3dd:	72 6f                	jb     44e <.debug_str+0x44e>
     3df:	67 72 61             	addr32 jb 443 <.debug_str+0x443>
     3e2:	6d                   	ins    DWORD PTR es:[rdi],dx
     3e3:	6d                   	ins    DWORD PTR es:[rdi],dx
     3e4:	69 6e 67 2f 48 61 63 	imul   ebp,DWORD PTR [rsi+0x67],0x6361482f
     3eb:	6b 69 6e 67          	imul   ebp,DWORD PTR [rcx+0x6e],0x67
     3ef:	5f                   	pop    rdi
     3f0:	41 72 74             	rex.B jb 467 <.debug_str+0x467>
     3f3:	5f                   	pop    rdi
     3f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3f5:	66 5f                	pop    di
     3f7:	45 78 70             	rex.RB js 46a <.debug_str+0x46a>
     3fa:	6c                   	ins    BYTE PTR es:[rdi],dx
     3fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3fc:	69 74 61 74 69 6f 6e 	imul   esi,DWORD PTR [rcx+riz*2+0x74],0x2f6e6f69
     403:	2f 
     404:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
     406:	74 65                	je     46d <.debug_str+0x46d>
     408:	6c                   	ins    BYTE PTR es:[rdi],dx
     409:	5f                   	pop    rdi
     40a:	41 72 63             	rex.B jb 470 <.debug_str+0x470>
     40d:	68 69 74 65 63       	push   0x63657469
     412:	74 75                	je     489 <.debug_str+0x489>
     414:	72 65                	jb     47b <.debug_str+0x47b>
     416:	2f                   	(bad)  
     417:	41                   	rex.B
     418:	4d                   	rex.WRB
     419:	44                   	rex.R
     41a:	36 34 2f             	ss xor al,0x2f
     41d:	30 78 32             	xor    BYTE PTR [rax+0x32],bh
     420:	37                   	(bad)  
     421:	30 5f 4d             	xor    BYTE PTR [rdi+0x4d],bl
     424:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     426:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     427:	72 79                	jb     4a2 <.debug_str+0x4a2>
     429:	5f                   	pop    rdi
     42a:	53                   	push   rbx
     42b:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
     42e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     430:	74 61                	je     493 <.debug_str+0x493>
     432:	74 69                	je     49d <.debug_str+0x49d>
     434:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     435:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     436:	2f                   	(bad)  
     437:	57                   	push   rdi
     438:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
     43f:	75 
     440:	67 5f                	addr32 pop rdi
     442:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
     444:	66 6f                	outs   dx,WORD PTR ds:[rsi]
     446:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     449:	4c 50                	rex.WR push rax
     44b:	36 34 5f             	ss xor al,0x5f
     44e:	5f                   	pop    rdi
     44f:	20 31                	and    BYTE PTR [rcx],dh
     451:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     454:	55                   	push   rbp
     455:	49                   	rex.WB
     456:	4e 54                	rex.WRX push rsp
     458:	36 34 5f             	ss xor al,0x5f
     45b:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     45f:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     462:	23 23                	and    esp,DWORD PTR [rbx]
     464:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
     467:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     46a:	44                   	rex.R
     46b:	42                   	rex.X
     46c:	4c 5f                	rex.WR pop rdi
     46e:	48                   	rex.W
     46f:	41 53                	push   r11
     471:	5f                   	pop    rdi
     472:	49                   	rex.WB
     473:	4e                   	rex.WRX
     474:	46                   	rex.RX
     475:	49                   	rex.WB
     476:	4e                   	rex.WRX
     477:	49 54                	rex.WB push r12
     479:	59                   	pop    rcx
     47a:	5f                   	pop    rdi
     47b:	5f                   	pop    rdi
     47c:	20 31                	and    BYTE PTR [rcx],dh
     47e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     481:	46                   	rex.RX
     482:	4c 54                	rex.WR push rsp
     484:	31 32                	xor    DWORD PTR [rdx],esi
     486:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
     489:	41 53                	push   r11
     48b:	5f                   	pop    rdi
     48c:	51                   	push   rcx
     48d:	55                   	push   rbp
     48e:	49                   	rex.WB
     48f:	45 54                	rex.RB push r12
     491:	5f                   	pop    rdi
     492:	4e                   	rex.WRX
     493:	41                   	rex.B
     494:	4e 5f                	rex.WRX pop rdi
     496:	5f                   	pop    rdi
     497:	20 31                	and    BYTE PTR [rcx],dh
     499:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     49c:	47                   	rex.RXB
     49d:	4e 55                	rex.WRX push rbp
     49f:	43 5f                	rex.XB pop r15
     4a1:	5f                   	pop    rdi
     4a2:	20 37                	and    BYTE PTR [rdi],dh
     4a4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     4a7:	46                   	rex.RX
     4a8:	4c 54                	rex.WR push rsp
     4aa:	33 32                	xor    esi,DWORD PTR [rdx]
     4ac:	58                   	pop    rax
     4ad:	5f                   	pop    rdi
     4ae:	4d                   	rex.WRB
     4af:	49                   	rex.WB
     4b0:	4e 5f                	rex.WRX pop rdi
     4b2:	31 30                	xor    DWORD PTR [rax],esi
     4b4:	5f                   	pop    rdi
     4b5:	45 58                	rex.RB pop r8
     4b7:	50                   	push   rax
     4b8:	5f                   	pop    rdi
     4b9:	5f                   	pop    rdi
     4ba:	20 28                	and    BYTE PTR [rax],ch
     4bc:	2d 33 30 37 29       	sub    eax,0x29373033
     4c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     4c4:	49                   	rex.WB
     4c5:	4e 54                	rex.WRX push rsp
     4c7:	33 32                	xor    esi,DWORD PTR [rdx]
     4c9:	5f                   	pop    rdi
     4ca:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     4ce:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
     4d1:	5f                   	pop    rdi
     4d2:	5f                   	pop    rdi
     4d3:	46                   	rex.RX
     4d4:	4c 54                	rex.WR push rsp
     4d6:	33 32                	xor    esi,DWORD PTR [rdx]
     4d8:	58                   	pop    rax
     4d9:	5f                   	pop    rdi
     4da:	45 50                	rex.RB push r8
     4dc:	53                   	push   rbx
     4dd:	49                   	rex.WB
     4de:	4c                   	rex.WR
     4df:	4f                   	rex.WRXB
     4e0:	4e 5f                	rex.WRX pop rdi
     4e2:	5f                   	pop    rdi
     4e3:	20 32                	and    BYTE PTR [rdx],dh
     4e5:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     4e8:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
     4eb:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
     4ef:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33313825 <main+0x333137e0>
     4f5:	30 38                	xor    BYTE PTR [rax],bh
     4f7:	30 38                	xor    BYTE PTR [rax],bh
     4f9:	34 37                	xor    al,0x37
     4fb:	32 36                	xor    dh,BYTE PTR [rsi]
     4fd:	33 33                	xor    esi,DWORD PTR [rbx]
     4ff:	33 36                	xor    esi,DWORD PTR [rsi]
     501:	31 38                	xor    DWORD PTR [rax],edi
     503:	31 36                	xor    DWORD PTR [rsi],esi
     505:	34 30                	xor    al,0x30
     507:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
     50b:	31 36                	xor    DWORD PTR [rsi],esi
     50d:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     510:	78 00                	js     512 <.debug_str+0x512>
     512:	5f                   	pop    rdi
     513:	5f                   	pop    rdi
     514:	46                   	rex.RX
     515:	4c 54                	rex.WR push rsp
     517:	31 32                	xor    DWORD PTR [rdx],esi
     519:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
     51c:	50                   	push   rax
     51d:	53                   	push   rbx
     51e:	49                   	rex.WB
     51f:	4c                   	rex.WR
     520:	4f                   	rex.WRXB
     521:	4e 5f                	rex.WRX pop rdi
     523:	5f                   	pop    rdi
     524:	20 31                	and    BYTE PTR [rcx],dh
     526:	2e 39 32             	cmp    DWORD PTR cs:[rdx],esi
     529:	35 39 32 39 39       	xor    eax,0x39393239
     52e:	34 34                	xor    al,0x34
     530:	33 38                	xor    edi,DWORD PTR [rax]
     532:	37                   	(bad)  
     533:	32 33                	xor    dh,BYTE PTR [rbx]
     535:	35 38 35 33 30       	xor    eax,0x30333538
     53a:	35 35 39 37 37       	xor    eax,0x37373935
     53f:	39 34 32             	cmp    DWORD PTR [rdx+rsi*1],esi
     542:	35 38 34 39 32       	xor    eax,0x32393438
     547:	37                   	(bad)  
     548:	33 32                	xor    esi,DWORD PTR [rdx]
     54a:	65 2d 33 34 46 31    	gs sub eax,0x31463433
     550:	32 38                	xor    bh,BYTE PTR [rax]
     552:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     555:	46                   	rex.RX
     556:	4c 54                	rex.WR push rsp
     558:	36 34 58             	ss xor al,0x58
     55b:	5f                   	pop    rdi
     55c:	48                   	rex.W
     55d:	41 53                	push   r11
     55f:	5f                   	pop    rdi
     560:	44                   	rex.R
     561:	45                   	rex.RB
     562:	4e                   	rex.WRX
     563:	4f 52                	rex.WRXB push r10
     565:	4d 5f                	rex.WRB pop r15
     567:	5f                   	pop    rdi
     568:	20 31                	and    BYTE PTR [rcx],dh
     56a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     56d:	49                   	rex.WB
     56e:	4e 54                	rex.WRX push rsp
     570:	50                   	push   rax
     571:	54                   	push   rsp
     572:	52                   	push   rdx
     573:	5f                   	pop    rdi
     574:	57                   	push   rdi
     575:	49                   	rex.WB
     576:	44 54                	rex.R push rsp
     578:	48 5f                	rex.W pop rdi
     57a:	5f                   	pop    rdi
     57b:	20 36                	and    BYTE PTR [rsi],dh
     57d:	34 00                	xor    al,0x0
     57f:	5f                   	pop    rdi
     580:	5f                   	pop    rdi
     581:	53                   	push   rbx
     582:	54                   	push   rsp
     583:	44                   	rex.R
     584:	43 5f                	rex.XB pop r15
     586:	48                   	rex.W
     587:	4f 53                	rex.WRXB push r11
     589:	54                   	push   rsp
     58a:	45                   	rex.RB
     58b:	44 5f                	rex.R pop rdi
     58d:	5f                   	pop    rdi
     58e:	20 31                	and    BYTE PTR [rcx],dh
     590:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     593:	57                   	push   rdi
     594:	49                   	rex.WB
     595:	4e 54                	rex.WRX push rsp
     597:	5f                   	pop    rdi
     598:	4d                   	rex.WRB
     599:	49                   	rex.WB
     59a:	4e 5f                	rex.WRX pop rdi
     59c:	5f                   	pop    rdi
     59d:	20 30                	and    BYTE PTR [rax],dh
     59f:	55                   	push   rbp
     5a0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5a3:	46                   	rex.RX
     5a4:	4c 54                	rex.WR push rsp
     5a6:	5f                   	pop    rdi
     5a7:	45 56                	rex.RB push r14
     5a9:	41                   	rex.B
     5aa:	4c 5f                	rex.WR pop rdi
     5ac:	4d                   	rex.WRB
     5ad:	45 54                	rex.RB push r12
     5af:	48                   	rex.W
     5b0:	4f                   	rex.WRXB
     5b1:	44 5f                	rex.R pop rdi
     5b3:	54                   	push   rsp
     5b4:	53                   	push   rbx
     5b5:	5f                   	pop    rdi
     5b6:	31 38                	xor    DWORD PTR [rax],edi
     5b8:	36 36 31 5f 33       	ss xor DWORD PTR ss:[rdi+0x33],ebx
     5bd:	5f                   	pop    rdi
     5be:	5f                   	pop    rdi
     5bf:	20 30                	and    BYTE PTR [rax],dh
     5c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5c4:	4c                   	rex.WR
     5c5:	44                   	rex.R
     5c6:	42                   	rex.X
     5c7:	4c 5f                	rex.WR pop rdi
     5c9:	44                   	rex.R
     5ca:	45                   	rex.RB
     5cb:	4e                   	rex.WRX
     5cc:	4f 52                	rex.WRXB push r10
     5ce:	4d 5f                	rex.WRB pop r15
     5d0:	4d                   	rex.WRB
     5d1:	49                   	rex.WB
     5d2:	4e 5f                	rex.WRX pop rdi
     5d4:	5f                   	pop    rdi
     5d5:	20 33                	and    BYTE PTR [rbx],dh
     5d7:	2e 36 34 35          	cs ss xor al,0x35
     5db:	31 39                	xor    DWORD PTR [rcx],edi
     5dd:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 38383716 <main+0x383836d1>
     5e3:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
     5e6:	34 36                	xor    al,0x36
     5e8:	30 32                	xor    BYTE PTR [rdx],dh
     5ea:	35 32 38 34 30       	xor    eax,0x30343832
     5ef:	35 39 33 33 36       	xor    eax,0x36333339
     5f4:	31 39                	xor    DWORD PTR [rcx],edi
     5f6:	34 31                	xor    al,0x31
     5f8:	39 38                	cmp    DWORD PTR [rax],edi
     5fa:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
     5fd:	34 39                	xor    al,0x39
     5ff:	35 31 4c 00 5f       	xor    eax,0x5f004c31
     604:	5f                   	pop    rdi
     605:	44                   	rex.R
     606:	42                   	rex.X
     607:	4c 5f                	rex.WR pop rdi
     609:	45 50                	rex.RB push r8
     60b:	53                   	push   rbx
     60c:	49                   	rex.WB
     60d:	4c                   	rex.WR
     60e:	4f                   	rex.WRXB
     60f:	4e 5f                	rex.WRX pop rdi
     611:	5f                   	pop    rdi
     612:	20 28                	and    BYTE PTR [rax],ch
     614:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     618:	62                   	(bad)  
     619:	6c                   	ins    BYTE PTR es:[rdi],dx
     61a:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
     61d:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     620:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
     623:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
     627:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 3331395d <main+0x33313918>
     62d:	30 38                	xor    BYTE PTR [rax],bh
     62f:	30 38                	xor    BYTE PTR [rax],bh
     631:	34 37                	xor    al,0x37
     633:	32 36                	xor    dh,BYTE PTR [rsi]
     635:	33 33                	xor    esi,DWORD PTR [rbx]
     637:	33 36                	xor    esi,DWORD PTR [rsi]
     639:	31 38                	xor    DWORD PTR [rax],edi
     63b:	31 36                	xor    DWORD PTR [rsi],esi
     63d:	34 30                	xor    al,0x30
     63f:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
     643:	31 36                	xor    DWORD PTR [rsi],esi
     645:	4c 29 00             	sub    QWORD PTR [rax],r8
     648:	5f                   	pop    rdi
     649:	5f                   	pop    rdi
     64a:	49                   	rex.WB
     64b:	4e 54                	rex.WRX push rsp
     64d:	5f                   	pop    rdi
     64e:	4c                   	rex.WR
     64f:	45                   	rex.RB
     650:	41 53                	push   r11
     652:	54                   	push   rsp
     653:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
     656:	49                   	rex.WB
     657:	44 54                	rex.R push rsp
     659:	48 5f                	rex.W pop rdi
     65b:	5f                   	pop    rdi
     65c:	20 38                	and    BYTE PTR [rax],bh
     65e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     661:	44                   	rex.R
     662:	42                   	rex.X
     663:	4c 5f                	rex.WR pop rdi
     665:	44                   	rex.R
     666:	49                   	rex.WB
     667:	47 5f                	rex.RXB pop r15
     669:	5f                   	pop    rdi
     66a:	20 31                	and    BYTE PTR [rcx],dh
     66c:	35 00 5f 5f 47       	xor    eax,0x475f5f00
     671:	43                   	rex.XB
     672:	43 5f                	rex.XB pop r15
     674:	41 54                	push   r12
     676:	4f                   	rex.WRXB
     677:	4d                   	rex.WRB
     678:	49                   	rex.WB
     679:	43 5f                	rex.XB pop r15
     67b:	57                   	push   rdi
     67c:	43                   	rex.XB
     67d:	48                   	rex.W
     67e:	41 52                	push   r10
     680:	5f                   	pop    rdi
     681:	54                   	push   rsp
     682:	5f                   	pop    rdi
     683:	4c                   	rex.WR
     684:	4f                   	rex.WRXB
     685:	43                   	rex.XB
     686:	4b 5f                	rex.WXB pop r15
     688:	46 52                	rex.RX push rdx
     68a:	45                   	rex.RB
     68b:	45 20 32             	and    BYTE PTR [r10],r14b
     68e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     691:	57                   	push   rdi
     692:	49                   	rex.WB
     693:	4e 54                	rex.WRX push rsp
     695:	5f                   	pop    rdi
     696:	4d                   	rex.WRB
     697:	41 58                	pop    r8
     699:	5f                   	pop    rdi
     69a:	5f                   	pop    rdi
     69b:	20 30                	and    BYTE PTR [rax],dh
     69d:	78 66                	js     705 <.debug_str+0x705>
     69f:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
     6a6:	55 
     6a7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     6aa:	46 58                	rex.RX pop rax
     6ac:	53                   	push   rbx
     6ad:	52                   	push   rdx
     6ae:	5f                   	pop    rdi
     6af:	5f                   	pop    rdi
     6b0:	20 31                	and    BYTE PTR [rcx],dh
     6b2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     6b5:	46                   	rex.RX
     6b6:	4c 54                	rex.WR push rsp
     6b8:	36 34 5f             	ss xor al,0x5f
     6bb:	48                   	rex.W
     6bc:	41 53                	push   r11
     6be:	5f                   	pop    rdi
     6bf:	51                   	push   rcx
     6c0:	55                   	push   rbp
     6c1:	49                   	rex.WB
     6c2:	45 54                	rex.RB push r12
     6c4:	5f                   	pop    rdi
     6c5:	4e                   	rex.WRX
     6c6:	41                   	rex.B
     6c7:	4e 5f                	rex.WRX pop rdi
     6c9:	5f                   	pop    rdi
     6ca:	20 31                	and    BYTE PTR [rcx],dh
     6cc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     6cf:	44                   	rex.R
     6d0:	45                   	rex.RB
     6d1:	43                   	rex.XB
     6d2:	36 34 5f             	ss xor al,0x5f
     6d5:	53                   	push   rbx
     6d6:	55                   	push   rbp
     6d7:	42                   	rex.X
     6d8:	4e                   	rex.WRX
     6d9:	4f 52                	rex.WRXB push r10
     6db:	4d                   	rex.WRB
     6dc:	41                   	rex.B
     6dd:	4c 5f                	rex.WR pop rdi
     6df:	4d                   	rex.WRB
     6e0:	49                   	rex.WB
     6e1:	4e 5f                	rex.WRX pop rdi
     6e3:	5f                   	pop    rdi
     6e4:	20 30                	and    BYTE PTR [rax],dh
     6e6:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
     6e9:	30 30                	xor    BYTE PTR [rax],dh
     6eb:	30 30                	xor    BYTE PTR [rax],dh
     6ed:	30 30                	xor    BYTE PTR [rax],dh
     6ef:	30 30                	xor    BYTE PTR [rax],dh
     6f1:	30 30                	xor    BYTE PTR [rax],dh
     6f3:	30 30                	xor    BYTE PTR [rax],dh
     6f5:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
     6f8:	33 38                	xor    edi,DWORD PTR [rax]
     6fa:	33 44 44 00          	xor    eax,DWORD PTR [rsp+rax*2+0x0]
     6fe:	5f                   	pop    rdi
     6ff:	5f                   	pop    rdi
     700:	53                   	push   rbx
     701:	43                   	rex.XB
     702:	48                   	rex.W
     703:	41 52                	push   r10
     705:	5f                   	pop    rdi
     706:	57                   	push   rdi
     707:	49                   	rex.WB
     708:	44 54                	rex.R push rsp
     70a:	48 5f                	rex.W pop rdi
     70c:	5f                   	pop    rdi
     70d:	20 38                	and    BYTE PTR [rax],bh
     70f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     712:	4c                   	rex.WR
     713:	44                   	rex.R
     714:	42                   	rex.X
     715:	4c 5f                	rex.WR pop rdi
     717:	45 50                	rex.RB push r8
     719:	53                   	push   rbx
     71a:	49                   	rex.WB
     71b:	4c                   	rex.WR
     71c:	4f                   	rex.WRXB
     71d:	4e 5f                	rex.WRX pop rdi
     71f:	5f                   	pop    rdi
     720:	20 31                	and    BYTE PTR [rcx],dh
     722:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
     725:	34 32                	xor    al,0x32
     727:	30 32                	xor    BYTE PTR [rdx],dh
     729:	31 37                	xor    DWORD PTR [rdi],esi
     72b:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     72e:	35 35 30 34 34       	xor    eax,0x34343035
     733:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
     736:	30 37                	xor    BYTE PTR [rdi],dh
     738:	34 35                	xor    al,0x35
     73a:	32 38                	xor    bh,BYTE PTR [rax]
     73c:	30 30                	xor    BYTE PTR [rax],dh
     73e:	38 36                	cmp    BYTE PTR [rsi],dh
     740:	39 39                	cmp    DWORD PTR [rcx],edi
     742:	34 31                	xor    al,0x31
     744:	37                   	(bad)  
     745:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
     748:	31 39                	xor    DWORD PTR [rcx],edi
     74a:	4c 00 6c 6f 6e       	rex.WR add BYTE PTR [rdi+rbp*2+0x6e],r13b
     74f:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     753:	73 69                	jae    7be <.debug_str+0x7be>
     755:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     757:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     75c:	74 00                	je     75e <.debug_str+0x75e>
     75e:	5f                   	pop    rdi
     75f:	5f                   	pop    rdi
     760:	44                   	rex.R
     761:	42                   	rex.X
     762:	4c 5f                	rex.WR pop rdi
     764:	4d                   	rex.WRB
     765:	41                   	rex.B
     766:	4e 54                	rex.WRX push rsp
     768:	5f                   	pop    rdi
     769:	44                   	rex.R
     76a:	49                   	rex.WB
     76b:	47 5f                	rex.RXB pop r15
     76d:	5f                   	pop    rdi
     76e:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f07a7 <main+0x5f5f0762>
     774:	46                   	rex.RX
     775:	4c 54                	rex.WR push rsp
     777:	33 32                	xor    esi,DWORD PTR [rdx]
     779:	5f                   	pop    rdi
     77a:	45 50                	rex.RB push r8
     77c:	53                   	push   rbx
     77d:	49                   	rex.WB
     77e:	4c                   	rex.WR
     77f:	4f                   	rex.WRXB
     780:	4e 5f                	rex.WRX pop rdi
     782:	5f                   	pop    rdi
     783:	20 31                	and    BYTE PTR [rcx],dh
     785:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
     788:	32 30                	xor    dh,BYTE PTR [rax]
     78a:	39 32                	cmp    DWORD PTR [rdx],esi
     78c:	38 39                	cmp    BYTE PTR [rcx],bh
     78e:	35 35 30 37 38       	xor    eax,0x38373035
     793:	31 32                	xor    DWORD PTR [rdx],esi
     795:	35 30 30 30 30       	xor    eax,0x30303030
     79a:	30 30                	xor    BYTE PTR [rax],dh
     79c:	30 30                	xor    BYTE PTR [rax],dh
     79e:	30 30                	xor    BYTE PTR [rax],dh
     7a0:	30 30                	xor    BYTE PTR [rax],dh
     7a2:	30 30                	xor    BYTE PTR [rax],dh
     7a4:	30 30                	xor    BYTE PTR [rax],dh
     7a6:	30 30                	xor    BYTE PTR [rax],dh
     7a8:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
     7ab:	37                   	(bad)  
     7ac:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     7af:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7b2:	46                   	rex.RX
     7b3:	4c 54                	rex.WR push rsp
     7b5:	33 32                	xor    esi,DWORD PTR [rdx]
     7b7:	5f                   	pop    rdi
     7b8:	44                   	rex.R
     7b9:	45                   	rex.RB
     7ba:	4e                   	rex.WRX
     7bb:	4f 52                	rex.WRXB push r10
     7bd:	4d 5f                	rex.WRB pop r15
     7bf:	4d                   	rex.WRB
     7c0:	49                   	rex.WB
     7c1:	4e 5f                	rex.WRX pop rdi
     7c3:	5f                   	pop    rdi
     7c4:	20 31                	and    BYTE PTR [rcx],dh
     7c6:	2e 34 30             	cs xor al,0x30
     7c9:	31 32                	xor    DWORD PTR [rdx],esi
     7cb:	39 38                	cmp    DWORD PTR [rax],edi
     7cd:	34 36                	xor    al,0x36
     7cf:	34 33                	xor    al,0x33
     7d1:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     7d4:	31 37                	xor    DWORD PTR [rdi],esi
     7d6:	30 37                	xor    BYTE PTR [rdi],dh
     7d8:	30 39                	xor    BYTE PTR [rcx],bh
     7da:	32 33                	xor    dh,BYTE PTR [rbx]
     7dc:	37                   	(bad)  
     7dd:	32 39                	xor    bh,BYTE PTR [rcx]
     7df:	35 38 33 32 38       	xor    eax,0x38323338
     7e4:	39 39                	cmp    DWORD PTR [rcx],edi
     7e6:	31 36                	xor    DWORD PTR [rsi],esi
     7e8:	31 33                	xor    DWORD PTR [rbx],esi
     7ea:	65 2d 34 35 46 33    	gs sub eax,0x33463534
     7f0:	32 00                	xor    al,BYTE PTR [rax]
     7f2:	5f                   	pop    rdi
     7f3:	5f                   	pop    rdi
     7f4:	49                   	rex.WB
     7f5:	4e 54                	rex.WRX push rsp
     7f7:	5f                   	pop    rdi
     7f8:	46                   	rex.RX
     7f9:	41 53                	push   r11
     7fb:	54                   	push   rsp
     7fc:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     7ff:	41 58                	pop    r8
     801:	5f                   	pop    rdi
     802:	5f                   	pop    rdi
     803:	20 30                	and    BYTE PTR [rax],dh
     805:	78 37                	js     83e <.debug_str+0x83e>
     807:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     80b:	55                   	push   rbp
     80c:	49                   	rex.WB
     80d:	4e 54                	rex.WRX push rsp
     80f:	33 32                	xor    esi,DWORD PTR [rdx]
     811:	5f                   	pop    rdi
     812:	54                   	push   rsp
     813:	59                   	pop    rcx
     814:	50                   	push   rax
     815:	45 5f                	rex.RB pop r15
     817:	5f                   	pop    rdi
     818:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     81b:	73 69                	jae    886 <.debug_str+0x886>
     81d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     81f:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     824:	74 00                	je     826 <.debug_str+0x826>
     826:	5f                   	pop    rdi
     827:	5f                   	pop    rdi
     828:	46                   	rex.RX
     829:	4c 54                	rex.WR push rsp
     82b:	36 34 5f             	ss xor al,0x5f
     82e:	45 50                	rex.RB push r8
     830:	53                   	push   rbx
     831:	49                   	rex.WB
     832:	4c                   	rex.WR
     833:	4f                   	rex.WRXB
     834:	4e 5f                	rex.WRX pop rdi
     836:	5f                   	pop    rdi
     837:	20 32                	and    BYTE PTR [rdx],dh
     839:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     83c:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
     83f:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
     843:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33313b79 <main+0x33313b34>
     849:	30 38                	xor    BYTE PTR [rax],bh
     84b:	30 38                	xor    BYTE PTR [rax],bh
     84d:	34 37                	xor    al,0x37
     84f:	32 36                	xor    dh,BYTE PTR [rsi]
     851:	33 33                	xor    esi,DWORD PTR [rbx]
     853:	33 36                	xor    esi,DWORD PTR [rsi]
     855:	31 38                	xor    DWORD PTR [rax],edi
     857:	31 36                	xor    DWORD PTR [rsi],esi
     859:	34 30                	xor    al,0x30
     85b:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
     85f:	31 36                	xor    DWORD PTR [rsi],esi
     861:	46                   	rex.RX
     862:	36 34 00             	ss xor al,0x0
     865:	5f                   	pop    rdi
     866:	5f                   	pop    rdi
     867:	4c                   	rex.WR
     868:	44                   	rex.R
     869:	42                   	rex.X
     86a:	4c 5f                	rex.WR pop rdi
     86c:	4d                   	rex.WRB
     86d:	49                   	rex.WB
     86e:	4e 5f                	rex.WRX pop rdi
     870:	31 30                	xor    DWORD PTR [rax],esi
     872:	5f                   	pop    rdi
     873:	45 58                	rex.RB pop r8
     875:	50                   	push   rax
     876:	5f                   	pop    rdi
     877:	5f                   	pop    rdi
     878:	20 28                	and    BYTE PTR [rax],ch
     87a:	2d 34 39 33 31       	sub    eax,0x31333934
     87f:	29 00                	sub    DWORD PTR [rax],eax
     881:	5f                   	pop    rdi
     882:	5f                   	pop    rdi
     883:	53                   	push   rbx
     884:	48 52                	rex.W push rdx
     886:	54                   	push   rsp
     887:	5f                   	pop    rdi
     888:	57                   	push   rdi
     889:	49                   	rex.WB
     88a:	44 54                	rex.R push rsp
     88c:	48 5f                	rex.W pop rdi
     88e:	5f                   	pop    rdi
     88f:	20 31                	and    BYTE PTR [rcx],dh
     891:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     895:	44                   	rex.R
     896:	45                   	rex.RB
     897:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     89a:	5f                   	pop    rdi
     89b:	4d                   	rex.WRB
     89c:	41 58                	pop    r8
     89e:	5f                   	pop    rdi
     89f:	45 58                	rex.RB pop r8
     8a1:	50                   	push   rax
     8a2:	5f                   	pop    rdi
     8a3:	5f                   	pop    rdi
     8a4:	20 39                	and    BYTE PTR [rcx],bh
     8a6:	37                   	(bad)  
     8a7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8aa:	49                   	rex.WB
     8ab:	4e 54                	rex.WRX push rsp
     8ad:	33 32                	xor    esi,DWORD PTR [rdx]
     8af:	5f                   	pop    rdi
     8b0:	54                   	push   rsp
     8b1:	59                   	pop    rcx
     8b2:	50                   	push   rax
     8b3:	45 5f                	rex.RB pop r15
     8b5:	5f                   	pop    rdi
     8b6:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     8b9:	74 00                	je     8bb <.debug_str+0x8bb>
     8bb:	5f                   	pop    rdi
     8bc:	5f                   	pop    rdi
     8bd:	53                   	push   rbx
     8be:	49                   	rex.WB
     8bf:	47 5f                	rex.RXB pop r15
     8c1:	41 54                	push   r12
     8c3:	4f                   	rex.WRXB
     8c4:	4d                   	rex.WRB
     8c5:	49                   	rex.WB
     8c6:	43 5f                	rex.XB pop r15
     8c8:	54                   	push   rsp
     8c9:	59                   	pop    rcx
     8ca:	50                   	push   rax
     8cb:	45 5f                	rex.RB pop r15
     8cd:	5f                   	pop    rdi
     8ce:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     8d1:	74 00                	je     8d3 <.debug_str+0x8d3>
     8d3:	5f                   	pop    rdi
     8d4:	5f                   	pop    rdi
     8d5:	44                   	rex.R
     8d6:	45                   	rex.RB
     8d7:	43                   	rex.XB
     8d8:	36 34 5f             	ss xor al,0x5f
     8db:	4d                   	rex.WRB
     8dc:	41 58                	pop    r8
     8de:	5f                   	pop    rdi
     8df:	45 58                	rex.RB pop r8
     8e1:	50                   	push   rax
     8e2:	5f                   	pop    rdi
     8e3:	5f                   	pop    rdi
     8e4:	20 33                	and    BYTE PTR [rbx],dh
     8e6:	38 35 00 5f 5f 44    	cmp    BYTE PTR [rip+0x445f5f00],dh        # 445f67ec <main+0x445f67a7>
     8ec:	42                   	rex.X
     8ed:	4c 5f                	rex.WR pop rdi
     8ef:	4d                   	rex.WRB
     8f0:	49                   	rex.WB
     8f1:	4e 5f                	rex.WRX pop rdi
     8f3:	45 58                	rex.RB pop r8
     8f5:	50                   	push   rax
     8f6:	5f                   	pop    rdi
     8f7:	5f                   	pop    rdi
     8f8:	20 28                	and    BYTE PTR [rax],ch
     8fa:	2d 31 30 32 31       	sub    eax,0x31323031
     8ff:	29 00                	sub    DWORD PTR [rax],eax
     901:	5f                   	pop    rdi
     902:	5f                   	pop    rdi
     903:	70 69                	jo     96e <.debug_str+0x96e>
     905:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
     908:	20 32                	and    BYTE PTR [rdx],dh
     90a:	00 5f 4c             	add    BYTE PTR [rdi+0x4c],bl
     90d:	50                   	push   rax
     90e:	36 34 20             	ss xor al,0x20
     911:	31 00                	xor    DWORD PTR [rax],eax
     913:	5f                   	pop    rdi
     914:	5f                   	pop    rdi
     915:	49                   	rex.WB
     916:	4e 54                	rex.WRX push rsp
     918:	5f                   	pop    rdi
     919:	4c                   	rex.WR
     91a:	45                   	rex.RB
     91b:	41 53                	push   r11
     91d:	54                   	push   rsp
     91e:	31 36                	xor    DWORD PTR [rsi],esi
     920:	5f                   	pop    rdi
     921:	57                   	push   rdi
     922:	49                   	rex.WB
     923:	44 54                	rex.R push rsp
     925:	48 5f                	rex.W pop rdi
     927:	5f                   	pop    rdi
     928:	20 31                	and    BYTE PTR [rcx],dh
     92a:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     92e:	46                   	rex.RX
     92f:	4c 54                	rex.WR push rsp
     931:	33 32                	xor    esi,DWORD PTR [rdx]
     933:	5f                   	pop    rdi
     934:	48                   	rex.W
     935:	41 53                	push   r11
     937:	5f                   	pop    rdi
     938:	49                   	rex.WB
     939:	4e                   	rex.WRX
     93a:	46                   	rex.RX
     93b:	49                   	rex.WB
     93c:	4e                   	rex.WRX
     93d:	49 54                	rex.WB push r12
     93f:	59                   	pop    rcx
     940:	5f                   	pop    rdi
     941:	5f                   	pop    rdi
     942:	20 31                	and    BYTE PTR [rcx],dh
     944:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     947:	4c                   	rex.WR
     948:	44                   	rex.R
     949:	42                   	rex.X
     94a:	4c 5f                	rex.WR pop rdi
     94c:	48                   	rex.W
     94d:	41 53                	push   r11
     94f:	5f                   	pop    rdi
     950:	49                   	rex.WB
     951:	4e                   	rex.WRX
     952:	46                   	rex.RX
     953:	49                   	rex.WB
     954:	4e                   	rex.WRX
     955:	49 54                	rex.WB push r12
     957:	59                   	pop    rcx
     958:	5f                   	pop    rdi
     959:	5f                   	pop    rdi
     95a:	20 31                	and    BYTE PTR [rcx],dh
     95c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     95f:	53                   	push   rbx
     960:	49 5a                	rex.WB pop r10
     962:	45                   	rex.RB
     963:	4f                   	rex.WRXB
     964:	46 5f                	rex.RX pop rdi
     966:	4c                   	rex.WR
     967:	4f                   	rex.WRXB
     968:	4e                   	rex.WRX
     969:	47 5f                	rex.RXB pop r15
     96b:	5f                   	pop    rdi
     96c:	20 38                	and    BYTE PTR [rax],bh
     96e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     971:	46                   	rex.RX
     972:	4c 54                	rex.WR push rsp
     974:	5f                   	pop    rdi
     975:	48                   	rex.W
     976:	41 53                	push   r11
     978:	5f                   	pop    rdi
     979:	44                   	rex.R
     97a:	45                   	rex.RB
     97b:	4e                   	rex.WRX
     97c:	4f 52                	rex.WRXB push r10
     97e:	4d 5f                	rex.WRB pop r15
     980:	5f                   	pop    rdi
     981:	20 31                	and    BYTE PTR [rcx],dh
     983:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     986:	46                   	rex.RX
     987:	4c 54                	rex.WR push rsp
     989:	31 32                	xor    DWORD PTR [rdx],esi
     98b:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     98e:	49                   	rex.WB
     98f:	4e 5f                	rex.WRX pop rdi
     991:	45 58                	rex.RB pop r8
     993:	50                   	push   rax
     994:	5f                   	pop    rdi
     995:	5f                   	pop    rdi
     996:	20 28                	and    BYTE PTR [rax],ch
     998:	2d 31 36 33 38       	sub    eax,0x38333631
     99d:	31 29                	xor    DWORD PTR [rcx],ebp
     99f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9a2:	53                   	push   rbx
     9a3:	53                   	push   rbx
     9a4:	45 5f                	rex.RB pop r15
     9a6:	4d                   	rex.WRB
     9a7:	41 54                	push   r12
     9a9:	48 5f                	rex.W pop rdi
     9ab:	5f                   	pop    rdi
     9ac:	20 31                	and    BYTE PTR [rcx],dh
     9ae:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9b1:	55                   	push   rbp
     9b2:	49                   	rex.WB
     9b3:	4e 54                	rex.WRX push rsp
     9b5:	31 36                	xor    DWORD PTR [rsi],esi
     9b7:	5f                   	pop    rdi
     9b8:	4d                   	rex.WRB
     9b9:	41 58                	pop    r8
     9bb:	5f                   	pop    rdi
     9bc:	5f                   	pop    rdi
     9bd:	20 30                	and    BYTE PTR [rax],dh
     9bf:	78 66                	js     a27 <.debug_str+0xa27>
     9c1:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
     9c7:	46                   	rex.RX
     9c8:	4c 54                	rex.WR push rsp
     9ca:	36 34 58             	ss xor al,0x58
     9cd:	5f                   	pop    rdi
     9ce:	48                   	rex.W
     9cf:	41 53                	push   r11
     9d1:	5f                   	pop    rdi
     9d2:	51                   	push   rcx
     9d3:	55                   	push   rbp
     9d4:	49                   	rex.WB
     9d5:	45 54                	rex.RB push r12
     9d7:	5f                   	pop    rdi
     9d8:	4e                   	rex.WRX
     9d9:	41                   	rex.B
     9da:	4e 5f                	rex.WRX pop rdi
     9dc:	5f                   	pop    rdi
     9dd:	20 31                	and    BYTE PTR [rcx],dh
     9df:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9e2:	55                   	push   rbp
     9e3:	49                   	rex.WB
     9e4:	4e 54                	rex.WRX push rsp
     9e6:	5f                   	pop    rdi
     9e7:	46                   	rex.RX
     9e8:	41 53                	push   r11
     9ea:	54                   	push   rsp
     9eb:	36 34 5f             	ss xor al,0x5f
     9ee:	54                   	push   rsp
     9ef:	59                   	pop    rcx
     9f0:	50                   	push   rax
     9f1:	45 5f                	rex.RB pop r15
     9f3:	5f                   	pop    rdi
     9f4:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     9f8:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     9fc:	73 69                	jae    a67 <.debug_str+0xa67>
     9fe:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     a00:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     a05:	74 00                	je     a07 <.debug_str+0xa07>
     a07:	5f                   	pop    rdi
     a08:	5f                   	pop    rdi
     a09:	42 59                	rex.X pop rcx
     a0b:	54                   	push   rsp
     a0c:	45 5f                	rex.RB pop r15
     a0e:	4f 52                	rex.WRXB push r10
     a10:	44                   	rex.R
     a11:	45 52                	rex.RB push r10
     a13:	5f                   	pop    rdi
     a14:	5f                   	pop    rdi
     a15:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     a18:	4f 52                	rex.WRXB push r10
     a1a:	44                   	rex.R
     a1b:	45 52                	rex.RB push r10
     a1d:	5f                   	pop    rdi
     a1e:	4c                   	rex.WR
     a1f:	49 54                	rex.WB push r12
     a21:	54                   	push   rsp
     a22:	4c                   	rex.WR
     a23:	45 5f                	rex.RB pop r15
     a25:	45                   	rex.RB
     a26:	4e                   	rex.WRX
     a27:	44                   	rex.R
     a28:	49                   	rex.WB
     a29:	41                   	rex.B
     a2a:	4e 5f                	rex.WRX pop rdi
     a2c:	5f                   	pop    rdi
     a2d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a30:	45                   	rex.RB
     a31:	4c                   	rex.WR
     a32:	46 5f                	rex.RX pop rdi
     a34:	5f                   	pop    rdi
     a35:	20 31                	and    BYTE PTR [rcx],dh
     a37:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a3a:	46                   	rex.RX
     a3b:	4c 54                	rex.WR push rsp
     a3d:	33 32                	xor    esi,DWORD PTR [rdx]
     a3f:	58                   	pop    rax
     a40:	5f                   	pop    rdi
     a41:	4d                   	rex.WRB
     a42:	49                   	rex.WB
     a43:	4e 5f                	rex.WRX pop rdi
     a45:	45 58                	rex.RB pop r8
     a47:	50                   	push   rax
     a48:	5f                   	pop    rdi
     a49:	5f                   	pop    rdi
     a4a:	20 28                	and    BYTE PTR [rax],ch
     a4c:	2d 31 30 32 31       	sub    eax,0x31323031
     a51:	29 00                	sub    DWORD PTR [rax],eax
     a53:	5f                   	pop    rdi
     a54:	5f                   	pop    rdi
     a55:	46                   	rex.RX
     a56:	4c                   	rex.WR
     a57:	4f                   	rex.WRXB
     a58:	41 54                	push   r12
     a5a:	5f                   	pop    rdi
     a5b:	57                   	push   rdi
     a5c:	4f 52                	rex.WRXB push r10
     a5e:	44 5f                	rex.R pop rdi
     a60:	4f 52                	rex.WRXB push r10
     a62:	44                   	rex.R
     a63:	45 52                	rex.RB push r10
     a65:	5f                   	pop    rdi
     a66:	5f                   	pop    rdi
     a67:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     a6a:	4f 52                	rex.WRXB push r10
     a6c:	44                   	rex.R
     a6d:	45 52                	rex.RB push r10
     a6f:	5f                   	pop    rdi
     a70:	4c                   	rex.WR
     a71:	49 54                	rex.WB push r12
     a73:	54                   	push   rsp
     a74:	4c                   	rex.WR
     a75:	45 5f                	rex.RB pop r15
     a77:	45                   	rex.RB
     a78:	4e                   	rex.WRX
     a79:	44                   	rex.R
     a7a:	49                   	rex.WB
     a7b:	41                   	rex.B
     a7c:	4e 5f                	rex.WRX pop rdi
     a7e:	5f                   	pop    rdi
     a7f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a82:	55                   	push   rbp
     a83:	49                   	rex.WB
     a84:	4e 54                	rex.WRX push rsp
     a86:	5f                   	pop    rdi
     a87:	4c                   	rex.WR
     a88:	45                   	rex.RB
     a89:	41 53                	push   r11
     a8b:	54                   	push   rsp
     a8c:	31 36                	xor    DWORD PTR [rsi],esi
     a8e:	5f                   	pop    rdi
     a8f:	4d                   	rex.WRB
     a90:	41 58                	pop    r8
     a92:	5f                   	pop    rdi
     a93:	5f                   	pop    rdi
     a94:	20 30                	and    BYTE PTR [rax],dh
     a96:	78 66                	js     afe <.debug_str+0xafe>
     a98:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
     a9e:	50                   	push   rax
     a9f:	52                   	push   rdx
     aa0:	41                   	rex.B
     aa1:	47                   	rex.RXB
     aa2:	4d                   	rex.WRB
     aa3:	41 5f                	pop    r15
     aa5:	52                   	push   rdx
     aa6:	45                   	rex.RB
     aa7:	44                   	rex.R
     aa8:	45                   	rex.RB
     aa9:	46                   	rex.RX
     aaa:	49                   	rex.WB
     aab:	4e                   	rex.WRX
     aac:	45 5f                	rex.RB pop r15
     aae:	45 58                	rex.RB pop r8
     ab0:	54                   	push   rsp
     ab1:	4e                   	rex.WRX
     ab2:	41                   	rex.B
     ab3:	4d                   	rex.WRB
     ab4:	45 20 31             	and    BYTE PTR [r9],r14b
     ab7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     aba:	49                   	rex.WB
     abb:	4e 54                	rex.WRX push rsp
     abd:	5f                   	pop    rdi
     abe:	4c                   	rex.WR
     abf:	45                   	rex.RB
     ac0:	41 53                	push   r11
     ac2:	54                   	push   rsp
     ac3:	31 36                	xor    DWORD PTR [rsi],esi
     ac5:	5f                   	pop    rdi
     ac6:	54                   	push   rsp
     ac7:	59                   	pop    rcx
     ac8:	50                   	push   rax
     ac9:	45 5f                	rex.RB pop r15
     acb:	5f                   	pop    rdi
     acc:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
     acf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ad0:	72 74                	jb     b46 <.debug_str+0xb46>
     ad2:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     ad5:	74 00                	je     ad7 <.debug_str+0xad7>
     ad7:	5f                   	pop    rdi
     ad8:	5f                   	pop    rdi
     ad9:	46                   	rex.RX
     ada:	4c 54                	rex.WR push rsp
     adc:	33 32                	xor    esi,DWORD PTR [rdx]
     ade:	5f                   	pop    rdi
     adf:	48                   	rex.W
     ae0:	41 53                	push   r11
     ae2:	5f                   	pop    rdi
     ae3:	51                   	push   rcx
     ae4:	55                   	push   rbp
     ae5:	49                   	rex.WB
     ae6:	45 54                	rex.RB push r12
     ae8:	5f                   	pop    rdi
     ae9:	4e                   	rex.WRX
     aea:	41                   	rex.B
     aeb:	4e 5f                	rex.WRX pop rdi
     aed:	5f                   	pop    rdi
     aee:	20 31                	and    BYTE PTR [rcx],dh
     af0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     af3:	46                   	rex.RX
     af4:	4c 54                	rex.WR push rsp
     af6:	5f                   	pop    rdi
     af7:	4d                   	rex.WRB
     af8:	41 58                	pop    r8
     afa:	5f                   	pop    rdi
     afb:	45 58                	rex.RB pop r8
     afd:	50                   	push   rax
     afe:	5f                   	pop    rdi
     aff:	5f                   	pop    rdi
     b00:	20 31                	and    BYTE PTR [rcx],dh
     b02:	32 38                	xor    bh,BYTE PTR [rax]
     b04:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b07:	68 61 73 5f 69       	push   0x695f7361
     b0c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b0d:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     b11:	65 5f                	gs pop rdi
     b13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b14:	65 78 74             	gs js  b8b <.debug_str+0xb8b>
     b17:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     b1a:	52                   	push   rdx
     b1b:	29 20                	sub    DWORD PTR [rax],esp
     b1d:	5f                   	pop    rdi
     b1e:	5f                   	pop    rdi
     b1f:	68 61 73 5f 69       	push   0x695f7361
     b24:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b25:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     b29:	65 5f                	gs pop rdi
     b2b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b2c:	65 78 74             	gs js  ba3 <.debug_str+0xba3>
     b2f:	5f                   	pop    rdi
     b30:	5f                   	pop    rdi
     b31:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     b34:	52                   	push   rdx
     b35:	29 00                	sub    DWORD PTR [rax],eax
     b37:	5f                   	pop    rdi
     b38:	5f                   	pop    rdi
     b39:	49                   	rex.WB
     b3a:	4e 54                	rex.WRX push rsp
     b3c:	50                   	push   rax
     b3d:	54                   	push   rsp
     b3e:	52                   	push   rdx
     b3f:	5f                   	pop    rdi
     b40:	4d                   	rex.WRB
     b41:	41 58                	pop    r8
     b43:	5f                   	pop    rdi
     b44:	5f                   	pop    rdi
     b45:	20 30                	and    BYTE PTR [rax],dh
     b47:	78 37                	js     b80 <.debug_str+0xb80>
     b49:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     b50:	66 66 66 66 66 66 66 
     b57:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     b5c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     b5e:	75 5f                	jne    bbf <.debug_str+0xbbf>
     b60:	6c                   	ins    BYTE PTR es:[rdi],dx
     b61:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
     b68:	31 00                	xor    DWORD PTR [rax],eax
     b6a:	5f                   	pop    rdi
     b6b:	5f                   	pop    rdi
     b6c:	46                   	rex.RX
     b6d:	4c 54                	rex.WR push rsp
     b6f:	33 32                	xor    esi,DWORD PTR [rdx]
     b71:	58                   	pop    rax
     b72:	5f                   	pop    rdi
     b73:	4d                   	rex.WRB
     b74:	41 58                	pop    r8
     b76:	5f                   	pop    rdi
     b77:	31 30                	xor    DWORD PTR [rax],esi
     b79:	5f                   	pop    rdi
     b7a:	45 58                	rex.RB pop r8
     b7c:	50                   	push   rax
     b7d:	5f                   	pop    rdi
     b7e:	5f                   	pop    rdi
     b7f:	20 33                	and    BYTE PTR [rbx],dh
     b81:	30 38                	xor    BYTE PTR [rax],bh
     b83:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b86:	46                   	rex.RX
     b87:	4c 54                	rex.WR push rsp
     b89:	5f                   	pop    rdi
     b8a:	44                   	rex.R
     b8b:	45                   	rex.RB
     b8c:	4e                   	rex.WRX
     b8d:	4f 52                	rex.WRXB push r10
     b8f:	4d 5f                	rex.WRB pop r15
     b91:	4d                   	rex.WRB
     b92:	49                   	rex.WB
     b93:	4e 5f                	rex.WRX pop rdi
     b95:	5f                   	pop    rdi
     b96:	20 31                	and    BYTE PTR [rcx],dh
     b98:	2e 34 30             	cs xor al,0x30
     b9b:	31 32                	xor    DWORD PTR [rdx],esi
     b9d:	39 38                	cmp    DWORD PTR [rax],edi
     b9f:	34 36                	xor    al,0x36
     ba1:	34 33                	xor    al,0x33
     ba3:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     ba6:	31 37                	xor    DWORD PTR [rdi],esi
     ba8:	30 37                	xor    BYTE PTR [rdi],dh
     baa:	30 39                	xor    BYTE PTR [rcx],bh
     bac:	32 33                	xor    dh,BYTE PTR [rbx]
     bae:	37                   	(bad)  
     baf:	32 39                	xor    bh,BYTE PTR [rcx]
     bb1:	35 38 33 32 38       	xor    eax,0x38323338
     bb6:	39 39                	cmp    DWORD PTR [rcx],edi
     bb8:	31 36                	xor    DWORD PTR [rsi],esi
     bba:	31 33                	xor    DWORD PTR [rbx],esi
     bbc:	65 2d 34 35 46 00    	gs sub eax,0x463534
     bc2:	5f                   	pop    rdi
     bc3:	5f                   	pop    rdi
     bc4:	4c                   	rex.WR
     bc5:	44                   	rex.R
     bc6:	42                   	rex.X
     bc7:	4c 5f                	rex.WR pop rdi
     bc9:	48                   	rex.W
     bca:	41 53                	push   r11
     bcc:	5f                   	pop    rdi
     bcd:	51                   	push   rcx
     bce:	55                   	push   rbp
     bcf:	49                   	rex.WB
     bd0:	45 54                	rex.RB push r12
     bd2:	5f                   	pop    rdi
     bd3:	4e                   	rex.WRX
     bd4:	41                   	rex.B
     bd5:	4e 5f                	rex.WRX pop rdi
     bd7:	5f                   	pop    rdi
     bd8:	20 31                	and    BYTE PTR [rcx],dh
     bda:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     bdd:	53                   	push   rbx
     bde:	49 5a                	rex.WB pop r10
     be0:	45                   	rex.RB
     be1:	4f                   	rex.WRXB
     be2:	46 5f                	rex.RX pop rdi
     be4:	44                   	rex.R
     be5:	4f 55                	rex.WRXB push r13
     be7:	42                   	rex.X
     be8:	4c                   	rex.WR
     be9:	45 5f                	rex.RB pop r15
     beb:	5f                   	pop    rdi
     bec:	20 38                	and    BYTE PTR [rax],bh
     bee:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     bf1:	56                   	push   rsi
     bf2:	45 52                	rex.RB push r10
     bf4:	53                   	push   rbx
     bf5:	49                   	rex.WB
     bf6:	4f                   	rex.WRXB
     bf7:	4e 5f                	rex.WRX pop rdi
     bf9:	5f                   	pop    rdi
     bfa:	20 22                	and    BYTE PTR [rdx],ah
     bfc:	37                   	(bad)  
     bfd:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
     c00:	30 22                	xor    BYTE PTR [rdx],ah
     c02:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     c05:	46                   	rex.RX
     c06:	4c 54                	rex.WR push rsp
     c08:	33 32                	xor    esi,DWORD PTR [rdx]
     c0a:	58                   	pop    rax
     c0b:	5f                   	pop    rdi
     c0c:	4d                   	rex.WRB
     c0d:	41 58                	pop    r8
     c0f:	5f                   	pop    rdi
     c10:	5f                   	pop    rdi
     c11:	20 31                	and    BYTE PTR [rcx],dh
     c13:	2e 37                	cs (bad) 
     c15:	39 37                	cmp    DWORD PTR [rdi],esi
     c17:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
     c1a:	31 33                	xor    DWORD PTR [rbx],esi
     c1c:	34 38                	xor    al,0x38
     c1e:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
     c21:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31383c5e <main+0x31383c19>
     c27:	34 35                	xor    al,0x35
     c29:	32 37                	xor    dh,BYTE PTR [rdi]
     c2b:	34 32                	xor    al,0x32
     c2d:	33 37                	xor    esi,DWORD PTR [rdi]
     c2f:	33 31                	xor    esi,DWORD PTR [rcx]
     c31:	37                   	(bad)  
     c32:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
     c35:	35 37 65 2b 33       	xor    eax,0x332b6537
     c3a:	30 38                	xor    BYTE PTR [rax],bh
     c3c:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     c3f:	78 00                	js     c41 <.debug_str+0xc41>
     c41:	5f                   	pop    rdi
     c42:	5f                   	pop    rdi
     c43:	55                   	push   rbp
     c44:	49                   	rex.WB
     c45:	4e 54                	rex.WRX push rsp
     c47:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     c4a:	41 58                	pop    r8
     c4c:	5f                   	pop    rdi
     c4d:	5f                   	pop    rdi
     c4e:	20 30                	and    BYTE PTR [rax],dh
     c50:	78 66                	js     cb8 <.debug_str+0xcb8>
     c52:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     c56:	57                   	push   rdi
     c57:	49                   	rex.WB
     c58:	4e 54                	rex.WRX push rsp
     c5a:	5f                   	pop    rdi
     c5b:	57                   	push   rdi
     c5c:	49                   	rex.WB
     c5d:	44 54                	rex.R push rsp
     c5f:	48 5f                	rex.W pop rdi
     c61:	5f                   	pop    rdi
     c62:	20 33                	and    BYTE PTR [rbx],dh
     c64:	32 00                	xor    al,BYTE PTR [rax]
     c66:	5f                   	pop    rdi
     c67:	5f                   	pop    rdi
     c68:	55                   	push   rbp
     c69:	49                   	rex.WB
     c6a:	4e 54                	rex.WRX push rsp
     c6c:	36 34 5f             	ss xor al,0x5f
     c6f:	54                   	push   rsp
     c70:	59                   	pop    rcx
     c71:	50                   	push   rax
     c72:	45 5f                	rex.RB pop r15
     c74:	5f                   	pop    rdi
     c75:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     c79:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     c7d:	73 69                	jae    ce8 <.debug_str+0xce8>
     c7f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c81:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     c86:	74 00                	je     c88 <.debug_str+0xc88>
     c88:	5f                   	pop    rdi
     c89:	5f                   	pop    rdi
     c8a:	49                   	rex.WB
     c8b:	4e 54                	rex.WRX push rsp
     c8d:	5f                   	pop    rdi
     c8e:	4c                   	rex.WR
     c8f:	45                   	rex.RB
     c90:	41 53                	push   r11
     c92:	54                   	push   rsp
     c93:	33 32                	xor    esi,DWORD PTR [rdx]
     c95:	5f                   	pop    rdi
     c96:	54                   	push   rsp
     c97:	59                   	pop    rcx
     c98:	50                   	push   rax
     c99:	45 5f                	rex.RB pop r15
     c9b:	5f                   	pop    rdi
     c9c:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     c9f:	74 00                	je     ca1 <.debug_str+0xca1>
     ca1:	5f                   	pop    rdi
     ca2:	5f                   	pop    rdi
     ca3:	46                   	rex.RX
     ca4:	4c 54                	rex.WR push rsp
     ca6:	33 32                	xor    esi,DWORD PTR [rdx]
     ca8:	5f                   	pop    rdi
     ca9:	4d                   	rex.WRB
     caa:	41 58                	pop    r8
     cac:	5f                   	pop    rdi
     cad:	45 58                	rex.RB pop r8
     caf:	50                   	push   rax
     cb0:	5f                   	pop    rdi
     cb1:	5f                   	pop    rdi
     cb2:	20 31                	and    BYTE PTR [rcx],dh
     cb4:	32 38                	xor    bh,BYTE PTR [rax]
     cb6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cb9:	50                   	push   rax
     cba:	49                   	rex.WB
     cbb:	43 5f                	rex.XB pop r15
     cbd:	5f                   	pop    rdi
     cbe:	20 32                	and    BYTE PTR [rdx],dh
     cc0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cc3:	46                   	rex.RX
     cc4:	4c 54                	rex.WR push rsp
     cc6:	36 34 5f             	ss xor al,0x5f
     cc9:	4d                   	rex.WRB
     cca:	41 58                	pop    r8
     ccc:	5f                   	pop    rdi
     ccd:	45 58                	rex.RB pop r8
     ccf:	50                   	push   rax
     cd0:	5f                   	pop    rdi
     cd1:	5f                   	pop    rdi
     cd2:	20 31                	and    BYTE PTR [rcx],dh
     cd4:	30 32                	xor    BYTE PTR [rdx],dh
     cd6:	34 00                	xor    al,0x0
     cd8:	5f                   	pop    rdi
     cd9:	5f                   	pop    rdi
     cda:	53                   	push   rbx
     cdb:	53                   	push   rbx
     cdc:	45 32 5f 5f          	xor    r11b,BYTE PTR [r15+0x5f]
     ce0:	20 31                	and    BYTE PTR [rcx],dh
     ce2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ce5:	46                   	rex.RX
     ce6:	4c 54                	rex.WR push rsp
     ce8:	36 34 5f             	ss xor al,0x5f
     ceb:	4d                   	rex.WRB
     cec:	49                   	rex.WB
     ced:	4e 5f                	rex.WRX pop rdi
     cef:	45 58                	rex.RB pop r8
     cf1:	50                   	push   rax
     cf2:	5f                   	pop    rdi
     cf3:	5f                   	pop    rdi
     cf4:	20 28                	and    BYTE PTR [rax],ch
     cf6:	2d 31 30 32 31       	sub    eax,0x31323031
     cfb:	29 00                	sub    DWORD PTR [rax],eax
     cfd:	5f                   	pop    rdi
     cfe:	5f                   	pop    rdi
     cff:	49                   	rex.WB
     d00:	4e 54                	rex.WRX push rsp
     d02:	4d                   	rex.WRB
     d03:	41 58                	pop    r8
     d05:	5f                   	pop    rdi
     d06:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     d0a:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     d0d:	23 23                	and    esp,DWORD PTR [rbx]
     d0f:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
     d13:	5f                   	pop    rdi
     d14:	47                   	rex.RXB
     d15:	43                   	rex.XB
     d16:	43 5f                	rex.XB pop r15
     d18:	41 54                	push   r12
     d1a:	4f                   	rex.WRXB
     d1b:	4d                   	rex.WRB
     d1c:	49                   	rex.WB
     d1d:	43 5f                	rex.XB pop r15
     d1f:	43                   	rex.XB
     d20:	48                   	rex.W
     d21:	41 52                	push   r10
     d23:	33 32                	xor    esi,DWORD PTR [rdx]
     d25:	5f                   	pop    rdi
     d26:	54                   	push   rsp
     d27:	5f                   	pop    rdi
     d28:	4c                   	rex.WR
     d29:	4f                   	rex.WRXB
     d2a:	43                   	rex.XB
     d2b:	4b 5f                	rex.WXB pop r15
     d2d:	46 52                	rex.RX push rdx
     d2f:	45                   	rex.RB
     d30:	45 20 32             	and    BYTE PTR [r10],r14b
     d33:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     d36:	53                   	push   rbx
     d37:	49 5a                	rex.WB pop r10
     d39:	45                   	rex.RB
     d3a:	4f                   	rex.WRXB
     d3b:	46 5f                	rex.RX pop rdi
     d3d:	49                   	rex.WB
     d3e:	4e 54                	rex.WRX push rsp
     d40:	31 32                	xor    DWORD PTR [rdx],esi
     d42:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
     d45:	20 31                	and    BYTE PTR [rcx],dh
     d47:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     d4b:	50                   	push   rax
     d4c:	54                   	push   rsp
     d4d:	52                   	push   rdx
     d4e:	44                   	rex.R
     d4f:	49                   	rex.WB
     d50:	46                   	rex.RX
     d51:	46 5f                	rex.RX pop rdi
     d53:	54                   	push   rsp
     d54:	59                   	pop    rcx
     d55:	50                   	push   rax
     d56:	45 5f                	rex.RB pop r15
     d58:	5f                   	pop    rdi
     d59:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     d5d:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     d61:	74 00                	je     d63 <.debug_str+0xd63>
     d63:	5f                   	pop    rdi
     d64:	5f                   	pop    rdi
     d65:	46                   	rex.RX
     d66:	4c 54                	rex.WR push rsp
     d68:	33 32                	xor    esi,DWORD PTR [rdx]
     d6a:	5f                   	pop    rdi
     d6b:	4d                   	rex.WRB
     d6c:	41 58                	pop    r8
     d6e:	5f                   	pop    rdi
     d6f:	5f                   	pop    rdi
     d70:	20 33                	and    BYTE PTR [rbx],dh
     d72:	2e 34 30             	cs xor al,0x30
     d75:	32 38                	xor    bh,BYTE PTR [rax]
     d77:	32 33                	xor    dh,BYTE PTR [rbx]
     d79:	34 36                	xor    al,0x36
     d7b:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
     d7e:	35 32 38 38 35       	xor    eax,0x35383832
     d83:	39 38                	cmp    DWORD PTR [rax],edi
     d85:	31 31                	xor    DWORD PTR [rcx],esi
     d87:	37                   	(bad)  
     d88:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
     d8b:	38 33                	cmp    BYTE PTR [rbx],dh
     d8d:	34 38                	xor    al,0x38
     d8f:	34 35                	xor    al,0x35
     d91:	31 36                	xor    DWORD PTR [rsi],esi
     d93:	39 32                	cmp    DWORD PTR [rdx],esi
     d95:	35 65 2b 33 38       	xor    eax,0x38332b65
     d9a:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     d9d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     da0:	49                   	rex.WB
     da1:	4e 54                	rex.WRX push rsp
     da3:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
     da6:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
     da9:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
     dac:	5f                   	pop    rdi
     dad:	5f                   	pop    rdi
     dae:	53                   	push   rbx
     daf:	49 5a                	rex.WB pop r10
     db1:	45                   	rex.RB
     db2:	4f                   	rex.WRXB
     db3:	46 5f                	rex.RX pop rdi
     db5:	4c                   	rex.WR
     db6:	4f                   	rex.WRXB
     db7:	4e                   	rex.WRX
     db8:	47 5f                	rex.RXB pop r15
     dba:	4c                   	rex.WR
     dbb:	4f                   	rex.WRXB
     dbc:	4e                   	rex.WRX
     dbd:	47 5f                	rex.RXB pop r15
     dbf:	5f                   	pop    rdi
     dc0:	20 38                	and    BYTE PTR [rax],bh
     dc2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     dc5:	46                   	rex.RX
     dc6:	4c 54                	rex.WR push rsp
     dc8:	5f                   	pop    rdi
     dc9:	44                   	rex.R
     dca:	49                   	rex.WB
     dcb:	47 5f                	rex.RXB pop r15
     dcd:	5f                   	pop    rdi
     dce:	20 36                	and    BYTE PTR [rsi],dh
     dd0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     dd3:	44                   	rex.R
     dd4:	42                   	rex.X
     dd5:	4c 5f                	rex.WR pop rdi
     dd7:	44                   	rex.R
     dd8:	45                   	rex.RB
     dd9:	4e                   	rex.WRX
     dda:	4f 52                	rex.WRXB push r10
     ddc:	4d 5f                	rex.WRB pop r15
     dde:	4d                   	rex.WRB
     ddf:	49                   	rex.WB
     de0:	4e 5f                	rex.WRX pop rdi
     de2:	5f                   	pop    rdi
     de3:	20 28                	and    BYTE PTR [rax],ch
     de5:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     de9:	62                   	(bad)  
     dea:	6c                   	ins    BYTE PTR es:[rdi],dx
     deb:	65 29 34 2e          	sub    DWORD PTR gs:[rsi+rbp*1],esi
     def:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
     df2:	36 35 36 34 35 38    	ss xor eax,0x38353436
     df8:	34 31                	xor    al,0x31
     dfa:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
     dfd:	35 34 34 31 37       	xor    eax,0x37313434
     e02:	36 35 36 38 37 39    	ss xor eax,0x39373836
     e08:	32 38                	xor    bh,BYTE PTR [rax]
     e0a:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
     e0d:	32 31                	xor    dh,BYTE PTR [rcx]
     e0f:	33 37                	xor    esi,DWORD PTR [rdi]
     e11:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
     e14:	33 32                	xor    esi,DWORD PTR [rdx]
     e16:	34 4c                	xor    al,0x4c
     e18:	29 00                	sub    DWORD PTR [rax],eax
     e1a:	5f                   	pop    rdi
     e1b:	5f                   	pop    rdi
     e1c:	49                   	rex.WB
     e1d:	4e 54                	rex.WRX push rsp
     e1f:	36 34 5f             	ss xor al,0x5f
     e22:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     e26:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     e29:	23 23                	and    esp,DWORD PTR [rbx]
     e2b:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
     e2f:	5f                   	pop    rdi
     e30:	55                   	push   rbp
     e31:	49                   	rex.WB
     e32:	4e 54                	rex.WRX push rsp
     e34:	5f                   	pop    rdi
     e35:	46                   	rex.RX
     e36:	41 53                	push   r11
     e38:	54                   	push   rsp
     e39:	31 36                	xor    DWORD PTR [rsi],esi
     e3b:	5f                   	pop    rdi
     e3c:	4d                   	rex.WRB
     e3d:	41 58                	pop    r8
     e3f:	5f                   	pop    rdi
     e40:	5f                   	pop    rdi
     e41:	20 30                	and    BYTE PTR [rax],dh
     e43:	78 66                	js     eab <.debug_str+0xeab>
     e45:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     e4c:	66 66 66 66 66 66 66 
     e53:	66 55                	push   bp
     e55:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     e59:	46                   	rex.RX
     e5a:	4c 54                	rex.WR push rsp
     e5c:	5f                   	pop    rdi
     e5d:	4d                   	rex.WRB
     e5e:	41 58                	pop    r8
     e60:	5f                   	pop    rdi
     e61:	31 30                	xor    DWORD PTR [rax],esi
     e63:	5f                   	pop    rdi
     e64:	45 58                	rex.RB pop r8
     e66:	50                   	push   rax
     e67:	5f                   	pop    rdi
     e68:	5f                   	pop    rdi
     e69:	20 33                	and    BYTE PTR [rbx],dh
     e6b:	38 00                	cmp    BYTE PTR [rax],al
     e6d:	5f                   	pop    rdi
     e6e:	5f                   	pop    rdi
     e6f:	4e                   	rex.WRX
     e70:	4f 5f                	rex.WRXB pop r15
     e72:	49                   	rex.WB
     e73:	4e                   	rex.WRX
     e74:	4c                   	rex.WR
     e75:	49                   	rex.WB
     e76:	4e                   	rex.WRX
     e77:	45 5f                	rex.RB pop r15
     e79:	5f                   	pop    rdi
     e7a:	20 31                	and    BYTE PTR [rcx],dh
     e7c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     e7f:	55                   	push   rbp
     e80:	49                   	rex.WB
     e81:	4e 54                	rex.WRX push rsp
     e83:	5f                   	pop    rdi
     e84:	4c                   	rex.WR
     e85:	45                   	rex.RB
     e86:	41 53                	push   r11
     e88:	54                   	push   rsp
     e89:	36 34 5f             	ss xor al,0x5f
     e8c:	54                   	push   rsp
     e8d:	59                   	pop    rcx
     e8e:	50                   	push   rax
     e8f:	45 5f                	rex.RB pop r15
     e91:	5f                   	pop    rdi
     e92:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     e96:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     e9a:	73 69                	jae    f05 <.debug_str+0xf05>
     e9c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     e9e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     ea3:	74 00                	je     ea5 <.debug_str+0xea5>
     ea5:	5f                   	pop    rdi
     ea6:	5f                   	pop    rdi
     ea7:	53                   	push   rbx
     ea8:	49 5a                	rex.WB pop r10
     eaa:	45                   	rex.RB
     eab:	4f                   	rex.WRXB
     eac:	46 5f                	rex.RX pop rdi
     eae:	4c                   	rex.WR
     eaf:	4f                   	rex.WRXB
     eb0:	4e                   	rex.WRX
     eb1:	47 5f                	rex.RXB pop r15
     eb3:	44                   	rex.R
     eb4:	4f 55                	rex.WRXB push r13
     eb6:	42                   	rex.X
     eb7:	4c                   	rex.WR
     eb8:	45 5f                	rex.RB pop r15
     eba:	5f                   	pop    rdi
     ebb:	20 31                	and    BYTE PTR [rcx],dh
     ebd:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     ec1:	53                   	push   rbx
     ec2:	54                   	push   rsp
     ec3:	44                   	rex.R
     ec4:	43 5f                	rex.XB pop r15
     ec6:	49 53                	rex.WB push r11
     ec8:	4f 5f                	rex.WRXB pop r15
     eca:	31 30                	xor    DWORD PTR [rax],esi
     ecc:	36 34 36             	ss xor al,0x36
     ecf:	5f                   	pop    rdi
     ed0:	5f                   	pop    rdi
     ed1:	20 32                	and    BYTE PTR [rdx],dh
     ed3:	30 31                	xor    BYTE PTR [rcx],dh
     ed5:	37                   	(bad)  
     ed6:	30 36                	xor    BYTE PTR [rsi],dh
     ed8:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     edc:	50                   	push   rax
     edd:	54                   	push   rsp
     ede:	52                   	push   rdx
     edf:	44                   	rex.R
     ee0:	49                   	rex.WB
     ee1:	46                   	rex.RX
     ee2:	46 5f                	rex.RX pop rdi
     ee4:	57                   	push   rdi
     ee5:	49                   	rex.WB
     ee6:	44 54                	rex.R push rsp
     ee8:	48 5f                	rex.W pop rdi
     eea:	5f                   	pop    rdi
     eeb:	20 36                	and    BYTE PTR [rsi],dh
     eed:	34 00                	xor    al,0x0
     eef:	5f                   	pop    rdi
     ef0:	5f                   	pop    rdi
     ef1:	53                   	push   rbx
     ef2:	43                   	rex.XB
     ef3:	48                   	rex.W
     ef4:	41 52                	push   r10
     ef6:	5f                   	pop    rdi
     ef7:	4d                   	rex.WRB
     ef8:	41 58                	pop    r8
     efa:	5f                   	pop    rdi
     efb:	5f                   	pop    rdi
     efc:	20 30                	and    BYTE PTR [rax],dh
     efe:	78 37                	js     f37 <.debug_str+0xf37>
     f00:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     f04:	46                   	rex.RX
     f05:	4c 54                	rex.WR push rsp
     f07:	33 32                	xor    esi,DWORD PTR [rdx]
     f09:	5f                   	pop    rdi
     f0a:	4d                   	rex.WRB
     f0b:	49                   	rex.WB
     f0c:	4e 5f                	rex.WRX pop rdi
     f0e:	5f                   	pop    rdi
     f0f:	20 31                	and    BYTE PTR [rcx],dh
     f11:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
     f14:	35 34 39 34 33       	xor    eax,0x33343934
     f19:	35 30 38 32 32       	xor    eax,0x32323830
     f1e:	32 38                	xor    bh,BYTE PTR [rax]
     f20:	37                   	(bad)  
     f21:	35 30 37 39 36       	xor    eax,0x36393730
     f26:	38 37                	cmp    BYTE PTR [rdi],dh
     f28:	33 36                	xor    esi,DWORD PTR [rsi]
     f2a:	35 33 37 32 32       	xor    eax,0x32323733
     f2f:	32 32                	xor    dh,BYTE PTR [rdx]
     f31:	34 35                	xor    al,0x35
     f33:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
     f37:	33 38                	xor    edi,DWORD PTR [rax]
     f39:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     f3c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     f3f:	49                   	rex.WB
     f40:	4e 54                	rex.WRX push rsp
     f42:	5f                   	pop    rdi
     f43:	4c                   	rex.WR
     f44:	45                   	rex.RB
     f45:	41 53                	push   r11
     f47:	54                   	push   rsp
     f48:	36 34 5f             	ss xor al,0x5f
     f4b:	54                   	push   rsp
     f4c:	59                   	pop    rcx
     f4d:	50                   	push   rax
     f4e:	45 5f                	rex.RB pop r15
     f50:	5f                   	pop    rdi
     f51:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     f55:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     f59:	74 00                	je     f5b <.debug_str+0xf5b>
     f5b:	5f                   	pop    rdi
     f5c:	5f                   	pop    rdi
     f5d:	47                   	rex.RXB
     f5e:	4e 55                	rex.WRX push rbp
     f60:	43 5f                	rex.XB pop r15
     f62:	4d                   	rex.WRB
     f63:	49                   	rex.WB
     f64:	4e                   	rex.WRX
     f65:	4f 52                	rex.WRXB push r10
     f67:	5f                   	pop    rdi
     f68:	5f                   	pop    rdi
     f69:	20 33                	and    BYTE PTR [rbx],dh
     f6b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     f6e:	46                   	rex.RX
     f6f:	4c 54                	rex.WR push rsp
     f71:	36 34 58             	ss xor al,0x58
     f74:	5f                   	pop    rdi
     f75:	4d                   	rex.WRB
     f76:	49                   	rex.WB
     f77:	4e 5f                	rex.WRX pop rdi
     f79:	5f                   	pop    rdi
     f7a:	20 33                	and    BYTE PTR [rbx],dh
     f7c:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
     f7f:	32 31                	xor    dh,BYTE PTR [rcx]
     f81:	30 33                	xor    BYTE PTR [rbx],dh
     f83:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
     f86:	31 31                	xor    DWORD PTR [rcx],esi
     f88:	32 30                	xor    dh,BYTE PTR [rax]
     f8a:	39 33                	cmp    DWORD PTR [rbx],esi
     f8c:	35 30 36 32 36       	xor    eax,0x36323630
     f91:	32 36                	xor    dh,BYTE PTR [rsi]
     f93:	37                   	(bad)  
     f94:	37                   	(bad)  
     f95:	38 31                	cmp    BYTE PTR [rcx],dh
     f97:	37                   	(bad)  
     f98:	33 32                	xor    esi,DWORD PTR [rdx]
     f9a:	31 37                	xor    DWORD PTR [rdi],esi
     f9c:	35 32 36 30 65       	xor    eax,0x65303632
     fa1:	2d 34 39 33 32       	sub    eax,0x32333934
     fa6:	46                   	rex.RX
     fa7:	36 34 78             	ss xor al,0x78
     faa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     fad:	44                   	rex.R
     fae:	45                   	rex.RB
     faf:	43 5f                	rex.XB pop r15
     fb1:	45 56                	rex.RB push r14
     fb3:	41                   	rex.B
     fb4:	4c 5f                	rex.WR pop rdi
     fb6:	4d                   	rex.WRB
     fb7:	45 54                	rex.RB push r12
     fb9:	48                   	rex.W
     fba:	4f                   	rex.WRXB
     fbb:	44 5f                	rex.R pop rdi
     fbd:	5f                   	pop    rdi
     fbe:	20 32                	and    BYTE PTR [rdx],dh
     fc0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     fc3:	44                   	rex.R
     fc4:	45                   	rex.RB
     fc5:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     fc8:	5f                   	pop    rdi
     fc9:	4d                   	rex.WRB
     fca:	41 58                	pop    r8
     fcc:	5f                   	pop    rdi
     fcd:	5f                   	pop    rdi
     fce:	20 39                	and    BYTE PTR [rcx],bh
     fd0:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
     fd3:	39 39                	cmp    DWORD PTR [rcx],edi
     fd5:	39 39                	cmp    DWORD PTR [rcx],edi
     fd7:	45 39 36             	cmp    DWORD PTR [r14],r14d
     fda:	44                   	rex.R
     fdb:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
     fdf:	4c                   	rex.WR
     fe0:	4f                   	rex.WRXB
     fe1:	4e                   	rex.WRX
     fe2:	47 5f                	rex.RXB pop r15
     fe4:	4c                   	rex.WR
     fe5:	4f                   	rex.WRXB
     fe6:	4e                   	rex.WRX
     fe7:	47 5f                	rex.RXB pop r15
     fe9:	4d                   	rex.WRB
     fea:	41 58                	pop    r8
     fec:	5f                   	pop    rdi
     fed:	5f                   	pop    rdi
     fee:	20 30                	and    BYTE PTR [rax],dh
     ff0:	78 37                	js     1029 <.debug_str+0x1029>
     ff2:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     ff9:	66 66 66 66 66 66 66 
    1000:	66 4c                	data16 rex.WR
    1002:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1006:	47                   	rex.RXB
    1007:	43                   	rex.XB
    1008:	43 5f                	rex.XB pop r15
    100a:	41 54                	push   r12
    100c:	4f                   	rex.WRXB
    100d:	4d                   	rex.WRB
    100e:	49                   	rex.WB
    100f:	43 5f                	rex.XB pop r15
    1011:	42                   	rex.X
    1012:	4f                   	rex.WRXB
    1013:	4f                   	rex.WRXB
    1014:	4c 5f                	rex.WR pop rdi
    1016:	4c                   	rex.WR
    1017:	4f                   	rex.WRXB
    1018:	43                   	rex.XB
    1019:	4b 5f                	rex.WXB pop r15
    101b:	46 52                	rex.RX push rdx
    101d:	45                   	rex.RB
    101e:	45 20 32             	and    BYTE PTR [r10],r14b
    1021:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1024:	53                   	push   rbx
    1025:	49 5a                	rex.WB pop r10
    1027:	45 5f                	rex.RB pop r15
    1029:	54                   	push   rsp
    102a:	59                   	pop    rcx
    102b:	50                   	push   rax
    102c:	45 5f                	rex.RB pop r15
    102e:	5f                   	pop    rdi
    102f:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1033:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1037:	73 69                	jae    10a2 <.debug_str+0x10a2>
    1039:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    103b:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1040:	74 00                	je     1042 <.debug_str+0x1042>
    1042:	5f                   	pop    rdi
    1043:	5f                   	pop    rdi
    1044:	4c                   	rex.WR
    1045:	44                   	rex.R
    1046:	42                   	rex.X
    1047:	4c 5f                	rex.WR pop rdi
    1049:	4d                   	rex.WRB
    104a:	49                   	rex.WB
    104b:	4e 5f                	rex.WRX pop rdi
    104d:	45 58                	rex.RB pop r8
    104f:	50                   	push   rax
    1050:	5f                   	pop    rdi
    1051:	5f                   	pop    rdi
    1052:	20 28                	and    BYTE PTR [rax],ch
    1054:	2d 31 36 33 38       	sub    eax,0x38333631
    1059:	31 29                	xor    DWORD PTR [rcx],ebp
    105b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    105e:	46                   	rex.RX
    105f:	4c 54                	rex.WR push rsp
    1061:	33 32                	xor    esi,DWORD PTR [rdx]
    1063:	5f                   	pop    rdi
    1064:	4d                   	rex.WRB
    1065:	41                   	rex.B
    1066:	4e 54                	rex.WRX push rsp
    1068:	5f                   	pop    rdi
    1069:	44                   	rex.R
    106a:	49                   	rex.WB
    106b:	47 5f                	rex.RXB pop r15
    106d:	5f                   	pop    rdi
    106e:	20 32                	and    BYTE PTR [rdx],dh
    1070:	34 00                	xor    al,0x0
    1072:	5f                   	pop    rdi
    1073:	5f                   	pop    rdi
    1074:	47                   	rex.RXB
    1075:	43                   	rex.XB
    1076:	43 5f                	rex.XB pop r15
    1078:	49                   	rex.WB
    1079:	45                   	rex.RB
    107a:	43 5f                	rex.XB pop r15
    107c:	35 35 39 5f 43       	xor    eax,0x435f3935
    1081:	4f                   	rex.WRXB
    1082:	4d 50                	rex.WRB push r8
    1084:	4c                   	rex.WR
    1085:	45 58                	rex.RB pop r8
    1087:	20 32                	and    BYTE PTR [rdx],dh
    1089:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    108c:	46                   	rex.RX
    108d:	4c 54                	rex.WR push rsp
    108f:	5f                   	pop    rdi
    1090:	48                   	rex.W
    1091:	41 53                	push   r11
    1093:	5f                   	pop    rdi
    1094:	51                   	push   rcx
    1095:	55                   	push   rbp
    1096:	49                   	rex.WB
    1097:	45 54                	rex.RB push r12
    1099:	5f                   	pop    rdi
    109a:	4e                   	rex.WRX
    109b:	41                   	rex.B
    109c:	4e 5f                	rex.WRX pop rdi
    109e:	5f                   	pop    rdi
    109f:	20 31                	and    BYTE PTR [rcx],dh
    10a1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10a4:	53                   	push   rbx
    10a5:	54                   	push   rsp
    10a6:	44                   	rex.R
    10a7:	43 5f                	rex.XB pop r15
    10a9:	49                   	rex.WB
    10aa:	45                   	rex.RB
    10ab:	43 5f                	rex.XB pop r15
    10ad:	35 35 39 5f 43       	xor    eax,0x435f3935
    10b2:	4f                   	rex.WRXB
    10b3:	4d 50                	rex.WRB push r8
    10b5:	4c                   	rex.WR
    10b6:	45 58                	rex.RB pop r8
    10b8:	5f                   	pop    rdi
    10b9:	5f                   	pop    rdi
    10ba:	20 31                	and    BYTE PTR [rcx],dh
    10bc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10bf:	46                   	rex.RX
    10c0:	4c 54                	rex.WR push rsp
    10c2:	5f                   	pop    rdi
    10c3:	4d                   	rex.WRB
    10c4:	49                   	rex.WB
    10c5:	4e 5f                	rex.WRX pop rdi
    10c7:	45 58                	rex.RB pop r8
    10c9:	50                   	push   rax
    10ca:	5f                   	pop    rdi
    10cb:	5f                   	pop    rdi
    10cc:	20 28                	and    BYTE PTR [rax],ch
    10ce:	2d 31 32 35 29       	sub    eax,0x29353231
    10d3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    10d7:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    10de:	31 00                	xor    DWORD PTR [rax],eax
    10e0:	5f                   	pop    rdi
    10e1:	5f                   	pop    rdi
    10e2:	46                   	rex.RX
    10e3:	4c 54                	rex.WR push rsp
    10e5:	33 32                	xor    esi,DWORD PTR [rdx]
    10e7:	58                   	pop    rax
    10e8:	5f                   	pop    rdi
    10e9:	4d                   	rex.WRB
    10ea:	49                   	rex.WB
    10eb:	4e 5f                	rex.WRX pop rdi
    10ed:	5f                   	pop    rdi
    10ee:	20 32                	and    BYTE PTR [rdx],dh
    10f0:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    10f3:	35 30 37 33 38       	xor    eax,0x38333730
    10f8:	35 38 35 30 37       	xor    eax,0x37303538
    10fd:	32 30                	xor    dh,BYTE PTR [rax]
    10ff:	31 33                	xor    DWORD PTR [rbx],esi
    1101:	38 33                	cmp    BYTE PTR [rbx],dh
    1103:	30 39                	xor    BYTE PTR [rcx],bh
    1105:	30 32                	xor    BYTE PTR [rdx],dh
    1107:	33 32                	xor    esi,DWORD PTR [rdx]
    1109:	37                   	(bad)  
    110a:	31 37                	xor    DWORD PTR [rdi],esi
    110c:	33 33                	xor    esi,DWORD PTR [rbx]
    110e:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    1111:	34 30                	xor    al,0x30
    1113:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
    111a:	33 32                	xor    esi,DWORD PTR [rdx]
    111c:	78 00                	js     111e <.debug_str+0x111e>
    111e:	5f                   	pop    rdi
    111f:	5f                   	pop    rdi
    1120:	53                   	push   rbx
    1121:	49 5a                	rex.WB pop r10
    1123:	45 5f                	rex.RB pop r15
    1125:	4d                   	rex.WRB
    1126:	41 58                	pop    r8
    1128:	5f                   	pop    rdi
    1129:	5f                   	pop    rdi
    112a:	20 30                	and    BYTE PTR [rax],dh
    112c:	78 66                	js     1194 <.debug_str+0x1194>
    112e:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1135:	66 66 66 66 66 66 66 
    113c:	66 55                	push   bp
    113e:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1142:	55                   	push   rbp
    1143:	49                   	rex.WB
    1144:	4e 54                	rex.WRX push rsp
    1146:	5f                   	pop    rdi
    1147:	4c                   	rex.WR
    1148:	45                   	rex.RB
    1149:	41 53                	push   r11
    114b:	54                   	push   rsp
    114c:	36 34 5f             	ss xor al,0x5f
    114f:	4d                   	rex.WRB
    1150:	41 58                	pop    r8
    1152:	5f                   	pop    rdi
    1153:	5f                   	pop    rdi
    1154:	20 30                	and    BYTE PTR [rax],dh
    1156:	78 66                	js     11be <.debug_str+0x11be>
    1158:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    115f:	66 66 66 66 66 66 66 
    1166:	66 55                	push   bp
    1168:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    116c:	49                   	rex.WB
    116d:	4e 54                	rex.WRX push rsp
    116f:	5f                   	pop    rdi
    1170:	46                   	rex.RX
    1171:	41 53                	push   r11
    1173:	54                   	push   rsp
    1174:	36 34 5f             	ss xor al,0x5f
    1177:	4d                   	rex.WRB
    1178:	41 58                	pop    r8
    117a:	5f                   	pop    rdi
    117b:	5f                   	pop    rdi
    117c:	20 30                	and    BYTE PTR [rax],dh
    117e:	78 37                	js     11b7 <.debug_str+0x11b7>
    1180:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1187:	66 66 66 66 66 66 66 
    118e:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1193:	53                   	push   rbx
    1194:	53                   	push   rbx
    1195:	45 5f                	rex.RB pop r15
    1197:	5f                   	pop    rdi
    1198:	20 31                	and    BYTE PTR [rcx],dh
    119a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    119d:	4f 52                	rex.WRXB push r10
    119f:	44                   	rex.R
    11a0:	45 52                	rex.RB push r10
    11a2:	5f                   	pop    rdi
    11a3:	42                   	rex.X
    11a4:	49                   	rex.WB
    11a5:	47 5f                	rex.RXB pop r15
    11a7:	45                   	rex.RB
    11a8:	4e                   	rex.WRX
    11a9:	44                   	rex.R
    11aa:	49                   	rex.WB
    11ab:	41                   	rex.B
    11ac:	4e 5f                	rex.WRX pop rdi
    11ae:	5f                   	pop    rdi
    11af:	20 34 33             	and    BYTE PTR [rbx+rsi*1],dh
    11b2:	32 31                	xor    dh,BYTE PTR [rcx]
    11b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    11b7:	49                   	rex.WB
    11b8:	4e 54                	rex.WRX push rsp
    11ba:	50                   	push   rax
    11bb:	54                   	push   rsp
    11bc:	52                   	push   rdx
    11bd:	5f                   	pop    rdi
    11be:	54                   	push   rsp
    11bf:	59                   	pop    rcx
    11c0:	50                   	push   rax
    11c1:	45 5f                	rex.RB pop r15
    11c3:	5f                   	pop    rdi
    11c4:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    11c8:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    11cc:	74 00                	je     11ce <.debug_str+0x11ce>
    11ce:	5f                   	pop    rdi
    11cf:	5f                   	pop    rdi
    11d0:	4c                   	rex.WR
    11d1:	4f                   	rex.WRXB
    11d2:	4e                   	rex.WRX
    11d3:	47 5f                	rex.RXB pop r15
    11d5:	4d                   	rex.WRB
    11d6:	41 58                	pop    r8
    11d8:	5f                   	pop    rdi
    11d9:	5f                   	pop    rdi
    11da:	20 30                	and    BYTE PTR [rax],dh
    11dc:	78 37                	js     1215 <.debug_str+0x1215>
    11de:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    11e5:	66 66 66 66 66 66 66 
    11ec:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    11f1:	49                   	rex.WB
    11f2:	4e 54                	rex.WRX push rsp
    11f4:	5f                   	pop    rdi
    11f5:	46                   	rex.RX
    11f6:	41 53                	push   r11
    11f8:	54                   	push   rsp
    11f9:	33 32                	xor    esi,DWORD PTR [rdx]
    11fb:	5f                   	pop    rdi
    11fc:	57                   	push   rdi
    11fd:	49                   	rex.WB
    11fe:	44 54                	rex.R push rsp
    1200:	48 5f                	rex.W pop rdi
    1202:	5f                   	pop    rdi
    1203:	20 36                	and    BYTE PTR [rsi],dh
    1205:	34 00                	xor    al,0x0
    1207:	5f                   	pop    rdi
    1208:	5f                   	pop    rdi
    1209:	46                   	rex.RX
    120a:	4c 54                	rex.WR push rsp
    120c:	36 34 58             	ss xor al,0x58
    120f:	5f                   	pop    rdi
    1210:	44                   	rex.R
    1211:	45                   	rex.RB
    1212:	4e                   	rex.WRX
    1213:	4f 52                	rex.WRXB push r10
    1215:	4d 5f                	rex.WRB pop r15
    1217:	4d                   	rex.WRB
    1218:	49                   	rex.WB
    1219:	4e 5f                	rex.WRX pop rdi
    121b:	5f                   	pop    rdi
    121c:	20 33                	and    BYTE PTR [rbx],dh
    121e:	2e 36 34 35          	cs ss xor al,0x35
    1222:	31 39                	xor    DWORD PTR [rcx],edi
    1224:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 3838435d <main+0x38384318>
    122a:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    122d:	34 36                	xor    al,0x36
    122f:	30 32                	xor    BYTE PTR [rdx],dh
    1231:	35 32 38 34 30       	xor    eax,0x30343832
    1236:	35 39 33 33 36       	xor    eax,0x36333339
    123b:	31 39                	xor    DWORD PTR [rcx],edi
    123d:	34 31                	xor    al,0x31
    123f:	39 38                	cmp    DWORD PTR [rax],edi
    1241:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    1244:	34 39                	xor    al,0x39
    1246:	35 31 46 36 34       	xor    eax,0x34364631
    124b:	78 00                	js     124d <.debug_str+0x124d>
    124d:	5f                   	pop    rdi
    124e:	5f                   	pop    rdi
    124f:	46                   	rex.RX
    1250:	4c 54                	rex.WR push rsp
    1252:	33 32                	xor    esi,DWORD PTR [rdx]
    1254:	5f                   	pop    rdi
    1255:	4d                   	rex.WRB
    1256:	41 58                	pop    r8
    1258:	5f                   	pop    rdi
    1259:	31 30                	xor    DWORD PTR [rax],esi
    125b:	5f                   	pop    rdi
    125c:	45 58                	rex.RB pop r8
    125e:	50                   	push   rax
    125f:	5f                   	pop    rdi
    1260:	5f                   	pop    rdi
    1261:	20 33                	and    BYTE PTR [rbx],dh
    1263:	38 00                	cmp    BYTE PTR [rax],al
    1265:	5f                   	pop    rdi
    1266:	5f                   	pop    rdi
    1267:	4c                   	rex.WR
    1268:	44                   	rex.R
    1269:	42                   	rex.X
    126a:	4c 5f                	rex.WR pop rdi
    126c:	4d                   	rex.WRB
    126d:	41 58                	pop    r8
    126f:	5f                   	pop    rdi
    1270:	5f                   	pop    rdi
    1271:	20 31                	and    BYTE PTR [rcx],dh
    1273:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    1276:	39 37                	cmp    DWORD PTR [rdi],esi
    1278:	33 31                	xor    esi,DWORD PTR [rcx]
    127a:	34 39                	xor    al,0x39
    127c:	35 33 35 37 32       	xor    eax,0x32373533
    1281:	33 31                	xor    esi,DWORD PTR [rcx]
    1283:	37                   	(bad)  
    1284:	36 35 30 32 31 32    	ss xor eax,0x32313230
    128a:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    128d:	35 33 30 33 30       	xor    eax,0x30333033
    1292:	39 37                	cmp    DWORD PTR [rdi],esi
    1294:	30 32                	xor    BYTE PTR [rdx],dh
    1296:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    1299:	34 39                	xor    al,0x39
    129b:	33 32                	xor    esi,DWORD PTR [rdx]
    129d:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    12a1:	53                   	push   rbx
    12a2:	49 5a                	rex.WB pop r10
    12a4:	45                   	rex.RB
    12a5:	4f                   	rex.WRXB
    12a6:	46 5f                	rex.RX pop rdi
    12a8:	53                   	push   rbx
    12a9:	48                   	rex.W
    12aa:	4f 52                	rex.WRXB push r10
    12ac:	54                   	push   rsp
    12ad:	5f                   	pop    rdi
    12ae:	5f                   	pop    rdi
    12af:	20 32                	and    BYTE PTR [rdx],dh
    12b1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    12b4:	46                   	rex.RX
    12b5:	4c 54                	rex.WR push rsp
    12b7:	5f                   	pop    rdi
    12b8:	4d                   	rex.WRB
    12b9:	49                   	rex.WB
    12ba:	4e 5f                	rex.WRX pop rdi
    12bc:	5f                   	pop    rdi
    12bd:	20 31                	and    BYTE PTR [rcx],dh
    12bf:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    12c2:	35 34 39 34 33       	xor    eax,0x33343934
    12c7:	35 30 38 32 32       	xor    eax,0x32323830
    12cc:	32 38                	xor    bh,BYTE PTR [rax]
    12ce:	37                   	(bad)  
    12cf:	35 30 37 39 36       	xor    eax,0x36393730
    12d4:	38 37                	cmp    BYTE PTR [rdi],dh
    12d6:	33 36                	xor    esi,DWORD PTR [rsi]
    12d8:	35 33 37 32 32       	xor    eax,0x32323733
    12dd:	32 32                	xor    dh,BYTE PTR [rdx]
    12df:	34 35                	xor    al,0x35
    12e1:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    12e5:	33 38                	xor    edi,DWORD PTR [rax]
    12e7:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    12eb:	47                   	rex.RXB
    12ec:	43                   	rex.XB
    12ed:	43 5f                	rex.XB pop r15
    12ef:	41 54                	push   r12
    12f1:	4f                   	rex.WRXB
    12f2:	4d                   	rex.WRB
    12f3:	49                   	rex.WB
    12f4:	43 5f                	rex.XB pop r15
    12f6:	49                   	rex.WB
    12f7:	4e 54                	rex.WRX push rsp
    12f9:	5f                   	pop    rdi
    12fa:	4c                   	rex.WR
    12fb:	4f                   	rex.WRXB
    12fc:	43                   	rex.XB
    12fd:	4b 5f                	rex.WXB pop r15
    12ff:	46 52                	rex.RX push rdx
    1301:	45                   	rex.RB
    1302:	45 20 32             	and    BYTE PTR [r10],r14b
    1305:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1308:	46                   	rex.RX
    1309:	4c 54                	rex.WR push rsp
    130b:	36 34 5f             	ss xor al,0x5f
    130e:	48                   	rex.W
    130f:	41 53                	push   r11
    1311:	5f                   	pop    rdi
    1312:	49                   	rex.WB
    1313:	4e                   	rex.WRX
    1314:	46                   	rex.RX
    1315:	49                   	rex.WB
    1316:	4e                   	rex.WRX
    1317:	49 54                	rex.WB push r12
    1319:	59                   	pop    rcx
    131a:	5f                   	pop    rdi
    131b:	5f                   	pop    rdi
    131c:	20 31                	and    BYTE PTR [rcx],dh
    131e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1321:	49                   	rex.WB
    1322:	4e 54                	rex.WRX push rsp
    1324:	31 36                	xor    DWORD PTR [rsi],esi
    1326:	5f                   	pop    rdi
    1327:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    132b:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    132e:	5f                   	pop    rdi
    132f:	5f                   	pop    rdi
    1330:	46                   	rex.RX
    1331:	4c 54                	rex.WR push rsp
    1333:	36 34 58             	ss xor al,0x58
    1336:	5f                   	pop    rdi
    1337:	48                   	rex.W
    1338:	41 53                	push   r11
    133a:	5f                   	pop    rdi
    133b:	49                   	rex.WB
    133c:	4e                   	rex.WRX
    133d:	46                   	rex.RX
    133e:	49                   	rex.WB
    133f:	4e                   	rex.WRX
    1340:	49 54                	rex.WB push r12
    1342:	59                   	pop    rcx
    1343:	5f                   	pop    rdi
    1344:	5f                   	pop    rdi
    1345:	20 31                	and    BYTE PTR [rcx],dh
    1347:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    134a:	44                   	rex.R
    134b:	45                   	rex.RB
    134c:	43                   	rex.XB
    134d:	49                   	rex.WB
    134e:	4d                   	rex.WRB
    134f:	41                   	rex.B
    1350:	4c 5f                	rex.WR pop rdi
    1352:	44                   	rex.R
    1353:	49                   	rex.WB
    1354:	47 5f                	rex.RXB pop r15
    1356:	5f                   	pop    rdi
    1357:	20 32                	and    BYTE PTR [rdx],dh
    1359:	31 00                	xor    DWORD PTR [rax],eax
    135b:	5f                   	pop    rdi
    135c:	5f                   	pop    rdi
    135d:	49                   	rex.WB
    135e:	4e 54                	rex.WRX push rsp
    1360:	5f                   	pop    rdi
    1361:	46                   	rex.RX
    1362:	41 53                	push   r11
    1364:	54                   	push   rsp
    1365:	36 34 5f             	ss xor al,0x5f
    1368:	54                   	push   rsp
    1369:	59                   	pop    rcx
    136a:	50                   	push   rax
    136b:	45 5f                	rex.RB pop r15
    136d:	5f                   	pop    rdi
    136e:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1372:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1376:	74 00                	je     1378 <.debug_str+0x1378>
    1378:	5f                   	pop    rdi
    1379:	5f                   	pop    rdi
    137a:	44                   	rex.R
    137b:	45                   	rex.RB
    137c:	43                   	rex.XB
    137d:	36 34 5f             	ss xor al,0x5f
    1380:	4d                   	rex.WRB
    1381:	41 58                	pop    r8
    1383:	5f                   	pop    rdi
    1384:	5f                   	pop    rdi
    1385:	20 39                	and    BYTE PTR [rcx],bh
    1387:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    138a:	39 39                	cmp    DWORD PTR [rcx],edi
    138c:	39 39                	cmp    DWORD PTR [rcx],edi
    138e:	39 39                	cmp    DWORD PTR [rcx],edi
    1390:	39 39                	cmp    DWORD PTR [rcx],edi
    1392:	39 39                	cmp    DWORD PTR [rcx],edi
    1394:	39 39                	cmp    DWORD PTR [rcx],edi
    1396:	39 45 33             	cmp    DWORD PTR [rbp+0x33],eax
    1399:	38 34 44             	cmp    BYTE PTR [rsp+rax*2],dh
    139c:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    13a0:	44                   	rex.R
    13a1:	45                   	rex.RB
    13a2:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    13a5:	5f                   	pop    rdi
    13a6:	53                   	push   rbx
    13a7:	55                   	push   rbp
    13a8:	42                   	rex.X
    13a9:	4e                   	rex.WRX
    13aa:	4f 52                	rex.WRXB push r10
    13ac:	4d                   	rex.WRB
    13ad:	41                   	rex.B
    13ae:	4c 5f                	rex.WR pop rdi
    13b0:	4d                   	rex.WRB
    13b1:	49                   	rex.WB
    13b2:	4e 5f                	rex.WRX pop rdi
    13b4:	5f                   	pop    rdi
    13b5:	20 30                	and    BYTE PTR [rax],dh
    13b7:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    13ba:	30 30                	xor    BYTE PTR [rax],dh
    13bc:	30 31                	xor    BYTE PTR [rcx],dh
    13be:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    13c4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    13c7:	46                   	rex.RX
    13c8:	4c 54                	rex.WR push rsp
    13ca:	31 32                	xor    DWORD PTR [rdx],esi
    13cc:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    13cf:	49                   	rex.WB
    13d0:	4e 5f                	rex.WRX pop rdi
    13d2:	31 30                	xor    DWORD PTR [rax],esi
    13d4:	5f                   	pop    rdi
    13d5:	45 58                	rex.RB pop r8
    13d7:	50                   	push   rax
    13d8:	5f                   	pop    rdi
    13d9:	5f                   	pop    rdi
    13da:	20 28                	and    BYTE PTR [rax],ch
    13dc:	2d 34 39 33 31       	sub    eax,0x31333934
    13e1:	29 00                	sub    DWORD PTR [rax],eax
    13e3:	5f                   	pop    rdi
    13e4:	5f                   	pop    rdi
    13e5:	49                   	rex.WB
    13e6:	4e 54                	rex.WRX push rsp
    13e8:	5f                   	pop    rdi
    13e9:	4d                   	rex.WRB
    13ea:	41 58                	pop    r8
    13ec:	5f                   	pop    rdi
    13ed:	5f                   	pop    rdi
    13ee:	20 30                	and    BYTE PTR [rax],dh
    13f0:	78 37                	js     1429 <.debug_str+0x1429>
    13f2:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    13f9:	00 5f 5f 
    13fc:	46                   	rex.RX
    13fd:	4c 54                	rex.WR push rsp
    13ff:	31 32                	xor    DWORD PTR [rdx],esi
    1401:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    1404:	41 53                	push   r11
    1406:	5f                   	pop    rdi
    1407:	44                   	rex.R
    1408:	45                   	rex.RB
    1409:	4e                   	rex.WRX
    140a:	4f 52                	rex.WRXB push r10
    140c:	4d 5f                	rex.WRB pop r15
    140e:	5f                   	pop    rdi
    140f:	20 31                	and    BYTE PTR [rcx],dh
    1411:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1414:	47                   	rex.RXB
    1415:	43                   	rex.XB
    1416:	43 5f                	rex.XB pop r15
    1418:	41 54                	push   r12
    141a:	4f                   	rex.WRXB
    141b:	4d                   	rex.WRB
    141c:	49                   	rex.WB
    141d:	43 5f                	rex.XB pop r15
    141f:	4c                   	rex.WR
    1420:	4c                   	rex.WR
    1421:	4f                   	rex.WRXB
    1422:	4e                   	rex.WRX
    1423:	47 5f                	rex.RXB pop r15
    1425:	4c                   	rex.WR
    1426:	4f                   	rex.WRXB
    1427:	43                   	rex.XB
    1428:	4b 5f                	rex.WXB pop r15
    142a:	46 52                	rex.RX push rdx
    142c:	45                   	rex.RB
    142d:	45 20 32             	and    BYTE PTR [r10],r14b
    1430:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1433:	46                   	rex.RX
    1434:	4c 54                	rex.WR push rsp
    1436:	31 32                	xor    DWORD PTR [rdx],esi
    1438:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    143b:	49                   	rex.WB
    143c:	4e 5f                	rex.WRX pop rdi
    143e:	5f                   	pop    rdi
    143f:	20 33                	and    BYTE PTR [rbx],dh
    1441:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    1444:	32 31                	xor    dh,BYTE PTR [rcx]
    1446:	30 33                	xor    BYTE PTR [rbx],dh
    1448:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    144b:	31 31                	xor    DWORD PTR [rcx],esi
    144d:	32 30                	xor    dh,BYTE PTR [rax]
    144f:	39 33                	cmp    DWORD PTR [rbx],esi
    1451:	35 30 36 32 36       	xor    eax,0x36323630
    1456:	32 36                	xor    dh,BYTE PTR [rsi]
    1458:	37                   	(bad)  
    1459:	37                   	(bad)  
    145a:	38 31                	cmp    BYTE PTR [rcx],dh
    145c:	37                   	(bad)  
    145d:	33 32                	xor    esi,DWORD PTR [rdx]
    145f:	31 37                	xor    DWORD PTR [rdi],esi
    1461:	35 32 36 30 65       	xor    eax,0x65303632
    1466:	2d 34 39 33 32       	sub    eax,0x32333934
    146b:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    146e:	38 00                	cmp    BYTE PTR [rax],al
    1470:	5f                   	pop    rdi
    1471:	5f                   	pop    rdi
    1472:	49                   	rex.WB
    1473:	4e 54                	rex.WRX push rsp
    1475:	5f                   	pop    rdi
    1476:	4c                   	rex.WR
    1477:	45                   	rex.RB
    1478:	41 53                	push   r11
    147a:	54                   	push   rsp
    147b:	36 34 5f             	ss xor al,0x5f
    147e:	4d                   	rex.WRB
    147f:	41 58                	pop    r8
    1481:	5f                   	pop    rdi
    1482:	5f                   	pop    rdi
    1483:	20 30                	and    BYTE PTR [rax],dh
    1485:	78 37                	js     14be <.debug_str+0x14be>
    1487:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    148e:	66 66 66 66 66 66 66 
    1495:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    149a:	47                   	rex.RXB
    149b:	4e 55                	rex.WRX push rbp
    149d:	43 5f                	rex.XB pop r15
    149f:	50                   	push   rax
    14a0:	41 54                	push   r12
    14a2:	43                   	rex.XB
    14a3:	48                   	rex.W
    14a4:	4c                   	rex.WR
    14a5:	45 56                	rex.RB push r14
    14a7:	45                   	rex.RB
    14a8:	4c 5f                	rex.WR pop rdi
    14aa:	5f                   	pop    rdi
    14ab:	20 30                	and    BYTE PTR [rax],dh
    14ad:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    14b0:	41 54                	push   r12
    14b2:	4f                   	rex.WRXB
    14b3:	4d                   	rex.WRB
    14b4:	49                   	rex.WB
    14b5:	43 5f                	rex.XB pop r15
    14b7:	52                   	push   rdx
    14b8:	45                   	rex.RB
    14b9:	4c                   	rex.WR
    14ba:	45                   	rex.RB
    14bb:	41 53                	push   r11
    14bd:	45 20 33             	and    BYTE PTR [r11],r14b
    14c0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    14c3:	46                   	rex.RX
    14c4:	4c 54                	rex.WR push rsp
    14c6:	33 32                	xor    esi,DWORD PTR [rdx]
    14c8:	5f                   	pop    rdi
    14c9:	4d                   	rex.WRB
    14ca:	49                   	rex.WB
    14cb:	4e 5f                	rex.WRX pop rdi
    14cd:	31 30                	xor    DWORD PTR [rax],esi
    14cf:	5f                   	pop    rdi
    14d0:	45 58                	rex.RB pop r8
    14d2:	50                   	push   rax
    14d3:	5f                   	pop    rdi
    14d4:	5f                   	pop    rdi
    14d5:	20 28                	and    BYTE PTR [rax],ch
    14d7:	2d 33 37 29 00       	sub    eax,0x293733
    14dc:	5f                   	pop    rdi
    14dd:	5f                   	pop    rdi
    14de:	44                   	rex.R
    14df:	42                   	rex.X
    14e0:	4c 5f                	rex.WR pop rdi
    14e2:	44                   	rex.R
    14e3:	45                   	rex.RB
    14e4:	43                   	rex.XB
    14e5:	49                   	rex.WB
    14e6:	4d                   	rex.WRB
    14e7:	41                   	rex.B
    14e8:	4c 5f                	rex.WR pop rdi
    14ea:	44                   	rex.R
    14eb:	49                   	rex.WB
    14ec:	47 5f                	rex.RXB pop r15
    14ee:	5f                   	pop    rdi
    14ef:	20 31                	and    BYTE PTR [rcx],dh
    14f1:	37                   	(bad)  
    14f2:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
    14f5:	55                   	push   rbp
    14f6:	20 43 31             	and    BYTE PTR [rbx+0x31],al
    14f9:	31 20                	xor    DWORD PTR [rax],esp
    14fb:	37                   	(bad)  
    14fc:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
    14ff:	30 20                	xor    BYTE PTR [rax],ah
    1501:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
    1506:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
    150c:	72 69                	jb     1577 <.debug_str+0x1577>
    150e:	63 20                	movsxd esp,DWORD PTR [rax]
    1510:	2d 6d 61 72 63       	sub    eax,0x6372616d
    1515:	68 3d 78 38 36       	push   0x3638783d
    151a:	2d 36 34 20 2d       	sub    eax,0x2d203436
    151f:	67 67 64 62 33       	addr32 addr32 fs (bad) 
    1524:	20 2d 66 73 74 61    	and    BYTE PTR [rip+0x61747366],ch        # 61748890 <main+0x6174884b>
    152a:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
    152d:	70 72                	jo     15a1 <.debug_str+0x15a1>
    152f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1530:	74 65                	je     1597 <.debug_str+0x1597>
    1532:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    1536:	2d 73 74 72 6f       	sub    eax,0x6f727473
    153b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    153c:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
    1540:	46                   	rex.RX
    1541:	4c 54                	rex.WR push rsp
    1543:	5f                   	pop    rdi
    1544:	44                   	rex.R
    1545:	45                   	rex.RB
    1546:	43                   	rex.XB
    1547:	49                   	rex.WB
    1548:	4d                   	rex.WRB
    1549:	41                   	rex.B
    154a:	4c 5f                	rex.WR pop rdi
    154c:	44                   	rex.R
    154d:	49                   	rex.WB
    154e:	47 5f                	rex.RXB pop r15
    1550:	5f                   	pop    rdi
    1551:	20 39                	and    BYTE PTR [rcx],bh
    1553:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1556:	41 54                	push   r12
    1558:	4f                   	rex.WRXB
    1559:	4d                   	rex.WRB
    155a:	49                   	rex.WB
    155b:	43 5f                	rex.XB pop r15
    155d:	53                   	push   rbx
    155e:	45 51                	rex.RB push r9
    1560:	5f                   	pop    rdi
    1561:	43 53                	rex.XB push r11
    1563:	54                   	push   rsp
    1564:	20 35 00 5f 5f 44    	and    BYTE PTR [rip+0x445f5f00],dh        # 445f746a <main+0x445f7425>
    156a:	45                   	rex.RB
    156b:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    156e:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1571:	49                   	rex.WB
    1572:	4e 5f                	rex.WRX pop rdi
    1574:	5f                   	pop    rdi
    1575:	20 31                	and    BYTE PTR [rcx],dh
    1577:	45 2d 36 31 34 33    	rex.RB sub eax,0x33343136
    157d:	44                   	rex.R
    157e:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1582:	42                   	rex.X
    1583:	49                   	rex.WB
    1584:	47                   	rex.RXB
    1585:	47                   	rex.RXB
    1586:	45 53                	rex.RB push r11
    1588:	54                   	push   rsp
    1589:	5f                   	pop    rdi
    158a:	41                   	rex.B
    158b:	4c                   	rex.WR
    158c:	49                   	rex.WB
    158d:	47                   	rex.RXB
    158e:	4e                   	rex.WRX
    158f:	4d                   	rex.WRB
    1590:	45                   	rex.RB
    1591:	4e 54                	rex.WRX push rsp
    1593:	5f                   	pop    rdi
    1594:	5f                   	pop    rdi
    1595:	20 31                	and    BYTE PTR [rcx],dh
    1597:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    159b:	53                   	push   rbx
    159c:	49 5a                	rex.WB pop r10
    159e:	45                   	rex.RB
    159f:	4f                   	rex.WRXB
    15a0:	46 5f                	rex.RX pop rdi
    15a2:	49                   	rex.WB
    15a3:	4e 54                	rex.WRX push rsp
    15a5:	5f                   	pop    rdi
    15a6:	5f                   	pop    rdi
    15a7:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    15aa:	5f                   	pop    rdi
    15ab:	5f                   	pop    rdi
    15ac:	49                   	rex.WB
    15ad:	4e 54                	rex.WRX push rsp
    15af:	5f                   	pop    rdi
    15b0:	46                   	rex.RX
    15b1:	41 53                	push   r11
    15b3:	54                   	push   rsp
    15b4:	33 32                	xor    esi,DWORD PTR [rdx]
    15b6:	5f                   	pop    rdi
    15b7:	54                   	push   rsp
    15b8:	59                   	pop    rcx
    15b9:	50                   	push   rax
    15ba:	45 5f                	rex.RB pop r15
    15bc:	5f                   	pop    rdi
    15bd:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    15c1:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    15c5:	74 00                	je     15c7 <.debug_str+0x15c7>
    15c7:	5f                   	pop    rdi
    15c8:	5f                   	pop    rdi
    15c9:	4c                   	rex.WR
    15ca:	44                   	rex.R
    15cb:	42                   	rex.X
    15cc:	4c 5f                	rex.WR pop rdi
    15ce:	44                   	rex.R
    15cf:	45                   	rex.RB
    15d0:	43                   	rex.XB
    15d1:	49                   	rex.WB
    15d2:	4d                   	rex.WRB
    15d3:	41                   	rex.B
    15d4:	4c 5f                	rex.WR pop rdi
    15d6:	44                   	rex.R
    15d7:	49                   	rex.WB
    15d8:	47 5f                	rex.RXB pop r15
    15da:	5f                   	pop    rdi
    15db:	20 32                	and    BYTE PTR [rdx],dh
    15dd:	31 00                	xor    DWORD PTR [rax],eax
    15df:	5f                   	pop    rdi
    15e0:	5f                   	pop    rdi
    15e1:	44                   	rex.R
    15e2:	45                   	rex.RB
    15e3:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    15e6:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    15e9:	41 58                	pop    r8
    15eb:	5f                   	pop    rdi
    15ec:	45 58                	rex.RB pop r8
    15ee:	50                   	push   rax
    15ef:	5f                   	pop    rdi
    15f0:	5f                   	pop    rdi
    15f1:	20 36                	and    BYTE PTR [rsi],dh
    15f3:	31 34 35 00 5f 5f 49 	xor    DWORD PTR [rsi*1+0x495f5f00],esi
    15fa:	4e 54                	rex.WRX push rsp
    15fc:	31 36                	xor    DWORD PTR [rsi],esi
    15fe:	5f                   	pop    rdi
    15ff:	4d                   	rex.WRB
    1600:	41 58                	pop    r8
    1602:	5f                   	pop    rdi
    1603:	5f                   	pop    rdi
    1604:	20 30                	and    BYTE PTR [rax],dh
    1606:	78 37                	js     163f <.debug_str+0x163f>
    1608:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    160e:	47                   	rex.RXB
    160f:	43                   	rex.XB
    1610:	43 5f                	rex.XB pop r15
    1612:	48                   	rex.W
    1613:	41 56                	push   r14
    1615:	45 5f                	rex.RB pop r15
    1617:	53                   	push   rbx
    1618:	59                   	pop    rcx
    1619:	4e                   	rex.WRX
    161a:	43 5f                	rex.XB pop r15
    161c:	43                   	rex.XB
    161d:	4f                   	rex.WRXB
    161e:	4d 50                	rex.WRB push r8
    1620:	41 52                	push   r10
    1622:	45 5f                	rex.RB pop r15
    1624:	41                   	rex.B
    1625:	4e                   	rex.WRX
    1626:	44 5f                	rex.R pop rdi
    1628:	53                   	push   rbx
    1629:	57                   	push   rdi
    162a:	41 50                	push   r8
    162c:	5f                   	pop    rdi
    162d:	34 20                	xor    al,0x20
    162f:	31 00                	xor    DWORD PTR [rax],eax
    1631:	5f                   	pop    rdi
    1632:	5f                   	pop    rdi
    1633:	47                   	rex.RXB
    1634:	43                   	rex.XB
    1635:	43 5f                	rex.XB pop r15
    1637:	41 53                	push   r11
    1639:	4d 5f                	rex.WRB pop r15
    163b:	46                   	rex.RX
    163c:	4c                   	rex.WR
    163d:	41                   	rex.B
    163e:	47 5f                	rex.RXB pop r15
    1640:	4f 55                	rex.WRXB push r13
    1642:	54                   	push   rsp
    1643:	50                   	push   rax
    1644:	55                   	push   rbp
    1645:	54                   	push   rsp
    1646:	53                   	push   rbx
    1647:	5f                   	pop    rdi
    1648:	5f                   	pop    rdi
    1649:	20 31                	and    BYTE PTR [rcx],dh
    164b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    164e:	46                   	rex.RX
    164f:	4c 54                	rex.WR push rsp
    1651:	31 32                	xor    DWORD PTR [rdx],esi
    1653:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1656:	41 58                	pop    r8
    1658:	5f                   	pop    rdi
    1659:	45 58                	rex.RB pop r8
    165b:	50                   	push   rax
    165c:	5f                   	pop    rdi
    165d:	5f                   	pop    rdi
    165e:	20 31                	and    BYTE PTR [rcx],dh
    1660:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1663:	34 00                	xor    al,0x0
    1665:	5f                   	pop    rdi
    1666:	5f                   	pop    rdi
    1667:	46                   	rex.RX
    1668:	4c 54                	rex.WR push rsp
    166a:	31 32                	xor    DWORD PTR [rdx],esi
    166c:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    166f:	41 58                	pop    r8
    1671:	5f                   	pop    rdi
    1672:	5f                   	pop    rdi
    1673:	20 31                	and    BYTE PTR [rcx],dh
    1675:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    1678:	39 37                	cmp    DWORD PTR [rdi],esi
    167a:	33 31                	xor    esi,DWORD PTR [rcx]
    167c:	34 39                	xor    al,0x39
    167e:	35 33 35 37 32       	xor    eax,0x32373533
    1683:	33 31                	xor    esi,DWORD PTR [rcx]
    1685:	37                   	(bad)  
    1686:	36 35 30 38 35 37    	ss xor eax,0x37353830
    168c:	35 39 33 32 36       	xor    eax,0x36323339
    1691:	36 32 38             	xor    bh,BYTE PTR ss:[rax]
    1694:	30 30                	xor    BYTE PTR [rax],dh
    1696:	37                   	(bad)  
    1697:	30 32                	xor    BYTE PTR [rdx],dh
    1699:	65 2b 34 39          	sub    esi,DWORD PTR gs:[rcx+rdi*1]
    169d:	33 32                	xor    esi,DWORD PTR [rdx]
    169f:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    16a2:	38 00                	cmp    BYTE PTR [rax],al
    16a4:	5f                   	pop    rdi
    16a5:	5f                   	pop    rdi
    16a6:	49                   	rex.WB
    16a7:	4e 54                	rex.WRX push rsp
    16a9:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    16ac:	59                   	pop    rcx
    16ad:	50                   	push   rax
    16ae:	45 5f                	rex.RB pop r15
    16b0:	5f                   	pop    rdi
    16b1:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    16b4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    16b6:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    16bb:	61                   	(bad)  
    16bc:	72 00                	jb     16be <.debug_str+0x16be>
    16be:	5f                   	pop    rdi
    16bf:	5f                   	pop    rdi
    16c0:	49                   	rex.WB
    16c1:	4e 54                	rex.WRX push rsp
    16c3:	5f                   	pop    rdi
    16c4:	57                   	push   rdi
    16c5:	49                   	rex.WB
    16c6:	44 54                	rex.R push rsp
    16c8:	48 5f                	rex.W pop rdi
    16ca:	5f                   	pop    rdi
    16cb:	20 33                	and    BYTE PTR [rbx],dh
    16cd:	32 00                	xor    al,BYTE PTR [rax]
    16cf:	5f                   	pop    rdi
    16d0:	5f                   	pop    rdi
    16d1:	55                   	push   rbp
    16d2:	49                   	rex.WB
    16d3:	4e 54                	rex.WRX push rsp
    16d5:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    16d8:	59                   	pop    rcx
    16d9:	50                   	push   rax
    16da:	45 5f                	rex.RB pop r15
    16dc:	5f                   	pop    rdi
    16dd:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    16e0:	73 69                	jae    174b <.debug_str+0x174b>
    16e2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    16e4:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    16e9:	61                   	(bad)  
    16ea:	72 00                	jb     16ec <.debug_str+0x16ec>
    16ec:	5f                   	pop    rdi
    16ed:	5f                   	pop    rdi
    16ee:	49                   	rex.WB
    16ef:	4e 54                	rex.WRX push rsp
    16f1:	4d                   	rex.WRB
    16f2:	41 58                	pop    r8
    16f4:	5f                   	pop    rdi
    16f5:	57                   	push   rdi
    16f6:	49                   	rex.WB
    16f7:	44 54                	rex.R push rsp
    16f9:	48 5f                	rex.W pop rdi
    16fb:	5f                   	pop    rdi
    16fc:	20 36                	and    BYTE PTR [rsi],dh
    16fe:	34 00                	xor    al,0x0
    1700:	5f                   	pop    rdi
    1701:	5f                   	pop    rdi
    1702:	55                   	push   rbp
    1703:	49                   	rex.WB
    1704:	4e 54                	rex.WRX push rsp
    1706:	4d                   	rex.WRB
    1707:	41 58                	pop    r8
    1709:	5f                   	pop    rdi
    170a:	54                   	push   rsp
    170b:	59                   	pop    rcx
    170c:	50                   	push   rax
    170d:	45 5f                	rex.RB pop r15
    170f:	5f                   	pop    rdi
    1710:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1714:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1718:	73 69                	jae    1783 <.debug_str+0x1783>
    171a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    171c:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1721:	74 00                	je     1723 <.debug_str+0x1723>
    1723:	75 6e                	jne    1793 <.debug_str+0x1793>
    1725:	69 78 20 31 00 5f 5f 	imul   edi,DWORD PTR [rax+0x20],0x5f5f0031
    172c:	49                   	rex.WB
    172d:	4e 54                	rex.WRX push rsp
    172f:	31 36                	xor    DWORD PTR [rsi],esi
    1731:	5f                   	pop    rdi
    1732:	54                   	push   rsp
    1733:	59                   	pop    rcx
    1734:	50                   	push   rax
    1735:	45 5f                	rex.RB pop r15
    1737:	5f                   	pop    rdi
    1738:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    173b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    173c:	72 74                	jb     17b2 <.debug_str+0x17b2>
    173e:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    1741:	74 00                	je     1743 <.debug_str+0x1743>
    1743:	5f                   	pop    rdi
    1744:	5f                   	pop    rdi
    1745:	47                   	rex.RXB
    1746:	43                   	rex.XB
    1747:	43 5f                	rex.XB pop r15
    1749:	41 54                	push   r12
    174b:	4f                   	rex.WRXB
    174c:	4d                   	rex.WRB
    174d:	49                   	rex.WB
    174e:	43 5f                	rex.XB pop r15
    1750:	53                   	push   rbx
    1751:	48                   	rex.W
    1752:	4f 52                	rex.WRXB push r10
    1754:	54                   	push   rsp
    1755:	5f                   	pop    rdi
    1756:	4c                   	rex.WR
    1757:	4f                   	rex.WRXB
    1758:	43                   	rex.XB
    1759:	4b 5f                	rex.WXB pop r15
    175b:	46 52                	rex.RX push rdx
    175d:	45                   	rex.RB
    175e:	45 20 32             	and    BYTE PTR [r10],r14b
    1761:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1764:	44                   	rex.R
    1765:	45                   	rex.RB
    1766:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1769:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    176c:	41 58                	pop    r8
    176e:	5f                   	pop    rdi
    176f:	5f                   	pop    rdi
    1770:	20 39                	and    BYTE PTR [rcx],bh
    1772:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    1775:	39 39                	cmp    DWORD PTR [rcx],edi
    1777:	39 39                	cmp    DWORD PTR [rcx],edi
    1779:	39 39                	cmp    DWORD PTR [rcx],edi
    177b:	39 39                	cmp    DWORD PTR [rcx],edi
    177d:	39 39                	cmp    DWORD PTR [rcx],edi
    177f:	39 39                	cmp    DWORD PTR [rcx],edi
    1781:	39 39                	cmp    DWORD PTR [rcx],edi
    1783:	39 39                	cmp    DWORD PTR [rcx],edi
    1785:	39 39                	cmp    DWORD PTR [rcx],edi
    1787:	39 39                	cmp    DWORD PTR [rcx],edi
    1789:	39 39                	cmp    DWORD PTR [rcx],edi
    178b:	39 39                	cmp    DWORD PTR [rcx],edi
    178d:	39 39                	cmp    DWORD PTR [rcx],edi
    178f:	39 39                	cmp    DWORD PTR [rcx],edi
    1791:	39 39                	cmp    DWORD PTR [rcx],edi
    1793:	39 45 36             	cmp    DWORD PTR [rbp+0x36],eax
    1796:	31 34 34             	xor    DWORD PTR [rsp+rsi*1],esi
    1799:	44                   	rex.R
    179a:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    179e:	53                   	push   rbx
    179f:	53                   	push   rbx
    17a0:	50                   	push   rax
    17a1:	5f                   	pop    rdi
    17a2:	53                   	push   rbx
    17a3:	54                   	push   rsp
    17a4:	52                   	push   rdx
    17a5:	4f                   	rex.WRXB
    17a6:	4e                   	rex.WRX
    17a7:	47 5f                	rex.RXB pop r15
    17a9:	5f                   	pop    rdi
    17aa:	20 33                	and    BYTE PTR [rbx],dh
    17ac:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17af:	50                   	push   rax
    17b0:	49                   	rex.WB
    17b1:	45 5f                	rex.RB pop r15
    17b3:	5f                   	pop    rdi
    17b4:	20 32                	and    BYTE PTR [rdx],dh
    17b6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17b9:	55                   	push   rbp
    17ba:	49                   	rex.WB
    17bb:	4e 54                	rex.WRX push rsp
    17bd:	5f                   	pop    rdi
    17be:	4c                   	rex.WR
    17bf:	45                   	rex.RB
    17c0:	41 53                	push   r11
    17c2:	54                   	push   rsp
    17c3:	31 36                	xor    DWORD PTR [rsi],esi
    17c5:	5f                   	pop    rdi
    17c6:	54                   	push   rsp
    17c7:	59                   	pop    rcx
    17c8:	50                   	push   rax
    17c9:	45 5f                	rex.RB pop r15
    17cb:	5f                   	pop    rdi
    17cc:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    17cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17d0:	72 74                	jb     1846 <.debug_str+0x1846>
    17d2:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    17d5:	73 69                	jae    1840 <.debug_str+0x1840>
    17d7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    17d9:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    17de:	74 00                	je     17e0 <.debug_str+0x17e0>
    17e0:	5f                   	pop    rdi
    17e1:	5f                   	pop    rdi
    17e2:	49                   	rex.WB
    17e3:	4e 54                	rex.WRX push rsp
    17e5:	5f                   	pop    rdi
    17e6:	46                   	rex.RX
    17e7:	41 53                	push   r11
    17e9:	54                   	push   rsp
    17ea:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    17ed:	59                   	pop    rcx
    17ee:	50                   	push   rax
    17ef:	45 5f                	rex.RB pop r15
    17f1:	5f                   	pop    rdi
    17f2:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    17f5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    17f7:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    17fc:	61                   	(bad)  
    17fd:	72 00                	jb     17ff <.debug_str+0x17ff>
    17ff:	5f                   	pop    rdi
    1800:	5f                   	pop    rdi
    1801:	44                   	rex.R
    1802:	42                   	rex.X
    1803:	4c 5f                	rex.WR pop rdi
    1805:	4d                   	rex.WRB
    1806:	41 58                	pop    r8
    1808:	5f                   	pop    rdi
    1809:	45 58                	rex.RB pop r8
    180b:	50                   	push   rax
    180c:	5f                   	pop    rdi
    180d:	5f                   	pop    rdi
    180e:	20 31                	and    BYTE PTR [rcx],dh
    1810:	30 32                	xor    BYTE PTR [rdx],dh
    1812:	34 00                	xor    al,0x0
    1814:	5f                   	pop    rdi
    1815:	5f                   	pop    rdi
    1816:	46                   	rex.RX
    1817:	4c 54                	rex.WR push rsp
    1819:	33 32                	xor    esi,DWORD PTR [rdx]
    181b:	58                   	pop    rax
    181c:	5f                   	pop    rdi
    181d:	4d                   	rex.WRB
    181e:	41                   	rex.B
    181f:	4e 54                	rex.WRX push rsp
    1821:	5f                   	pop    rdi
    1822:	44                   	rex.R
    1823:	49                   	rex.WB
    1824:	47 5f                	rex.RXB pop r15
    1826:	5f                   	pop    rdi
    1827:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f1860 <main+0x5f5f181b>
    182d:	46                   	rex.RX
    182e:	4c 54                	rex.WR push rsp
    1830:	5f                   	pop    rdi
    1831:	45 56                	rex.RB push r14
    1833:	41                   	rex.B
    1834:	4c 5f                	rex.WR pop rdi
    1836:	4d                   	rex.WRB
    1837:	45 54                	rex.RB push r12
    1839:	48                   	rex.W
    183a:	4f                   	rex.WRXB
    183b:	44 5f                	rex.R pop rdi
    183d:	5f                   	pop    rdi
    183e:	20 30                	and    BYTE PTR [rax],dh
    1840:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1843:	49                   	rex.WB
    1844:	4e 54                	rex.WRX push rsp
    1846:	4d                   	rex.WRB
    1847:	41 58                	pop    r8
    1849:	5f                   	pop    rdi
    184a:	4d                   	rex.WRB
    184b:	41 58                	pop    r8
    184d:	5f                   	pop    rdi
    184e:	5f                   	pop    rdi
    184f:	20 30                	and    BYTE PTR [rax],dh
    1851:	78 37                	js     188a <.debug_str+0x188a>
    1853:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    185a:	66 66 66 66 66 66 66 
    1861:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1866:	41 54                	push   r12
    1868:	4f                   	rex.WRXB
    1869:	4d                   	rex.WRB
    186a:	49                   	rex.WB
    186b:	43 5f                	rex.XB pop r15
    186d:	41                   	rex.B
    186e:	43 51                	rex.XB push r9
    1870:	55                   	push   rbp
    1871:	49 52                	rex.WB push r10
    1873:	45 20 32             	and    BYTE PTR [r10],r14b
    1876:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1879:	55                   	push   rbp
    187a:	49                   	rex.WB
    187b:	4e 54                	rex.WRX push rsp
    187d:	5f                   	pop    rdi
    187e:	46                   	rex.RX
    187f:	41 53                	push   r11
    1881:	54                   	push   rsp
    1882:	33 32                	xor    esi,DWORD PTR [rdx]
    1884:	5f                   	pop    rdi
    1885:	54                   	push   rsp
    1886:	59                   	pop    rcx
    1887:	50                   	push   rax
    1888:	45 5f                	rex.RB pop r15
    188a:	5f                   	pop    rdi
    188b:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    188f:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1893:	73 69                	jae    18fe <.debug_str+0x18fe>
    1895:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1897:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    189c:	74 00                	je     189e <.debug_str+0x189e>
    189e:	5f                   	pop    rdi
    189f:	5f                   	pop    rdi
    18a0:	46                   	rex.RX
    18a1:	4c 54                	rex.WR push rsp
    18a3:	33 32                	xor    esi,DWORD PTR [rdx]
    18a5:	5f                   	pop    rdi
    18a6:	44                   	rex.R
    18a7:	45                   	rex.RB
    18a8:	43                   	rex.XB
    18a9:	49                   	rex.WB
    18aa:	4d                   	rex.WRB
    18ab:	41                   	rex.B
    18ac:	4c 5f                	rex.WR pop rdi
    18ae:	44                   	rex.R
    18af:	49                   	rex.WB
    18b0:	47 5f                	rex.RXB pop r15
    18b2:	5f                   	pop    rdi
    18b3:	20 39                	and    BYTE PTR [rcx],bh
    18b5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    18b8:	49                   	rex.WB
    18b9:	4e 54                	rex.WRX push rsp
    18bb:	5f                   	pop    rdi
    18bc:	4c                   	rex.WR
    18bd:	45                   	rex.RB
    18be:	41 53                	push   r11
    18c0:	54                   	push   rsp
    18c1:	33 32                	xor    esi,DWORD PTR [rdx]
    18c3:	5f                   	pop    rdi
    18c4:	4d                   	rex.WRB
    18c5:	41 58                	pop    r8
    18c7:	5f                   	pop    rdi
    18c8:	5f                   	pop    rdi
    18c9:	20 30                	and    BYTE PTR [rax],dh
    18cb:	78 37                	js     1904 <.debug_str+0x1904>
    18cd:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    18d4:	00 5f 5f 
    18d7:	47                   	rex.RXB
    18d8:	43                   	rex.XB
    18d9:	43 5f                	rex.XB pop r15
    18db:	41 54                	push   r12
    18dd:	4f                   	rex.WRXB
    18de:	4d                   	rex.WRB
    18df:	49                   	rex.WB
    18e0:	43 5f                	rex.XB pop r15
    18e2:	43                   	rex.XB
    18e3:	48                   	rex.W
    18e4:	41 52                	push   r10
    18e6:	5f                   	pop    rdi
    18e7:	4c                   	rex.WR
    18e8:	4f                   	rex.WRXB
    18e9:	43                   	rex.XB
    18ea:	4b 5f                	rex.WXB pop r15
    18ec:	46 52                	rex.RX push rdx
    18ee:	45                   	rex.RB
    18ef:	45 20 32             	and    BYTE PTR [r10],r14b
    18f2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    18f5:	44                   	rex.R
    18f6:	45                   	rex.RB
    18f7:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    18fa:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    18fd:	50                   	push   rax
    18fe:	53                   	push   rbx
    18ff:	49                   	rex.WB
    1900:	4c                   	rex.WR
    1901:	4f                   	rex.WRXB
    1902:	4e 5f                	rex.WRX pop rdi
    1904:	5f                   	pop    rdi
    1905:	20 31                	and    BYTE PTR [rcx],dh
    1907:	45 2d 33 33 44 4c    	rex.RB sub eax,0x4c443333
    190d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1910:	46                   	rex.RX
    1911:	4c 54                	rex.WR push rsp
    1913:	5f                   	pop    rdi
    1914:	4d                   	rex.WRB
    1915:	41 58                	pop    r8
    1917:	5f                   	pop    rdi
    1918:	5f                   	pop    rdi
    1919:	20 33                	and    BYTE PTR [rbx],dh
    191b:	2e 34 30             	cs xor al,0x30
    191e:	32 38                	xor    bh,BYTE PTR [rax]
    1920:	32 33                	xor    dh,BYTE PTR [rbx]
    1922:	34 36                	xor    al,0x36
    1924:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1927:	35 32 38 38 35       	xor    eax,0x35383832
    192c:	39 38                	cmp    DWORD PTR [rax],edi
    192e:	31 31                	xor    DWORD PTR [rcx],esi
    1930:	37                   	(bad)  
    1931:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    1934:	38 33                	cmp    BYTE PTR [rbx],dh
    1936:	34 38                	xor    al,0x38
    1938:	34 35                	xor    al,0x35
    193a:	31 36                	xor    DWORD PTR [rsi],esi
    193c:	39 32                	cmp    DWORD PTR [rdx],esi
    193e:	35 65 2b 33 38       	xor    eax,0x38332b65
    1943:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    1947:	53                   	push   rbx
    1948:	49 5a                	rex.WB pop r10
    194a:	45                   	rex.RB
    194b:	4f                   	rex.WRXB
    194c:	46 5f                	rex.RX pop rdi
    194e:	57                   	push   rdi
    194f:	43                   	rex.XB
    1950:	48                   	rex.W
    1951:	41 52                	push   r10
    1953:	5f                   	pop    rdi
    1954:	54                   	push   rsp
    1955:	5f                   	pop    rdi
    1956:	5f                   	pop    rdi
    1957:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    195a:	5f                   	pop    rdi
    195b:	5f                   	pop    rdi
    195c:	46                   	rex.RX
    195d:	4c 54                	rex.WR push rsp
    195f:	33 32                	xor    esi,DWORD PTR [rdx]
    1961:	58                   	pop    rax
    1962:	5f                   	pop    rdi
    1963:	44                   	rex.R
    1964:	45                   	rex.RB
    1965:	43                   	rex.XB
    1966:	49                   	rex.WB
    1967:	4d                   	rex.WRB
    1968:	41                   	rex.B
    1969:	4c 5f                	rex.WR pop rdi
    196b:	44                   	rex.R
    196c:	49                   	rex.WB
    196d:	47 5f                	rex.RXB pop r15
    196f:	5f                   	pop    rdi
    1970:	20 31                	and    BYTE PTR [rcx],dh
    1972:	37                   	(bad)  
    1973:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1976:	49                   	rex.WB
    1977:	4e 54                	rex.WRX push rsp
    1979:	5f                   	pop    rdi
    197a:	46                   	rex.RX
    197b:	41 53                	push   r11
    197d:	54                   	push   rsp
    197e:	31 36                	xor    DWORD PTR [rsi],esi
    1980:	5f                   	pop    rdi
    1981:	54                   	push   rsp
    1982:	59                   	pop    rcx
    1983:	50                   	push   rax
    1984:	45 5f                	rex.RB pop r15
    1986:	5f                   	pop    rdi
    1987:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    198b:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    198f:	74 00                	je     1991 <.debug_str+0x1991>
    1991:	5f                   	pop    rdi
    1992:	5f                   	pop    rdi
    1993:	44                   	rex.R
    1994:	45                   	rex.RB
    1995:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    1998:	5f                   	pop    rdi
    1999:	4d                   	rex.WRB
    199a:	49                   	rex.WB
    199b:	4e 5f                	rex.WRX pop rdi
    199d:	45 58                	rex.RB pop r8
    199f:	50                   	push   rax
    19a0:	5f                   	pop    rdi
    19a1:	5f                   	pop    rdi
    19a2:	20 28                	and    BYTE PTR [rax],ch
    19a4:	2d 39 34 29 00       	sub    eax,0x293439
    19a9:	5f                   	pop    rdi
    19aa:	5f                   	pop    rdi
    19ab:	49                   	rex.WB
    19ac:	4e 54                	rex.WRX push rsp
    19ae:	33 32                	xor    esi,DWORD PTR [rdx]
    19b0:	5f                   	pop    rdi
    19b1:	4d                   	rex.WRB
    19b2:	41 58                	pop    r8
    19b4:	5f                   	pop    rdi
    19b5:	5f                   	pop    rdi
    19b6:	20 30                	and    BYTE PTR [rax],dh
    19b8:	78 37                	js     19f1 <.debug_str+0x19f1>
    19ba:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    19c1:	00 5f 5f 
    19c4:	53                   	push   rbx
    19c5:	49 5a                	rex.WB pop r10
    19c7:	45                   	rex.RB
    19c8:	4f                   	rex.WRXB
    19c9:	46 5f                	rex.RX pop rdi
    19cb:	46                   	rex.RX
    19cc:	4c                   	rex.WR
    19cd:	4f                   	rex.WRXB
    19ce:	41 54                	push   r12
    19d0:	31 32                	xor    DWORD PTR [rdx],esi
    19d2:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
    19d5:	20 31                	and    BYTE PTR [rcx],dh
    19d7:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    19db:	46                   	rex.RX
    19dc:	4c 54                	rex.WR push rsp
    19de:	36 34 5f             	ss xor al,0x5f
    19e1:	4d                   	rex.WRB
    19e2:	49                   	rex.WB
    19e3:	4e 5f                	rex.WRX pop rdi
    19e5:	31 30                	xor    DWORD PTR [rax],esi
    19e7:	5f                   	pop    rdi
    19e8:	45 58                	rex.RB pop r8
    19ea:	50                   	push   rax
    19eb:	5f                   	pop    rdi
    19ec:	5f                   	pop    rdi
    19ed:	20 28                	and    BYTE PTR [rax],ch
    19ef:	2d 33 30 37 29       	sub    eax,0x29373033
    19f4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    19f7:	55                   	push   rbp
    19f8:	49                   	rex.WB
    19f9:	4e 54                	rex.WRX push rsp
    19fb:	5f                   	pop    rdi
    19fc:	46                   	rex.RX
    19fd:	41 53                	push   r11
    19ff:	54                   	push   rsp
    1a00:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    1a03:	59                   	pop    rcx
    1a04:	50                   	push   rax
    1a05:	45 5f                	rex.RB pop r15
    1a07:	5f                   	pop    rdi
    1a08:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1a0b:	73 69                	jae    1a76 <.debug_str+0x1a76>
    1a0d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1a0f:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    1a14:	61                   	(bad)  
    1a15:	72 00                	jb     1a17 <.debug_str+0x1a17>
    1a17:	5f                   	pop    rdi
    1a18:	5f                   	pop    rdi
    1a19:	53                   	push   rbx
    1a1a:	54                   	push   rsp
    1a1b:	44                   	rex.R
    1a1c:	43 5f                	rex.XB pop r15
    1a1e:	49                   	rex.WB
    1a1f:	45                   	rex.RB
    1a20:	43 5f                	rex.XB pop r15
    1a22:	35 35 39 5f 5f       	xor    eax,0x5f5f3935
    1a27:	20 31                	and    BYTE PTR [rcx],dh
    1a29:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a2c:	44                   	rex.R
    1a2d:	45                   	rex.RB
    1a2e:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1a31:	38 5f 53             	cmp    BYTE PTR [rdi+0x53],bl
    1a34:	55                   	push   rbp
    1a35:	42                   	rex.X
    1a36:	4e                   	rex.WRX
    1a37:	4f 52                	rex.WRXB push r10
    1a39:	4d                   	rex.WRB
    1a3a:	41                   	rex.B
    1a3b:	4c 5f                	rex.WR pop rdi
    1a3d:	4d                   	rex.WRB
    1a3e:	49                   	rex.WB
    1a3f:	4e 5f                	rex.WRX pop rdi
    1a41:	5f                   	pop    rdi
    1a42:	20 30                	and    BYTE PTR [rax],dh
    1a44:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    1a47:	30 30                	xor    BYTE PTR [rax],dh
    1a49:	30 30                	xor    BYTE PTR [rax],dh
    1a4b:	30 30                	xor    BYTE PTR [rax],dh
    1a4d:	30 30                	xor    BYTE PTR [rax],dh
    1a4f:	30 30                	xor    BYTE PTR [rax],dh
    1a51:	30 30                	xor    BYTE PTR [rax],dh
    1a53:	30 30                	xor    BYTE PTR [rax],dh
    1a55:	30 30                	xor    BYTE PTR [rax],dh
    1a57:	30 30                	xor    BYTE PTR [rax],dh
    1a59:	30 30                	xor    BYTE PTR [rax],dh
    1a5b:	30 30                	xor    BYTE PTR [rax],dh
    1a5d:	30 30                	xor    BYTE PTR [rax],dh
    1a5f:	30 30                	xor    BYTE PTR [rax],dh
    1a61:	30 30                	xor    BYTE PTR [rax],dh
    1a63:	30 30                	xor    BYTE PTR [rax],dh
    1a65:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
    1a68:	36 31 34 33          	xor    DWORD PTR ss:[rbx+rsi*1],esi
    1a6c:	44                   	rex.R
    1a6d:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1a71:	41 54                	push   r12
    1a73:	4f                   	rex.WRXB
    1a74:	4d                   	rex.WRB
    1a75:	49                   	rex.WB
    1a76:	43 5f                	rex.XB pop r15
    1a78:	48                   	rex.W
    1a79:	4c                   	rex.WR
    1a7a:	45 5f                	rex.RB pop r15
    1a7c:	41                   	rex.B
    1a7d:	43 51                	rex.XB push r9
    1a7f:	55                   	push   rbp
    1a80:	49 52                	rex.WB push r10
    1a82:	45 20 36             	and    BYTE PTR [r14],r14b
    1a85:	35 35 33 36 00       	xor    eax,0x363335
    1a8a:	5f                   	pop    rdi
    1a8b:	5f                   	pop    rdi
    1a8c:	41 54                	push   r12
    1a8e:	4f                   	rex.WRXB
    1a8f:	4d                   	rex.WRB
    1a90:	49                   	rex.WB
    1a91:	43 5f                	rex.XB pop r15
    1a93:	48                   	rex.W
    1a94:	4c                   	rex.WR
    1a95:	45 5f                	rex.RB pop r15
    1a97:	52                   	push   rdx
    1a98:	45                   	rex.RB
    1a99:	4c                   	rex.WR
    1a9a:	45                   	rex.RB
    1a9b:	41 53                	push   r11
    1a9d:	45 20 31             	and    BYTE PTR [r9],r14b
    1aa0:	33 31                	xor    esi,DWORD PTR [rcx]
    1aa2:	30 37                	xor    BYTE PTR [rdi],dh
    1aa4:	32 00                	xor    al,BYTE PTR [rax]
    1aa6:	5f                   	pop    rdi
    1aa7:	5f                   	pop    rdi
    1aa8:	49                   	rex.WB
    1aa9:	4e 54                	rex.WRX push rsp
    1aab:	5f                   	pop    rdi
    1aac:	46                   	rex.RX
    1aad:	41 53                	push   r11
    1aaf:	54                   	push   rsp
    1ab0:	31 36                	xor    DWORD PTR [rsi],esi
    1ab2:	5f                   	pop    rdi
    1ab3:	4d                   	rex.WRB
    1ab4:	41 58                	pop    r8
    1ab6:	5f                   	pop    rdi
    1ab7:	5f                   	pop    rdi
    1ab8:	20 30                	and    BYTE PTR [rax],dh
    1aba:	78 37                	js     1af3 <.debug_str+0x1af3>
    1abc:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1ac3:	66 66 66 66 66 66 66 
    1aca:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1acf:	49                   	rex.WB
    1ad0:	4e 54                	rex.WRX push rsp
    1ad2:	5f                   	pop    rdi
    1ad3:	4c                   	rex.WR
    1ad4:	45                   	rex.RB
    1ad5:	41 53                	push   r11
    1ad7:	54                   	push   rsp
    1ad8:	31 36                	xor    DWORD PTR [rsi],esi
    1ada:	5f                   	pop    rdi
    1adb:	4d                   	rex.WRB
    1adc:	41 58                	pop    r8
    1ade:	5f                   	pop    rdi
    1adf:	5f                   	pop    rdi
    1ae0:	20 30                	and    BYTE PTR [rax],dh
    1ae2:	78 37                	js     1b1b <.debug_str+0x1b1b>
    1ae4:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    1aea:	46                   	rex.RX
    1aeb:	4c 54                	rex.WR push rsp
    1aed:	36 34 58             	ss xor al,0x58
    1af0:	5f                   	pop    rdi
    1af1:	4d                   	rex.WRB
    1af2:	41 58                	pop    r8
    1af4:	5f                   	pop    rdi
    1af5:	45 58                	rex.RB pop r8
    1af7:	50                   	push   rax
    1af8:	5f                   	pop    rdi
    1af9:	5f                   	pop    rdi
    1afa:	20 31                	and    BYTE PTR [rcx],dh
    1afc:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1aff:	34 00                	xor    al,0x0
    1b01:	5f                   	pop    rdi
    1b02:	5f                   	pop    rdi
    1b03:	44                   	rex.R
    1b04:	45                   	rex.RB
    1b05:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1b08:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1b0b:	41                   	rex.B
    1b0c:	4e 54                	rex.WRX push rsp
    1b0e:	5f                   	pop    rdi
    1b0f:	44                   	rex.R
    1b10:	49                   	rex.WB
    1b11:	47 5f                	rex.RXB pop r15
    1b13:	5f                   	pop    rdi
    1b14:	20 33                	and    BYTE PTR [rbx],dh
    1b16:	34 00                	xor    al,0x0
    1b18:	5f                   	pop    rdi
    1b19:	5f                   	pop    rdi
    1b1a:	4c                   	rex.WR
    1b1b:	4f                   	rex.WRXB
    1b1c:	4e                   	rex.WRX
    1b1d:	47 5f                	rex.RXB pop r15
    1b1f:	57                   	push   rdi
    1b20:	49                   	rex.WB
    1b21:	44 54                	rex.R push rsp
    1b23:	48 5f                	rex.W pop rdi
    1b25:	5f                   	pop    rdi
    1b26:	20 36                	and    BYTE PTR [rsi],dh
    1b28:	34 00                	xor    al,0x0
    1b2a:	5f                   	pop    rdi
    1b2b:	5f                   	pop    rdi
    1b2c:	53                   	push   rbx
    1b2d:	49 5a                	rex.WB pop r10
    1b2f:	45 5f                	rex.RB pop r15
    1b31:	57                   	push   rdi
    1b32:	49                   	rex.WB
    1b33:	44 54                	rex.R push rsp
    1b35:	48 5f                	rex.W pop rdi
    1b37:	5f                   	pop    rdi
    1b38:	20 36                	and    BYTE PTR [rsi],dh
    1b3a:	34 00                	xor    al,0x0
    1b3c:	5f                   	pop    rdi
    1b3d:	5f                   	pop    rdi
    1b3e:	46                   	rex.RX
    1b3f:	4c 54                	rex.WR push rsp
    1b41:	31 32                	xor    DWORD PTR [rdx],esi
    1b43:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    1b46:	45                   	rex.RB
    1b47:	43                   	rex.XB
    1b48:	49                   	rex.WB
    1b49:	4d                   	rex.WRB
    1b4a:	41                   	rex.B
    1b4b:	4c 5f                	rex.WR pop rdi
    1b4d:	44                   	rex.R
    1b4e:	49                   	rex.WB
    1b4f:	47 5f                	rex.RXB pop r15
    1b51:	5f                   	pop    rdi
    1b52:	20 33                	and    BYTE PTR [rbx],dh
    1b54:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    1b58:	57                   	push   rdi
    1b59:	43                   	rex.XB
    1b5a:	48                   	rex.W
    1b5b:	41 52                	push   r10
    1b5d:	5f                   	pop    rdi
    1b5e:	4d                   	rex.WRB
    1b5f:	49                   	rex.WB
    1b60:	4e 5f                	rex.WRX pop rdi
    1b62:	5f                   	pop    rdi
    1b63:	20 28                	and    BYTE PTR [rax],ch
    1b65:	2d 5f 5f 57 43       	sub    eax,0x43575f5f
    1b6a:	48                   	rex.W
    1b6b:	41 52                	push   r10
    1b6d:	5f                   	pop    rdi
    1b6e:	4d                   	rex.WRB
    1b6f:	41 58                	pop    r8
    1b71:	5f                   	pop    rdi
    1b72:	5f                   	pop    rdi
    1b73:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 294c99 <main+0x294c54>
    1b79:	5f                   	pop    rdi
    1b7a:	5f                   	pop    rdi
    1b7b:	47                   	rex.RXB
    1b7c:	43                   	rex.XB
    1b7d:	43 5f                	rex.XB pop r15
    1b7f:	48                   	rex.W
    1b80:	41 56                	push   r14
    1b82:	45 5f                	rex.RB pop r15
    1b84:	53                   	push   rbx
    1b85:	59                   	pop    rcx
    1b86:	4e                   	rex.WRX
    1b87:	43 5f                	rex.XB pop r15
    1b89:	43                   	rex.XB
    1b8a:	4f                   	rex.WRXB
    1b8b:	4d 50                	rex.WRB push r8
    1b8d:	41 52                	push   r10
    1b8f:	45 5f                	rex.RB pop r15
    1b91:	41                   	rex.B
    1b92:	4e                   	rex.WRX
    1b93:	44 5f                	rex.R pop rdi
    1b95:	53                   	push   rbx
    1b96:	57                   	push   rdi
    1b97:	41 50                	push   r8
    1b99:	5f                   	pop    rdi
    1b9a:	32 20                	xor    ah,BYTE PTR [rax]
    1b9c:	31 00                	xor    DWORD PTR [rax],eax
    1b9e:	5f                   	pop    rdi
    1b9f:	5f                   	pop    rdi
    1ba0:	4c                   	rex.WR
    1ba1:	44                   	rex.R
    1ba2:	42                   	rex.X
    1ba3:	4c 5f                	rex.WR pop rdi
    1ba5:	4d                   	rex.WRB
    1ba6:	41 58                	pop    r8
    1ba8:	5f                   	pop    rdi
    1ba9:	45 58                	rex.RB pop r8
    1bab:	50                   	push   rax
    1bac:	5f                   	pop    rdi
    1bad:	5f                   	pop    rdi
    1bae:	20 31                	and    BYTE PTR [rcx],dh
    1bb0:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1bb3:	34 00                	xor    al,0x0
    1bb5:	5f                   	pop    rdi
    1bb6:	5f                   	pop    rdi
    1bb7:	46                   	rex.RX
    1bb8:	4c 54                	rex.WR push rsp
    1bba:	36 34 58             	ss xor al,0x58
    1bbd:	5f                   	pop    rdi
    1bbe:	44                   	rex.R
    1bbf:	49                   	rex.WB
    1bc0:	47 5f                	rex.RXB pop r15
    1bc2:	5f                   	pop    rdi
    1bc3:	20 31                	and    BYTE PTR [rcx],dh
    1bc5:	38 00                	cmp    BYTE PTR [rax],al
    1bc7:	5f                   	pop    rdi
    1bc8:	5f                   	pop    rdi
    1bc9:	46                   	rex.RX
    1bca:	4c 54                	rex.WR push rsp
    1bcc:	33 32                	xor    esi,DWORD PTR [rdx]
    1bce:	58                   	pop    rax
    1bcf:	5f                   	pop    rdi
    1bd0:	44                   	rex.R
    1bd1:	49                   	rex.WB
    1bd2:	47 5f                	rex.RXB pop r15
    1bd4:	5f                   	pop    rdi
    1bd5:	20 31                	and    BYTE PTR [rcx],dh
    1bd7:	35 00 5f 5f 6b       	xor    eax,0x6b5f5f00
    1bdc:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
    1bdf:	20 31                	and    BYTE PTR [rcx],dh
    1be1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1be4:	43                   	rex.XB
    1be5:	48                   	rex.W
    1be6:	41 52                	push   r10
    1be8:	33 32                	xor    esi,DWORD PTR [rdx]
    1bea:	5f                   	pop    rdi
    1beb:	54                   	push   rsp
    1bec:	59                   	pop    rcx
    1bed:	50                   	push   rax
    1bee:	45 5f                	rex.RB pop r15
    1bf0:	5f                   	pop    rdi
    1bf1:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1bf4:	73 69                	jae    1c5f <.debug_str+0x1c5f>
    1bf6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1bf8:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1bfd:	74 00                	je     1bff <.debug_str+0x1bff>
    1bff:	5f                   	pop    rdi
    1c00:	5f                   	pop    rdi
    1c01:	46                   	rex.RX
    1c02:	4c 54                	rex.WR push rsp
    1c04:	36 34 58             	ss xor al,0x58
    1c07:	5f                   	pop    rdi
    1c08:	4d                   	rex.WRB
    1c09:	49                   	rex.WB
    1c0a:	4e 5f                	rex.WRX pop rdi
    1c0c:	31 30                	xor    DWORD PTR [rax],esi
    1c0e:	5f                   	pop    rdi
    1c0f:	45 58                	rex.RB pop r8
    1c11:	50                   	push   rax
    1c12:	5f                   	pop    rdi
    1c13:	5f                   	pop    rdi
    1c14:	20 28                	and    BYTE PTR [rax],ch
    1c16:	2d 34 39 33 31       	sub    eax,0x31333934
    1c1b:	29 00                	sub    DWORD PTR [rax],eax
    1c1d:	5f                   	pop    rdi
    1c1e:	5f                   	pop    rdi
    1c1f:	70 69                	jo     1c8a <.debug_str+0x1c8a>
    1c21:	65 5f                	gs pop rdi
    1c23:	5f                   	pop    rdi
    1c24:	20 32                	and    BYTE PTR [rdx],dh
    1c26:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1c29:	49                   	rex.WB
    1c2a:	4e 54                	rex.WRX push rsp
    1c2c:	5f                   	pop    rdi
    1c2d:	4c                   	rex.WR
    1c2e:	45                   	rex.RB
    1c2f:	41 53                	push   r11
    1c31:	54                   	push   rsp
    1c32:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    1c35:	59                   	pop    rcx
    1c36:	50                   	push   rax
    1c37:	45 5f                	rex.RB pop r15
    1c39:	5f                   	pop    rdi
    1c3a:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    1c3d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c3f:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    1c44:	61                   	(bad)  
    1c45:	72 00                	jb     1c47 <.debug_str+0x1c47>
    1c47:	5f                   	pop    rdi
    1c48:	5f                   	pop    rdi
    1c49:	55                   	push   rbp
    1c4a:	49                   	rex.WB
    1c4b:	4e 54                	rex.WRX push rsp
    1c4d:	31 36                	xor    DWORD PTR [rsi],esi
    1c4f:	5f                   	pop    rdi
    1c50:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    1c54:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    1c57:	5f                   	pop    rdi
    1c58:	5f                   	pop    rdi
    1c59:	53                   	push   rbx
    1c5a:	48 52                	rex.W push rdx
    1c5c:	54                   	push   rsp
    1c5d:	5f                   	pop    rdi
    1c5e:	4d                   	rex.WRB
    1c5f:	41 58                	pop    r8
    1c61:	5f                   	pop    rdi
    1c62:	5f                   	pop    rdi
    1c63:	20 30                	and    BYTE PTR [rax],dh
    1c65:	78 37                	js     1c9e <.debug_str+0x1c9e>
    1c67:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    1c6d:	61                   	(bad)  
    1c6e:	6d                   	ins    DWORD PTR es:[rdi],dx
    1c6f:	64 36 34 5f          	fs ss xor al,0x5f
    1c73:	5f                   	pop    rdi
    1c74:	20 31                	and    BYTE PTR [rcx],dh
    1c76:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1c79:	53                   	push   rbx
    1c7a:	49 5a                	rex.WB pop r10
    1c7c:	45                   	rex.RB
    1c7d:	4f                   	rex.WRXB
    1c7e:	46 5f                	rex.RX pop rdi
    1c80:	46                   	rex.RX
    1c81:	4c                   	rex.WR
    1c82:	4f                   	rex.WRXB
    1c83:	41 54                	push   r12
    1c85:	5f                   	pop    rdi
    1c86:	5f                   	pop    rdi
    1c87:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    1c8a:	5f                   	pop    rdi
    1c8b:	5f                   	pop    rdi
    1c8c:	47                   	rex.RXB
    1c8d:	43                   	rex.XB
    1c8e:	43 5f                	rex.XB pop r15
    1c90:	48                   	rex.W
    1c91:	41 56                	push   r14
    1c93:	45 5f                	rex.RB pop r15
    1c95:	53                   	push   rbx
    1c96:	59                   	pop    rcx
    1c97:	4e                   	rex.WRX
    1c98:	43 5f                	rex.XB pop r15
    1c9a:	43                   	rex.XB
    1c9b:	4f                   	rex.WRXB
    1c9c:	4d 50                	rex.WRB push r8
    1c9e:	41 52                	push   r10
    1ca0:	45 5f                	rex.RB pop r15
    1ca2:	41                   	rex.B
    1ca3:	4e                   	rex.WRX
    1ca4:	44 5f                	rex.R pop rdi
    1ca6:	53                   	push   rbx
    1ca7:	57                   	push   rdi
    1ca8:	41 50                	push   r8
    1caa:	5f                   	pop    rdi
    1cab:	38 20                	cmp    BYTE PTR [rax],ah
    1cad:	31 00                	xor    DWORD PTR [rax],eax
    1caf:	5f                   	pop    rdi
    1cb0:	5f                   	pop    rdi
    1cb1:	57                   	push   rdi
    1cb2:	43                   	rex.XB
    1cb3:	48                   	rex.W
    1cb4:	41 52                	push   r10
    1cb6:	5f                   	pop    rdi
    1cb7:	4d                   	rex.WRB
    1cb8:	41 58                	pop    r8
    1cba:	5f                   	pop    rdi
    1cbb:	5f                   	pop    rdi
    1cbc:	20 30                	and    BYTE PTR [rax],dh
    1cbe:	78 37                	js     1cf7 <.debug_str+0x1cf7>
    1cc0:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rsi+0x6c],ah
    1cc7:	00 66 6c 
    1cca:	61                   	(bad)  
    1ccb:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
    1ccf:	53                   	push   rbx
    1cd0:	54                   	push   rsp
    1cd1:	44                   	rex.R
    1cd2:	43 5f                	rex.XB pop r15
    1cd4:	5f                   	pop    rdi
    1cd5:	20 31                	and    BYTE PTR [rcx],dh
    1cd7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1cda:	4f 52                	rex.WRXB push r10
    1cdc:	44                   	rex.R
    1cdd:	45 52                	rex.RB push r10
    1cdf:	5f                   	pop    rdi
    1ce0:	50                   	push   rax
    1ce1:	44 50                	rex.R push rax
    1ce3:	5f                   	pop    rdi
    1ce4:	45                   	rex.RB
    1ce5:	4e                   	rex.WRX
    1ce6:	44                   	rex.R
    1ce7:	49                   	rex.WB
    1ce8:	41                   	rex.B
    1ce9:	4e 5f                	rex.WRX pop rdi
    1ceb:	5f                   	pop    rdi
    1cec:	20 33                	and    BYTE PTR [rbx],dh
    1cee:	34 31                	xor    al,0x31
    1cf0:	32 00                	xor    al,BYTE PTR [rax]
    1cf2:	5f                   	pop    rdi
    1cf3:	5f                   	pop    rdi
    1cf4:	47                   	rex.RXB
    1cf5:	43                   	rex.XB
    1cf6:	43 5f                	rex.XB pop r15
    1cf8:	41 54                	push   r12
    1cfa:	4f                   	rex.WRXB
    1cfb:	4d                   	rex.WRB
    1cfc:	49                   	rex.WB
    1cfd:	43 5f                	rex.XB pop r15
    1cff:	50                   	push   rax
    1d00:	4f                   	rex.WRXB
    1d01:	49                   	rex.WB
    1d02:	4e 54                	rex.WRX push rsp
    1d04:	45 52                	rex.RB push r10
    1d06:	5f                   	pop    rdi
    1d07:	4c                   	rex.WR
    1d08:	4f                   	rex.WRXB
    1d09:	43                   	rex.XB
    1d0a:	4b 5f                	rex.WXB pop r15
    1d0c:	46 52                	rex.RX push rdx
    1d0e:	45                   	rex.RB
    1d0f:	45 20 32             	and    BYTE PTR [r10],r14b
    1d12:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d15:	4f 52                	rex.WRXB push r10
    1d17:	44                   	rex.R
    1d18:	45 52                	rex.RB push r10
    1d1a:	5f                   	pop    rdi
    1d1b:	4c                   	rex.WR
    1d1c:	49 54                	rex.WB push r12
    1d1e:	54                   	push   rsp
    1d1f:	4c                   	rex.WR
    1d20:	45 5f                	rex.RB pop r15
    1d22:	45                   	rex.RB
    1d23:	4e                   	rex.WRX
    1d24:	44                   	rex.R
    1d25:	49                   	rex.WB
    1d26:	41                   	rex.B
    1d27:	4e 5f                	rex.WRX pop rdi
    1d29:	5f                   	pop    rdi
    1d2a:	20 31                	and    BYTE PTR [rcx],dh
    1d2c:	32 33                	xor    dh,BYTE PTR [rbx]
    1d2e:	34 00                	xor    al,0x0
    1d30:	5f                   	pop    rdi
    1d31:	5f                   	pop    rdi
    1d32:	57                   	push   rdi
    1d33:	49                   	rex.WB
    1d34:	4e 54                	rex.WRX push rsp
    1d36:	5f                   	pop    rdi
    1d37:	54                   	push   rsp
    1d38:	59                   	pop    rcx
    1d39:	50                   	push   rax
    1d3a:	45 5f                	rex.RB pop r15
    1d3c:	5f                   	pop    rdi
    1d3d:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1d40:	73 69                	jae    1dab <.debug_str+0x1dab>
    1d42:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1d44:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1d49:	74 00                	je     1d4b <.debug_str+0x1d4b>
    1d4b:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d4c:	69 6e 75 78 20 31 00 	imul   ebp,DWORD PTR [rsi+0x75],0x312078
    1d53:	5f                   	pop    rdi
    1d54:	5f                   	pop    rdi
    1d55:	41 54                	push   r12
    1d57:	4f                   	rex.WRXB
    1d58:	4d                   	rex.WRB
    1d59:	49                   	rex.WB
    1d5a:	43 5f                	rex.XB pop r15
    1d5c:	52                   	push   rdx
    1d5d:	45                   	rex.RB
    1d5e:	4c                   	rex.WR
    1d5f:	41 58                	pop    r8
    1d61:	45                   	rex.RB
    1d62:	44 20 30             	and    BYTE PTR [rax],r14b
    1d65:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d68:	46                   	rex.RX
    1d69:	49                   	rex.WB
    1d6a:	4e                   	rex.WRX
    1d6b:	49 54                	rex.WB push r12
    1d6d:	45 5f                	rex.RB pop r15
    1d6f:	4d                   	rex.WRB
    1d70:	41 54                	push   r12
    1d72:	48 5f                	rex.W pop rdi
    1d74:	4f                   	rex.WRXB
    1d75:	4e                   	rex.WRX
    1d76:	4c 59                	rex.WR pop rcx
    1d78:	5f                   	pop    rdi
    1d79:	5f                   	pop    rdi
    1d7a:	20 30                	and    BYTE PTR [rax],dh
    1d7c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d7f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d80:	69 6e 75 78 20 31 00 	imul   ebp,DWORD PTR [rsi+0x75],0x312078
    1d87:	5f                   	pop    rdi
    1d88:	5f                   	pop    rdi
    1d89:	78 38                	js     1dc3 <.debug_str+0x1dc3>
    1d8b:	36 5f                	ss pop rdi
    1d8d:	36 34 5f             	ss xor al,0x5f
    1d90:	5f                   	pop    rdi
    1d91:	20 31                	and    BYTE PTR [rcx],dh
    1d93:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d96:	44                   	rex.R
    1d97:	45                   	rex.RB
    1d98:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    1d9b:	5f                   	pop    rdi
    1d9c:	4d                   	rex.WRB
    1d9d:	41                   	rex.B
    1d9e:	4e 54                	rex.WRX push rsp
    1da0:	5f                   	pop    rdi
    1da1:	44                   	rex.R
    1da2:	49                   	rex.WB
    1da3:	47 5f                	rex.RXB pop r15
    1da5:	5f                   	pop    rdi
    1da6:	20 37                	and    BYTE PTR [rdi],dh
    1da8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1dab:	44                   	rex.R
    1dac:	45                   	rex.RB
    1dad:	43                   	rex.XB
    1dae:	36 34 5f             	ss xor al,0x5f
    1db1:	45 50                	rex.RB push r8
    1db3:	53                   	push   rbx
    1db4:	49                   	rex.WB
    1db5:	4c                   	rex.WR
    1db6:	4f                   	rex.WRXB
    1db7:	4e 5f                	rex.WRX pop rdi
    1db9:	5f                   	pop    rdi
    1dba:	20 31                	and    BYTE PTR [rcx],dh
    1dbc:	45 2d 31 35 44 44    	rex.RB sub eax,0x44443531
    1dc2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1dc5:	53                   	push   rbx
    1dc6:	53                   	push   rbx
    1dc7:	45 32 5f 4d          	xor    r11b,BYTE PTR [r15+0x4d]
    1dcb:	41 54                	push   r12
    1dcd:	48 5f                	rex.W pop rdi
    1dcf:	5f                   	pop    rdi
    1dd0:	20 31                	and    BYTE PTR [rcx],dh
    1dd2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1dd5:	47                   	rex.RXB
    1dd6:	43                   	rex.XB
    1dd7:	43 5f                	rex.XB pop r15
    1dd9:	49                   	rex.WB
    1dda:	45                   	rex.RB
    1ddb:	43 5f                	rex.XB pop r15
    1ddd:	35 35 39 20 32       	xor    eax,0x32203935
    1de2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1de5:	55                   	push   rbp
    1de6:	49                   	rex.WB
    1de7:	4e 54                	rex.WRX push rsp
    1de9:	5f                   	pop    rdi
    1dea:	46                   	rex.RX
    1deb:	41 53                	push   r11
    1ded:	54                   	push   rsp
    1dee:	33 32                	xor    esi,DWORD PTR [rdx]
    1df0:	5f                   	pop    rdi
    1df1:	4d                   	rex.WRB
    1df2:	41 58                	pop    r8
    1df4:	5f                   	pop    rdi
    1df5:	5f                   	pop    rdi
    1df6:	20 30                	and    BYTE PTR [rax],dh
    1df8:	78 66                	js     1e60 <.debug_str+0x1e60>
    1dfa:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1e01:	66 66 66 66 66 66 66 
    1e08:	66 55                	push   bp
    1e0a:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1e0e:	46                   	rex.RX
    1e0f:	4c 54                	rex.WR push rsp
    1e11:	33 32                	xor    esi,DWORD PTR [rdx]
    1e13:	58                   	pop    rax
    1e14:	5f                   	pop    rdi
    1e15:	44                   	rex.R
    1e16:	45                   	rex.RB
    1e17:	4e                   	rex.WRX
    1e18:	4f 52                	rex.WRXB push r10
    1e1a:	4d 5f                	rex.WRB pop r15
    1e1c:	4d                   	rex.WRB
    1e1d:	49                   	rex.WB
    1e1e:	4e 5f                	rex.WRX pop rdi
    1e20:	5f                   	pop    rdi
    1e21:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    1e24:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    1e27:	36 35 36 34 35 38    	ss xor eax,0x38353436
    1e2d:	34 31                	xor    al,0x31
    1e2f:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    1e32:	35 34 34 31 37       	xor    eax,0x37313434
    1e37:	36 35 36 38 37 39    	ss xor eax,0x39373836
    1e3d:	32 38                	xor    bh,BYTE PTR [rax]
    1e3f:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    1e42:	32 31                	xor    dh,BYTE PTR [rcx]
    1e44:	33 37                	xor    esi,DWORD PTR [rdi]
    1e46:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    1e49:	33 32                	xor    esi,DWORD PTR [rdx]
    1e4b:	34 46                	xor    al,0x46
    1e4d:	33 32                	xor    esi,DWORD PTR [rdx]
    1e4f:	78 00                	js     1e51 <.debug_str+0x1e51>
    1e51:	5f                   	pop    rdi
    1e52:	5f                   	pop    rdi
    1e53:	4d                   	rex.WRB
    1e54:	4d 58                	rex.WRB pop r8
    1e56:	5f                   	pop    rdi
    1e57:	5f                   	pop    rdi
    1e58:	20 31                	and    BYTE PTR [rcx],dh
    1e5a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e5d:	49                   	rex.WB
    1e5e:	4e 54                	rex.WRX push rsp
    1e60:	36 34 5f             	ss xor al,0x5f
    1e63:	4d                   	rex.WRB
    1e64:	41 58                	pop    r8
    1e66:	5f                   	pop    rdi
    1e67:	5f                   	pop    rdi
    1e68:	20 30                	and    BYTE PTR [rax],dh
    1e6a:	78 37                	js     1ea3 <.debug_str+0x1ea3>
    1e6c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1e73:	66 66 66 66 66 66 66 
    1e7a:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1e7f:	46                   	rex.RX
    1e80:	4c 54                	rex.WR push rsp
    1e82:	36 34 58             	ss xor al,0x58
    1e85:	5f                   	pop    rdi
    1e86:	45 50                	rex.RB push r8
    1e88:	53                   	push   rbx
    1e89:	49                   	rex.WB
    1e8a:	4c                   	rex.WR
    1e8b:	4f                   	rex.WRXB
    1e8c:	4e 5f                	rex.WRX pop rdi
    1e8e:	5f                   	pop    rdi
    1e8f:	20 31                	and    BYTE PTR [rcx],dh
    1e91:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
    1e94:	34 32                	xor    al,0x32
    1e96:	30 32                	xor    BYTE PTR [rdx],dh
    1e98:	31 37                	xor    DWORD PTR [rdi],esi
    1e9a:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    1e9d:	35 35 30 34 34       	xor    eax,0x34343035
    1ea2:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
    1ea5:	30 37                	xor    BYTE PTR [rdi],dh
    1ea7:	34 35                	xor    al,0x35
    1ea9:	32 38                	xor    bh,BYTE PTR [rax]
    1eab:	30 30                	xor    BYTE PTR [rax],dh
    1ead:	38 36                	cmp    BYTE PTR [rsi],dh
    1eaf:	39 39                	cmp    DWORD PTR [rcx],edi
    1eb1:	34 31                	xor    al,0x31
    1eb3:	37                   	(bad)  
    1eb4:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
    1eb7:	31 39                	xor    DWORD PTR [rcx],edi
    1eb9:	46                   	rex.RX
    1eba:	36 34 78             	ss xor al,0x78
    1ebd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ec0:	50                   	push   rax
    1ec1:	54                   	push   rsp
    1ec2:	52                   	push   rdx
    1ec3:	44                   	rex.R
    1ec4:	49                   	rex.WB
    1ec5:	46                   	rex.RX
    1ec6:	46 5f                	rex.RX pop rdi
    1ec8:	4d                   	rex.WRB
    1ec9:	41 58                	pop    r8
    1ecb:	5f                   	pop    rdi
    1ecc:	5f                   	pop    rdi
    1ecd:	20 30                	and    BYTE PTR [rax],dh
    1ecf:	78 37                	js     1f08 <.debug_str+0x1f08>
    1ed1:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1ed8:	66 66 66 66 66 66 66 
    1edf:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    1ee4:	53                   	push   rbx
    1ee5:	45                   	rex.RB
    1ee6:	47 5f                	rex.RXB pop r15
    1ee8:	47 53                	rex.RXB push r11
    1eea:	20 31                	and    BYTE PTR [rcx],dh
    1eec:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1eef:	53                   	push   rbx
    1ef0:	49                   	rex.WB
    1ef1:	47 5f                	rex.RXB pop r15
    1ef3:	41 54                	push   r12
    1ef5:	4f                   	rex.WRXB
    1ef6:	4d                   	rex.WRB
    1ef7:	49                   	rex.WB
    1ef8:	43 5f                	rex.XB pop r15
    1efa:	4d                   	rex.WRB
    1efb:	41 58                	pop    r8
    1efd:	5f                   	pop    rdi
    1efe:	5f                   	pop    rdi
    1eff:	20 30                	and    BYTE PTR [rax],dh
    1f01:	78 37                	js     1f3a <.debug_str+0x1f3a>
    1f03:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    1f0a:	00 5f 5f 
    1f0d:	78 38                	js     1f47 <.debug_str+0x1f47>
    1f0f:	36 5f                	ss pop rdi
    1f11:	36 34 20             	ss xor al,0x20
    1f14:	31 00                	xor    DWORD PTR [rax],eax
    1f16:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1f19:	72 00                	jb     1f1b <.debug_str+0x1f1b>
    1f1b:	5f                   	pop    rdi
    1f1c:	5f                   	pop    rdi
    1f1d:	53                   	push   rbx
    1f1e:	54                   	push   rsp
    1f1f:	44                   	rex.R
    1f20:	43 5f                	rex.XB pop r15
    1f22:	4e                   	rex.WRX
    1f23:	4f 5f                	rex.WRXB pop r15
    1f25:	54                   	push   rsp
    1f26:	48 52                	rex.W push rdx
    1f28:	45                   	rex.RB
    1f29:	41                   	rex.B
    1f2a:	44 53                	rex.R push rbx
    1f2c:	5f                   	pop    rdi
    1f2d:	5f                   	pop    rdi
    1f2e:	20 31                	and    BYTE PTR [rcx],dh
    1f30:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f33:	55                   	push   rbp
    1f34:	49                   	rex.WB
    1f35:	4e 54                	rex.WRX push rsp
    1f37:	5f                   	pop    rdi
    1f38:	46                   	rex.RX
    1f39:	41 53                	push   r11
    1f3b:	54                   	push   rsp
    1f3c:	31 36                	xor    DWORD PTR [rsi],esi
    1f3e:	5f                   	pop    rdi
    1f3f:	54                   	push   rsp
    1f40:	59                   	pop    rcx
    1f41:	50                   	push   rax
    1f42:	45 5f                	rex.RB pop r15
    1f44:	5f                   	pop    rdi
    1f45:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1f49:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1f4d:	73 69                	jae    1fb8 <.debug_str+0x1fb8>
    1f4f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1f51:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1f56:	74 00                	je     1f58 <.debug_str+0x1f58>
    1f58:	5f                   	pop    rdi
    1f59:	5f                   	pop    rdi
    1f5a:	46                   	rex.RX
    1f5b:	4c 54                	rex.WR push rsp
    1f5d:	33 32                	xor    esi,DWORD PTR [rdx]
    1f5f:	58                   	pop    rax
    1f60:	5f                   	pop    rdi
    1f61:	48                   	rex.W
    1f62:	41 53                	push   r11
    1f64:	5f                   	pop    rdi
    1f65:	49                   	rex.WB
    1f66:	4e                   	rex.WRX
    1f67:	46                   	rex.RX
    1f68:	49                   	rex.WB
    1f69:	4e                   	rex.WRX
    1f6a:	49 54                	rex.WB push r12
    1f6c:	59                   	pop    rcx
    1f6d:	5f                   	pop    rdi
    1f6e:	5f                   	pop    rdi
    1f6f:	20 31                	and    BYTE PTR [rcx],dh
    1f71:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f74:	49                   	rex.WB
    1f75:	4e 54                	rex.WRX push rsp
    1f77:	5f                   	pop    rdi
    1f78:	46                   	rex.RX
    1f79:	41 53                	push   r11
    1f7b:	54                   	push   rsp
    1f7c:	31 36                	xor    DWORD PTR [rsi],esi
    1f7e:	5f                   	pop    rdi
    1f7f:	57                   	push   rdi
    1f80:	49                   	rex.WB
    1f81:	44 54                	rex.R push rsp
    1f83:	48 5f                	rex.W pop rdi
    1f85:	5f                   	pop    rdi
    1f86:	20 36                	and    BYTE PTR [rsi],dh
    1f88:	34 00                	xor    al,0x0
    1f8a:	5f                   	pop    rdi
    1f8b:	5f                   	pop    rdi
    1f8c:	46                   	rex.RX
    1f8d:	4c 54                	rex.WR push rsp
    1f8f:	33 32                	xor    esi,DWORD PTR [rdx]
    1f91:	5f                   	pop    rdi
    1f92:	48                   	rex.W
    1f93:	41 53                	push   r11
    1f95:	5f                   	pop    rdi
    1f96:	44                   	rex.R
    1f97:	45                   	rex.RB
    1f98:	4e                   	rex.WRX
    1f99:	4f 52                	rex.WRXB push r10
    1f9b:	4d 5f                	rex.WRB pop r15
    1f9d:	5f                   	pop    rdi
    1f9e:	20 31                	and    BYTE PTR [rcx],dh
    1fa0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fa3:	46                   	rex.RX
    1fa4:	4c 54                	rex.WR push rsp
    1fa6:	5f                   	pop    rdi
    1fa7:	52                   	push   rdx
    1fa8:	41                   	rex.B
    1fa9:	44                   	rex.R
    1faa:	49 58                	rex.WB pop r8
    1fac:	5f                   	pop    rdi
    1fad:	5f                   	pop    rdi
    1fae:	20 32                	and    BYTE PTR [rdx],dh
    1fb0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fb3:	46                   	rex.RX
    1fb4:	4c 54                	rex.WR push rsp
    1fb6:	36 34 5f             	ss xor al,0x5f
    1fb9:	4d                   	rex.WRB
    1fba:	41                   	rex.B
    1fbb:	4e 54                	rex.WRX push rsp
    1fbd:	5f                   	pop    rdi
    1fbe:	44                   	rex.R
    1fbf:	49                   	rex.WB
    1fc0:	47 5f                	rex.RXB pop r15
    1fc2:	5f                   	pop    rdi
    1fc3:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f1ffc <main+0x5f5f1fb7>
    1fc9:	46                   	rex.RX
    1fca:	4c 54                	rex.WR push rsp
    1fcc:	5f                   	pop    rdi
    1fcd:	48                   	rex.W
    1fce:	41 53                	push   r11
    1fd0:	5f                   	pop    rdi
    1fd1:	49                   	rex.WB
    1fd2:	4e                   	rex.WRX
    1fd3:	46                   	rex.RX
    1fd4:	49                   	rex.WB
    1fd5:	4e                   	rex.WRX
    1fd6:	49 54                	rex.WB push r12
    1fd8:	59                   	pop    rcx
    1fd9:	5f                   	pop    rdi
    1fda:	5f                   	pop    rdi
    1fdb:	20 31                	and    BYTE PTR [rcx],dh
    1fdd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fe0:	53                   	push   rbx
    1fe1:	49                   	rex.WB
    1fe2:	47 5f                	rex.RXB pop r15
    1fe4:	41 54                	push   r12
    1fe6:	4f                   	rex.WRXB
    1fe7:	4d                   	rex.WRB
    1fe8:	49                   	rex.WB
    1fe9:	43 5f                	rex.XB pop r15
    1feb:	57                   	push   rdi
    1fec:	49                   	rex.WB
    1fed:	44 54                	rex.R push rsp
    1fef:	48 5f                	rex.W pop rdi
    1ff1:	5f                   	pop    rdi
    1ff2:	20 33                	and    BYTE PTR [rbx],dh
    1ff4:	32 00                	xor    al,BYTE PTR [rax]
    1ff6:	5f                   	pop    rdi
    1ff7:	5f                   	pop    rdi
    1ff8:	49                   	rex.WB
    1ff9:	4e 54                	rex.WRX push rsp
    1ffb:	5f                   	pop    rdi
    1ffc:	46                   	rex.RX
    1ffd:	41 53                	push   r11
    1fff:	54                   	push   rsp
    2000:	33 32                	xor    esi,DWORD PTR [rdx]
    2002:	5f                   	pop    rdi
    2003:	4d                   	rex.WRB
    2004:	41 58                	pop    r8
    2006:	5f                   	pop    rdi
    2007:	5f                   	pop    rdi
    2008:	20 30                	and    BYTE PTR [rax],dh
    200a:	78 37                	js     2043 <.debug_str+0x2043>
    200c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2013:	66 66 66 66 66 66 66 
    201a:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    201f:	46                   	rex.RX
    2020:	4c 54                	rex.WR push rsp
    2022:	36 34 5f             	ss xor al,0x5f
    2025:	44                   	rex.R
    2026:	45                   	rex.RB
    2027:	43                   	rex.XB
    2028:	49                   	rex.WB
    2029:	4d                   	rex.WRB
    202a:	41                   	rex.B
    202b:	4c 5f                	rex.WR pop rdi
    202d:	44                   	rex.R
    202e:	49                   	rex.WB
    202f:	47 5f                	rex.RXB pop r15
    2031:	5f                   	pop    rdi
    2032:	20 31                	and    BYTE PTR [rcx],dh
    2034:	37                   	(bad)  
    2035:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2038:	4c                   	rex.WR
    2039:	4f                   	rex.WRXB
    203a:	4e                   	rex.WRX
    203b:	47 5f                	rex.RXB pop r15
    203d:	4c                   	rex.WR
    203e:	4f                   	rex.WRXB
    203f:	4e                   	rex.WRX
    2040:	47 5f                	rex.RXB pop r15
    2042:	57                   	push   rdi
    2043:	49                   	rex.WB
    2044:	44 54                	rex.R push rsp
    2046:	48 5f                	rex.W pop rdi
    2048:	5f                   	pop    rdi
    2049:	20 36                	and    BYTE PTR [rsi],dh
    204b:	34 00                	xor    al,0x0
    204d:	5f                   	pop    rdi
    204e:	5f                   	pop    rdi
    204f:	46                   	rex.RX
    2050:	4c 54                	rex.WR push rsp
    2052:	36 34 5f             	ss xor al,0x5f
    2055:	44                   	rex.R
    2056:	45                   	rex.RB
    2057:	4e                   	rex.WRX
    2058:	4f 52                	rex.WRXB push r10
    205a:	4d 5f                	rex.WRB pop r15
    205c:	4d                   	rex.WRB
    205d:	49                   	rex.WB
    205e:	4e 5f                	rex.WRX pop rdi
    2060:	5f                   	pop    rdi
    2061:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    2064:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    2067:	36 35 36 34 35 38    	ss xor eax,0x38353436
    206d:	34 31                	xor    al,0x31
    206f:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    2072:	35 34 34 31 37       	xor    eax,0x37313434
    2077:	36 35 36 38 37 39    	ss xor eax,0x39373836
    207d:	32 38                	xor    bh,BYTE PTR [rax]
    207f:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    2082:	32 31                	xor    dh,BYTE PTR [rcx]
    2084:	33 37                	xor    esi,DWORD PTR [rdi]
    2086:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    2089:	33 32                	xor    esi,DWORD PTR [rdx]
    208b:	34 46                	xor    al,0x46
    208d:	36 34 00             	ss xor al,0x0
    2090:	62                   	(bad)  
    2091:	75 66                	jne    20f9 <.debug_str+0x20f9>
    2093:	66 65 72 00          	data16 gs jb 2097 <.debug_str+0x2097>
    2097:	73 74                	jae    210d <.debug_str+0x210d>
    2099:	61                   	(bad)  
    209a:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    209d:	65 78 61             	gs js  2101 <.debug_str+0x2101>
    20a0:	6d                   	ins    DWORD PTR es:[rdi],dx
    20a1:	70 6c                	jo     210f <.debug_str+0x210f>
    20a3:	65 2e 63 00          	gs movsxd eax,DWORD PTR cs:[rax]
    20a7:	5f                   	pop    rdi
    20a8:	5f                   	pop    rdi
    20a9:	46                   	rex.RX
    20aa:	4c 54                	rex.WR push rsp
    20ac:	5f                   	pop    rdi
    20ad:	45 50                	rex.RB push r8
    20af:	53                   	push   rbx
    20b0:	49                   	rex.WB
    20b1:	4c                   	rex.WR
    20b2:	4f                   	rex.WRXB
    20b3:	4e 5f                	rex.WRX pop rdi
    20b5:	5f                   	pop    rdi
    20b6:	20 31                	and    BYTE PTR [rcx],dh
    20b8:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    20bb:	32 30                	xor    dh,BYTE PTR [rax]
    20bd:	39 32                	cmp    DWORD PTR [rdx],esi
    20bf:	38 39                	cmp    BYTE PTR [rcx],bh
    20c1:	35 35 30 37 38       	xor    eax,0x38373035
    20c6:	31 32                	xor    DWORD PTR [rdx],esi
    20c8:	35 30 30 30 30       	xor    eax,0x30303030
    20cd:	30 30                	xor    BYTE PTR [rax],dh
    20cf:	30 30                	xor    BYTE PTR [rax],dh
    20d1:	30 30                	xor    BYTE PTR [rax],dh
    20d3:	30 30                	xor    BYTE PTR [rax],dh
    20d5:	30 30                	xor    BYTE PTR [rax],dh
    20d7:	30 30                	xor    BYTE PTR [rax],dh
    20d9:	30 30                	xor    BYTE PTR [rax],dh
    20db:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    20de:	37                   	(bad)  
    20df:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    20e3:	46                   	rex.RX
    20e4:	4c 54                	rex.WR push rsp
    20e6:	36 34 58             	ss xor al,0x58
    20e9:	5f                   	pop    rdi
    20ea:	4d                   	rex.WRB
    20eb:	41 58                	pop    r8
    20ed:	5f                   	pop    rdi
    20ee:	5f                   	pop    rdi
    20ef:	20 31                	and    BYTE PTR [rcx],dh
    20f1:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    20f4:	39 37                	cmp    DWORD PTR [rdi],esi
    20f6:	33 31                	xor    esi,DWORD PTR [rcx]
    20f8:	34 39                	xor    al,0x39
    20fa:	35 33 35 37 32       	xor    eax,0x32373533
    20ff:	33 31                	xor    esi,DWORD PTR [rcx]
    2101:	37                   	(bad)  
    2102:	36 35 30 32 31 32    	ss xor eax,0x32313230
    2108:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    210b:	35 33 30 33 30       	xor    eax,0x30333033
    2110:	39 37                	cmp    DWORD PTR [rdi],esi
    2112:	30 32                	xor    BYTE PTR [rdx],dh
    2114:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    2117:	34 39                	xor    al,0x39
    2119:	33 32                	xor    esi,DWORD PTR [rdx]
    211b:	46                   	rex.RX
    211c:	36 34 78             	ss xor al,0x78
    211f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2122:	53                   	push   rbx
    2123:	54                   	push   rsp
    2124:	44                   	rex.R
    2125:	43 5f                	rex.XB pop r15
    2127:	55                   	push   rbp
    2128:	54                   	push   rsp
    2129:	46 5f                	rex.RX pop rdi
    212b:	31 36                	xor    DWORD PTR [rsi],esi
    212d:	5f                   	pop    rdi
    212e:	5f                   	pop    rdi
    212f:	20 31                	and    BYTE PTR [rcx],dh
    2131:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2134:	49                   	rex.WB
    2135:	4e 54                	rex.WRX push rsp
    2137:	4d                   	rex.WRB
    2138:	41 58                	pop    r8
    213a:	5f                   	pop    rdi
    213b:	54                   	push   rsp
    213c:	59                   	pop    rcx
    213d:	50                   	push   rax
    213e:	45 5f                	rex.RB pop r15
    2140:	5f                   	pop    rdi
    2141:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    2145:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2149:	74 00                	je     214b <.debug_str+0x214b>
    214b:	5f                   	pop    rdi
    214c:	5f                   	pop    rdi
    214d:	4c                   	rex.WR
    214e:	44                   	rex.R
    214f:	42                   	rex.X
    2150:	4c 5f                	rex.WR pop rdi
    2152:	48                   	rex.W
    2153:	41 53                	push   r11
    2155:	5f                   	pop    rdi
    2156:	44                   	rex.R
    2157:	45                   	rex.RB
    2158:	4e                   	rex.WRX
    2159:	4f 52                	rex.WRXB push r10
    215b:	4d 5f                	rex.WRB pop r15
    215d:	5f                   	pop    rdi
    215e:	20 31                	and    BYTE PTR [rcx],dh
    2160:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2163:	4c                   	rex.WR
    2164:	44                   	rex.R
    2165:	42                   	rex.X
    2166:	4c 5f                	rex.WR pop rdi
    2168:	4d                   	rex.WRB
    2169:	41                   	rex.B
    216a:	4e 54                	rex.WRX push rsp
    216c:	5f                   	pop    rdi
    216d:	44                   	rex.R
    216e:	49                   	rex.WB
    216f:	47 5f                	rex.RXB pop r15
    2171:	5f                   	pop    rdi
    2172:	20 36                	and    BYTE PTR [rsi],dh
    2174:	34 00                	xor    al,0x0
    2176:	5f                   	pop    rdi
    2177:	5f                   	pop    rdi
    2178:	68 61 73 5f 69       	push   0x695f7361
    217d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    217e:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    2182:	65 28 53 54          	sub    BYTE PTR gs:[rbx+0x54],dl
    2186:	52                   	push   rdx
    2187:	29 20                	sub    DWORD PTR [rax],esp
    2189:	5f                   	pop    rdi
    218a:	5f                   	pop    rdi
    218b:	68 61 73 5f 69       	push   0x695f7361
    2190:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2191:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    2195:	65 5f                	gs pop rdi
    2197:	5f                   	pop    rdi
    2198:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
    219b:	52                   	push   rdx
    219c:	29 00                	sub    DWORD PTR [rax],eax
    219e:	5f                   	pop    rdi
    219f:	5f                   	pop    rdi
    21a0:	47                   	rex.RXB
    21a1:	43                   	rex.XB
    21a2:	43 5f                	rex.XB pop r15
    21a4:	41 54                	push   r12
    21a6:	4f                   	rex.WRXB
    21a7:	4d                   	rex.WRB
    21a8:	49                   	rex.WB
    21a9:	43 5f                	rex.XB pop r15
    21ab:	43                   	rex.XB
    21ac:	48                   	rex.W
    21ad:	41 52                	push   r10
    21af:	31 36                	xor    DWORD PTR [rsi],esi
    21b1:	5f                   	pop    rdi
    21b2:	54                   	push   rsp
    21b3:	5f                   	pop    rdi
    21b4:	4c                   	rex.WR
    21b5:	4f                   	rex.WRXB
    21b6:	43                   	rex.XB
    21b7:	4b 5f                	rex.WXB pop r15
    21b9:	46 52                	rex.RX push rdx
    21bb:	45                   	rex.RB
    21bc:	45 20 32             	and    BYTE PTR [r10],r14b
    21bf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21c2:	44                   	rex.R
    21c3:	45                   	rex.RB
    21c4:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    21c7:	5f                   	pop    rdi
    21c8:	45 50                	rex.RB push r8
    21ca:	53                   	push   rbx
    21cb:	49                   	rex.WB
    21cc:	4c                   	rex.WR
    21cd:	4f                   	rex.WRXB
    21ce:	4e 5f                	rex.WRX pop rdi
    21d0:	5f                   	pop    rdi
    21d1:	20 31                	and    BYTE PTR [rcx],dh
    21d3:	45 2d 36 44 46 00    	rex.RB sub eax,0x464436
    21d9:	5f                   	pop    rdi
    21da:	5f                   	pop    rdi
    21db:	53                   	push   rbx
    21dc:	49 5a                	rex.WB pop r10
    21de:	45                   	rex.RB
    21df:	4f                   	rex.WRXB
    21e0:	46 5f                	rex.RX pop rdi
    21e2:	46                   	rex.RX
    21e3:	4c                   	rex.WR
    21e4:	4f                   	rex.WRXB
    21e5:	41 54                	push   r12
    21e7:	38 30                	cmp    BYTE PTR [rax],dh
    21e9:	5f                   	pop    rdi
    21ea:	5f                   	pop    rdi
    21eb:	20 31                	and    BYTE PTR [rcx],dh
    21ed:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    21f1:	52                   	push   rdx
    21f2:	45                   	rex.RB
    21f3:	47                   	rex.RXB
    21f4:	49 53                	rex.WB push r11
    21f6:	54                   	push   rsp
    21f7:	45 52                	rex.RB push r10
    21f9:	5f                   	pop    rdi
    21fa:	50                   	push   rax
    21fb:	52                   	push   rdx
    21fc:	45                   	rex.RB
    21fd:	46                   	rex.RX
    21fe:	49 58                	rex.WB pop r8
    2200:	5f                   	pop    rdi
    2201:	5f                   	pop    rdi
    2202:	20 00                	and    BYTE PTR [rax],al
    2204:	5f                   	pop    rdi
    2205:	5f                   	pop    rdi
    2206:	41 54                	push   r12
    2208:	4f                   	rex.WRXB
    2209:	4d                   	rex.WRB
    220a:	49                   	rex.WB
    220b:	43 5f                	rex.XB pop r15
    220d:	43                   	rex.XB
    220e:	4f                   	rex.WRXB
    220f:	4e 53                	rex.WRX push rbx
    2211:	55                   	push   rbp
    2212:	4d                   	rex.WRB
    2213:	45 20 31             	and    BYTE PTR [r9],r14b
    2216:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2219:	55                   	push   rbp
    221a:	49                   	rex.WB
    221b:	4e 54                	rex.WRX push rsp
    221d:	36 34 5f             	ss xor al,0x5f
    2220:	4d                   	rex.WRB
    2221:	41 58                	pop    r8
    2223:	5f                   	pop    rdi
    2224:	5f                   	pop    rdi
    2225:	20 30                	and    BYTE PTR [rax],dh
    2227:	78 66                	js     228f <.debug_str+0x228f>
    2229:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2230:	66 66 66 66 66 66 66 
    2237:	66 55                	push   bp
    2239:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    223d:	53                   	push   rbx
    223e:	54                   	push   rsp
    223f:	44                   	rex.R
    2240:	43 5f                	rex.XB pop r15
    2242:	55                   	push   rbp
    2243:	54                   	push   rsp
    2244:	46 5f                	rex.RX pop rdi
    2246:	33 32                	xor    esi,DWORD PTR [rdx]
    2248:	5f                   	pop    rdi
    2249:	5f                   	pop    rdi
    224a:	20 31                	and    BYTE PTR [rcx],dh
    224c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    224f:	55                   	push   rbp
    2250:	49                   	rex.WB
    2251:	4e 54                	rex.WRX push rsp
    2253:	31 36                	xor    DWORD PTR [rsi],esi
    2255:	5f                   	pop    rdi
    2256:	54                   	push   rsp
    2257:	59                   	pop    rcx
    2258:	50                   	push   rax
    2259:	45 5f                	rex.RB pop r15
    225b:	5f                   	pop    rdi
    225c:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    225f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2260:	72 74                	jb     22d6 <.debug_str+0x22d6>
    2262:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    2265:	73 69                	jae    22d0 <.debug_str+0x22d0>
    2267:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2269:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    226e:	74 00                	je     2270 <.debug_str+0x2270>
    2270:	5f                   	pop    rdi
    2271:	5f                   	pop    rdi
    2272:	46                   	rex.RX
    2273:	4c 54                	rex.WR push rsp
    2275:	36 34 58             	ss xor al,0x58
    2278:	5f                   	pop    rdi
    2279:	4d                   	rex.WRB
    227a:	41 58                	pop    r8
    227c:	5f                   	pop    rdi
    227d:	31 30                	xor    DWORD PTR [rax],esi
    227f:	5f                   	pop    rdi
    2280:	45 58                	rex.RB pop r8
    2282:	50                   	push   rax
    2283:	5f                   	pop    rdi
    2284:	5f                   	pop    rdi
    2285:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    2288:	33 32                	xor    esi,DWORD PTR [rdx]
    228a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    228d:	55                   	push   rbp
    228e:	49                   	rex.WB
    228f:	4e 54                	rex.WRX push rsp
    2291:	33 32                	xor    esi,DWORD PTR [rdx]
    2293:	5f                   	pop    rdi
    2294:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2298:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    229b:	23 23                	and    esp,DWORD PTR [rbx]
    229d:	20 55 00             	and    BYTE PTR [rbp+0x0],dl
    22a0:	5f                   	pop    rdi
    22a1:	5f                   	pop    rdi
    22a2:	6b 38 20             	imul   edi,DWORD PTR [rax],0x20
    22a5:	31 00                	xor    DWORD PTR [rax],eax
    22a7:	5f                   	pop    rdi
    22a8:	5f                   	pop    rdi
    22a9:	53                   	push   rbx
    22aa:	45                   	rex.RB
    22ab:	47 5f                	rex.RXB pop r15
    22ad:	46 53                	rex.RX push rbx
    22af:	20 31                	and    BYTE PTR [rcx],dh
    22b1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22b4:	55                   	push   rbp
    22b5:	49                   	rex.WB
    22b6:	4e 54                	rex.WRX push rsp
    22b8:	4d                   	rex.WRB
    22b9:	41 58                	pop    r8
    22bb:	5f                   	pop    rdi
    22bc:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    22c0:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    22c3:	23 23                	and    esp,DWORD PTR [rbx]
    22c5:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
    22c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22cb:	47 58                	rex.RXB pop r8
    22cd:	58                   	pop    rax
    22ce:	5f                   	pop    rdi
    22cf:	41                   	rex.B
    22d0:	42                   	rex.X
    22d1:	49 5f                	rex.WB pop r15
    22d3:	56                   	push   rsi
    22d4:	45 52                	rex.RB push r10
    22d6:	53                   	push   rbx
    22d7:	49                   	rex.WB
    22d8:	4f                   	rex.WRXB
    22d9:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    22dc:	30 31                	xor    BYTE PTR [rcx],dh
    22de:	31 00                	xor    DWORD PTR [rax],eax
    22e0:	5f                   	pop    rdi
    22e1:	5f                   	pop    rdi
    22e2:	53                   	push   rbx
    22e3:	49 5a                	rex.WB pop r10
    22e5:	45                   	rex.RB
    22e6:	4f                   	rex.WRXB
    22e7:	46 5f                	rex.RX pop rdi
    22e9:	50                   	push   rax
    22ea:	54                   	push   rsp
    22eb:	52                   	push   rdx
    22ec:	44                   	rex.R
    22ed:	49                   	rex.WB
    22ee:	46                   	rex.RX
    22ef:	46 5f                	rex.RX pop rdi
    22f1:	54                   	push   rsp
    22f2:	5f                   	pop    rdi
    22f3:	5f                   	pop    rdi
    22f4:	20 38                	and    BYTE PTR [rax],bh
    22f6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22f9:	43                   	rex.XB
    22fa:	48                   	rex.W
    22fb:	41 52                	push   r10
    22fd:	5f                   	pop    rdi
    22fe:	42                   	rex.X
    22ff:	49 54                	rex.WB push r12
    2301:	5f                   	pop    rdi
    2302:	5f                   	pop    rdi
    2303:	20 38                	and    BYTE PTR [rax],bh
    2305:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2308:	53                   	push   rbx
    2309:	49                   	rex.WB
    230a:	47 5f                	rex.RXB pop r15
    230c:	41 54                	push   r12
    230e:	4f                   	rex.WRXB
    230f:	4d                   	rex.WRB
    2310:	49                   	rex.WB
    2311:	43 5f                	rex.XB pop r15
    2313:	4d                   	rex.WRB
    2314:	49                   	rex.WB
    2315:	4e 5f                	rex.WRX pop rdi
    2317:	5f                   	pop    rdi
    2318:	20 28                	and    BYTE PTR [rax],ch
    231a:	2d 5f 5f 53 49       	sub    eax,0x49535f5f
    231f:	47 5f                	rex.RXB pop r15
    2321:	41 54                	push   r12
    2323:	4f                   	rex.WRXB
    2324:	4d                   	rex.WRB
    2325:	49                   	rex.WB
    2326:	43 5f                	rex.XB pop r15
    2328:	4d                   	rex.WRB
    2329:	41 58                	pop    r8
    232b:	5f                   	pop    rdi
    232c:	5f                   	pop    rdi
    232d:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 295453 <main+0x29540e>
    2333:	5f                   	pop    rdi
    2334:	5f                   	pop    rdi
    2335:	49                   	rex.WB
    2336:	4e 54                	rex.WRX push rsp
    2338:	5f                   	pop    rdi
    2339:	46                   	rex.RX
    233a:	41 53                	push   r11
    233c:	54                   	push   rsp
    233d:	36 34 5f             	ss xor al,0x5f
    2340:	57                   	push   rdi
    2341:	49                   	rex.WB
    2342:	44 54                	rex.R push rsp
    2344:	48 5f                	rex.W pop rdi
    2346:	5f                   	pop    rdi
    2347:	20 36                	and    BYTE PTR [rsi],dh
    2349:	34 00                	xor    al,0x0
    234b:	5f                   	pop    rdi
    234c:	5f                   	pop    rdi
    234d:	46                   	rex.RX
    234e:	4c 54                	rex.WR push rsp
    2350:	31 32                	xor    DWORD PTR [rdx],esi
    2352:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    2355:	45                   	rex.RB
    2356:	4e                   	rex.WRX
    2357:	4f 52                	rex.WRXB push r10
    2359:	4d 5f                	rex.WRB pop r15
    235b:	4d                   	rex.WRB
    235c:	49                   	rex.WB
    235d:	4e 5f                	rex.WRX pop rdi
    235f:	5f                   	pop    rdi
    2360:	20 36                	and    BYTE PTR [rsi],dh
    2362:	2e 34 37             	cs xor al,0x37
    2365:	35 31 37 35 31       	xor    eax,0x31353731
    236a:	31 39                	xor    DWORD PTR [rcx],edi
    236c:	34 33                	xor    al,0x33
    236e:	38 30                	cmp    BYTE PTR [rax],dh
    2370:	32 35 31 31 30 39    	xor    dh,BYTE PTR [rip+0x39303131]        # 393054a7 <main+0x39305462>
    2376:	32 34 34             	xor    dh,BYTE PTR [rsp+rsi*1]
    2379:	33 38                	xor    edi,DWORD PTR [rax]
    237b:	39 35 38 32 32 37    	cmp    DWORD PTR [rip+0x37323238],esi        # 373255b9 <main+0x37325574>
    2381:	36 34 36             	ss xor al,0x36
    2384:	35 35 65 2d 34       	xor    eax,0x342d6535
    2389:	39 36                	cmp    DWORD PTR [rsi],esi
    238b:	36 46 31 32          	rex.RX xor DWORD PTR ss:[rdx],r14d
    238f:	38 00                	cmp    BYTE PTR [rax],al
    2391:	5f                   	pop    rdi
    2392:	5f                   	pop    rdi
    2393:	55                   	push   rbp
    2394:	49                   	rex.WB
    2395:	4e 54                	rex.WRX push rsp
    2397:	5f                   	pop    rdi
    2398:	4c                   	rex.WR
    2399:	45                   	rex.RB
    239a:	41 53                	push   r11
    239c:	54                   	push   rsp
    239d:	33 32                	xor    esi,DWORD PTR [rdx]
    239f:	5f                   	pop    rdi
    23a0:	54                   	push   rsp
    23a1:	59                   	pop    rcx
    23a2:	50                   	push   rax
    23a3:	45 5f                	rex.RB pop r15
    23a5:	5f                   	pop    rdi
    23a6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    23a9:	73 69                	jae    2414 <.debug_str+0x2414>
    23ab:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    23ad:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    23b2:	74 00                	je     23b4 <.debug_str+0x23b4>
    23b4:	5f                   	pop    rdi
    23b5:	5f                   	pop    rdi
    23b6:	44                   	rex.R
    23b7:	42                   	rex.X
    23b8:	4c 5f                	rex.WR pop rdi
    23ba:	48                   	rex.W
    23bb:	41 53                	push   r11
    23bd:	5f                   	pop    rdi
    23be:	44                   	rex.R
    23bf:	45                   	rex.RB
    23c0:	4e                   	rex.WRX
    23c1:	4f 52                	rex.WRXB push r10
    23c3:	4d 5f                	rex.WRB pop r15
    23c5:	5f                   	pop    rdi
    23c6:	20 31                	and    BYTE PTR [rcx],dh
    23c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    23cb:	46                   	rex.RX
    23cc:	4c 54                	rex.WR push rsp
    23ce:	31 32                	xor    DWORD PTR [rdx],esi
    23d0:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    23d3:	41                   	rex.B
    23d4:	4e 54                	rex.WRX push rsp
    23d6:	5f                   	pop    rdi
    23d7:	44                   	rex.R
    23d8:	49                   	rex.WB
    23d9:	47 5f                	rex.RXB pop r15
    23db:	5f                   	pop    rdi
    23dc:	20 31                	and    BYTE PTR [rcx],dh
    23de:	31 33                	xor    DWORD PTR [rbx],esi
    23e0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    23e3:	46                   	rex.RX
    23e4:	4c 54                	rex.WR push rsp
    23e6:	36 34 5f             	ss xor al,0x5f
    23e9:	44                   	rex.R
    23ea:	49                   	rex.WB
    23eb:	47 5f                	rex.RXB pop r15
    23ed:	5f                   	pop    rdi
    23ee:	20 31                	and    BYTE PTR [rcx],dh
    23f0:	35 00 5f 5f 55       	xor    eax,0x555f5f00
    23f5:	49                   	rex.WB
    23f6:	4e 54                	rex.WRX push rsp
    23f8:	4d                   	rex.WRB
    23f9:	41 58                	pop    r8
    23fb:	5f                   	pop    rdi
    23fc:	4d                   	rex.WRB
    23fd:	41 58                	pop    r8
    23ff:	5f                   	pop    rdi
    2400:	5f                   	pop    rdi
    2401:	20 30                	and    BYTE PTR [rax],dh
    2403:	78 66                	js     246b <.debug_str+0x246b>
    2405:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    240c:	66 66 66 66 66 66 66 
    2413:	66 55                	push   bp
    2415:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2419:	47                   	rex.RXB
    241a:	43                   	rex.XB
    241b:	43 5f                	rex.XB pop r15
    241d:	48                   	rex.W
    241e:	41 56                	push   r14
    2420:	45 5f                	rex.RB pop r15
    2422:	53                   	push   rbx
    2423:	59                   	pop    rcx
    2424:	4e                   	rex.WRX
    2425:	43 5f                	rex.XB pop r15
    2427:	43                   	rex.XB
    2428:	4f                   	rex.WRXB
    2429:	4d 50                	rex.WRB push r8
    242b:	41 52                	push   r10
    242d:	45 5f                	rex.RB pop r15
    242f:	41                   	rex.B
    2430:	4e                   	rex.WRX
    2431:	44 5f                	rex.R pop rdi
    2433:	53                   	push   rbx
    2434:	57                   	push   rdi
    2435:	41 50                	push   r8
    2437:	5f                   	pop    rdi
    2438:	31 20                	xor    DWORD PTR [rax],esp
    243a:	31 00                	xor    DWORD PTR [rax],eax
    243c:	5f                   	pop    rdi
    243d:	5f                   	pop    rdi
    243e:	44                   	rex.R
    243f:	42                   	rex.X
    2440:	4c 5f                	rex.WR pop rdi
    2442:	4d                   	rex.WRB
    2443:	41 58                	pop    r8
    2445:	5f                   	pop    rdi
    2446:	5f                   	pop    rdi
    2447:	20 28                	and    BYTE PTR [rax],ch
    2449:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    244d:	62                   	(bad)  
    244e:	6c                   	ins    BYTE PTR es:[rdi],dx
    244f:	65 29 31             	sub    DWORD PTR gs:[rcx],esi
    2452:	2e 37                	cs (bad) 
    2454:	39 37                	cmp    DWORD PTR [rdi],esi
    2456:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    2459:	31 33                	xor    DWORD PTR [rbx],esi
    245b:	34 38                	xor    al,0x38
    245d:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    2460:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 3138549d <main+0x31385458>
    2466:	34 35                	xor    al,0x35
    2468:	32 37                	xor    dh,BYTE PTR [rdi]
    246a:	34 32                	xor    al,0x32
    246c:	33 37                	xor    esi,DWORD PTR [rdi]
    246e:	33 31                	xor    esi,DWORD PTR [rcx]
    2470:	37                   	(bad)  
    2471:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    2474:	35 37 65 2b 33       	xor    eax,0x332b6537
    2479:	30 38                	xor    BYTE PTR [rax],bh
    247b:	4c 29 00             	sub    QWORD PTR [rax],r8
    247e:	5f                   	pop    rdi
    247f:	5f                   	pop    rdi
    2480:	49                   	rex.WB
    2481:	4e 54                	rex.WRX push rsp
    2483:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2486:	41 58                	pop    r8
    2488:	5f                   	pop    rdi
    2489:	5f                   	pop    rdi
    248a:	20 30                	and    BYTE PTR [rax],dh
    248c:	78 37                	js     24c5 <.debug_str+0x24c5>
    248e:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    2492:	55                   	push   rbp
    2493:	49                   	rex.WB
    2494:	4e 54                	rex.WRX push rsp
    2496:	5f                   	pop    rdi
    2497:	46                   	rex.RX
    2498:	41 53                	push   r11
    249a:	54                   	push   rsp
    249b:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    249e:	41 58                	pop    r8
    24a0:	5f                   	pop    rdi
    24a1:	5f                   	pop    rdi
    24a2:	20 30                	and    BYTE PTR [rax],dh
    24a4:	78 66                	js     250c <.debug_str+0x250c>
    24a6:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    24aa:	44                   	rex.R
    24ab:	42                   	rex.X
    24ac:	4c 5f                	rex.WR pop rdi
    24ae:	48                   	rex.W
    24af:	41 53                	push   r11
    24b1:	5f                   	pop    rdi
    24b2:	51                   	push   rcx
    24b3:	55                   	push   rbp
    24b4:	49                   	rex.WB
    24b5:	45 54                	rex.RB push r12
    24b7:	5f                   	pop    rdi
    24b8:	4e                   	rex.WRX
    24b9:	41                   	rex.B
    24ba:	4e 5f                	rex.WRX pop rdi
    24bc:	5f                   	pop    rdi
    24bd:	20 31                	and    BYTE PTR [rcx],dh
    24bf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24c2:	46                   	rex.RX
    24c3:	4c 54                	rex.WR push rsp
    24c5:	5f                   	pop    rdi
    24c6:	4d                   	rex.WRB
    24c7:	49                   	rex.WB
    24c8:	4e 5f                	rex.WRX pop rdi
    24ca:	31 30                	xor    DWORD PTR [rax],esi
    24cc:	5f                   	pop    rdi
    24cd:	45 58                	rex.RB pop r8
    24cf:	50                   	push   rax
    24d0:	5f                   	pop    rdi
    24d1:	5f                   	pop    rdi
    24d2:	20 28                	and    BYTE PTR [rax],ch
    24d4:	2d 33 37 29 00       	sub    eax,0x293733
    24d9:	5f                   	pop    rdi
    24da:	5f                   	pop    rdi
    24db:	47                   	rex.RXB
    24dc:	43                   	rex.XB
    24dd:	43 5f                	rex.XB pop r15
    24df:	41 54                	push   r12
    24e1:	4f                   	rex.WRXB
    24e2:	4d                   	rex.WRB
    24e3:	49                   	rex.WB
    24e4:	43 5f                	rex.XB pop r15
    24e6:	54                   	push   rsp
    24e7:	45 53                	rex.RB push r11
    24e9:	54                   	push   rsp
    24ea:	5f                   	pop    rdi
    24eb:	41                   	rex.B
    24ec:	4e                   	rex.WRX
    24ed:	44 5f                	rex.R pop rdi
    24ef:	53                   	push   rbx
    24f0:	45 54                	rex.RB push r12
    24f2:	5f                   	pop    rdi
    24f3:	54                   	push   rsp
    24f4:	52                   	push   rdx
    24f5:	55                   	push   rbp
    24f6:	45 56                	rex.RB push r14
    24f8:	41                   	rex.B
    24f9:	4c 20 31             	rex.WR and BYTE PTR [rcx],r14b
    24fc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24ff:	46                   	rex.RX
    2500:	4c 54                	rex.WR push rsp
    2502:	36 34 58             	ss xor al,0x58
    2505:	5f                   	pop    rdi
    2506:	44                   	rex.R
    2507:	45                   	rex.RB
    2508:	43                   	rex.XB
    2509:	49                   	rex.WB
    250a:	4d                   	rex.WRB
    250b:	41                   	rex.B
    250c:	4c 5f                	rex.WR pop rdi
    250e:	44                   	rex.R
    250f:	49                   	rex.WB
    2510:	47 5f                	rex.RXB pop r15
    2512:	5f                   	pop    rdi
    2513:	20 32                	and    BYTE PTR [rdx],dh
    2515:	31 00                	xor    DWORD PTR [rax],eax
    2517:	5f                   	pop    rdi
    2518:	5f                   	pop    rdi
    2519:	41 54                	push   r12
    251b:	4f                   	rex.WRXB
    251c:	4d                   	rex.WRB
    251d:	49                   	rex.WB
    251e:	43 5f                	rex.XB pop r15
    2520:	41                   	rex.B
    2521:	43 51                	rex.XB push r9
    2523:	5f                   	pop    rdi
    2524:	52                   	push   rdx
    2525:	45                   	rex.RB
    2526:	4c 20 34 00          	rex.WR and BYTE PTR [rax+rax*1],r14b
    252a:	5f                   	pop    rdi
    252b:	5f                   	pop    rdi
    252c:	57                   	push   rdi
    252d:	43                   	rex.XB
    252e:	48                   	rex.W
    252f:	41 52                	push   r10
    2531:	5f                   	pop    rdi
    2532:	54                   	push   rsp
    2533:	59                   	pop    rcx
    2534:	50                   	push   rax
    2535:	45 5f                	rex.RB pop r15
    2537:	5f                   	pop    rdi
    2538:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    253b:	74 00                	je     253d <.debug_str+0x253d>
    253d:	5f                   	pop    rdi
    253e:	53                   	push   rbx
    253f:	54                   	push   rsp
    2540:	44                   	rex.R
    2541:	43 5f                	rex.XB pop r15
    2543:	50                   	push   rax
    2544:	52                   	push   rdx
    2545:	45                   	rex.RB
    2546:	44                   	rex.R
    2547:	45                   	rex.RB
    2548:	46 5f                	rex.RX pop rdi
    254a:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    254d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2550:	49                   	rex.WB
    2551:	4e 54                	rex.WRX push rsp
    2553:	5f                   	pop    rdi
    2554:	46                   	rex.RX
    2555:	41 53                	push   r11
    2557:	54                   	push   rsp
    2558:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    255b:	49                   	rex.WB
    255c:	44 54                	rex.R push rsp
    255e:	48 5f                	rex.W pop rdi
    2560:	5f                   	pop    rdi
    2561:	20 38                	and    BYTE PTR [rax],bh
    2563:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2566:	46                   	rex.RX
    2567:	4c 54                	rex.WR push rsp
    2569:	31 32                	xor    DWORD PTR [rdx],esi
    256b:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    256e:	41 58                	pop    r8
    2570:	5f                   	pop    rdi
    2571:	31 30                	xor    DWORD PTR [rax],esi
    2573:	5f                   	pop    rdi
    2574:	45 58                	rex.RB pop r8
    2576:	50                   	push   rax
    2577:	5f                   	pop    rdi
    2578:	5f                   	pop    rdi
    2579:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    257c:	33 32                	xor    esi,DWORD PTR [rdx]
    257e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2581:	55                   	push   rbp
    2582:	53                   	push   rbx
    2583:	45 52                	rex.RB push r10
    2585:	5f                   	pop    rdi
    2586:	4c                   	rex.WR
    2587:	41                   	rex.B
    2588:	42                   	rex.X
    2589:	45                   	rex.RB
    258a:	4c 5f                	rex.WR pop rdi
    258c:	50                   	push   rax
    258d:	52                   	push   rdx
    258e:	45                   	rex.RB
    258f:	46                   	rex.RX
    2590:	49 58                	rex.WB pop r8
    2592:	5f                   	pop    rdi
    2593:	5f                   	pop    rdi
    2594:	20 00                	and    BYTE PTR [rax],al
    2596:	74 65                	je     25fd <.debug_str+0x25fd>
    2598:	73 74                	jae    260e <.debug_str+0x260e>
    259a:	5f                   	pop    rdi
    259b:	66 75 6e             	data16 jne 260c <.debug_str+0x260c>
    259e:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    25a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25a3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    25a6:	46                   	rex.RX
    25a7:	4c 54                	rex.WR push rsp
    25a9:	33 32                	xor    esi,DWORD PTR [rdx]
    25ab:	5f                   	pop    rdi
    25ac:	4d                   	rex.WRB
    25ad:	49                   	rex.WB
    25ae:	4e 5f                	rex.WRX pop rdi
    25b0:	45 58                	rex.RB pop r8
    25b2:	50                   	push   rax
    25b3:	5f                   	pop    rdi
    25b4:	5f                   	pop    rdi
    25b5:	20 28                	and    BYTE PTR [rax],ch
    25b7:	2d 31 32 35 29       	sub    eax,0x29353231
    25bc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    25bf:	43                   	rex.XB
    25c0:	48                   	rex.W
    25c1:	41 52                	push   r10
    25c3:	31 36                	xor    DWORD PTR [rsi],esi
    25c5:	5f                   	pop    rdi
    25c6:	54                   	push   rsp
    25c7:	59                   	pop    rcx
    25c8:	50                   	push   rax
    25c9:	45 5f                	rex.RB pop r15
    25cb:	5f                   	pop    rdi
    25cc:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    25cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25d0:	72 74                	jb     2646 <.debug_str+0x2646>
    25d2:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    25d5:	73 69                	jae    2640 <.debug_str+0x2640>
    25d7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    25d9:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    25de:	74 00                	je     25e0 <.debug_str+0x25e0>
    25e0:	5f                   	pop    rdi
    25e1:	5f                   	pop    rdi
    25e2:	55                   	push   rbp
    25e3:	49                   	rex.WB
    25e4:	4e 54                	rex.WRX push rsp
    25e6:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    25e9:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    25ec:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    25ef:	5f                   	pop    rdi
    25f0:	5f                   	pop    rdi
    25f1:	46                   	rex.RX
    25f2:	4c 54                	rex.WR push rsp
    25f4:	31 32                	xor    DWORD PTR [rdx],esi
    25f6:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    25f9:	49                   	rex.WB
    25fa:	47 5f                	rex.RXB pop r15
    25fc:	5f                   	pop    rdi
    25fd:	20 33                	and    BYTE PTR [rbx],dh
    25ff:	33 00                	xor    eax,DWORD PTR [rax]
    2601:	5f                   	pop    rdi
    2602:	5f                   	pop    rdi
    2603:	55                   	push   rbp
    2604:	49                   	rex.WB
    2605:	4e 54                	rex.WRX push rsp
    2607:	5f                   	pop    rdi
    2608:	4c                   	rex.WR
    2609:	45                   	rex.RB
    260a:	41 53                	push   r11
    260c:	54                   	push   rsp
    260d:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    2610:	59                   	pop    rcx
    2611:	50                   	push   rax
    2612:	45 5f                	rex.RB pop r15
    2614:	5f                   	pop    rdi
    2615:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    2618:	73 69                	jae    2683 <.debug_str+0x2683>
    261a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    261c:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    2621:	61                   	(bad)  
    2622:	72 00                	jb     2624 <.debug_str+0x2624>
    2624:	5f                   	pop    rdi
    2625:	5f                   	pop    rdi
    2626:	49                   	rex.WB
    2627:	4e 54                	rex.WRX push rsp
    2629:	36 34 5f             	ss xor al,0x5f
    262c:	54                   	push   rsp
    262d:	59                   	pop    rcx
    262e:	50                   	push   rax
    262f:	45 5f                	rex.RB pop r15
    2631:	5f                   	pop    rdi
    2632:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    2636:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    263a:	74 00                	je     263c <.debug_str+0x263c>
    263c:	5f                   	pop    rdi
    263d:	5f                   	pop    rdi
    263e:	49                   	rex.WB
    263f:	4e 54                	rex.WRX push rsp
    2641:	5f                   	pop    rdi
    2642:	4c                   	rex.WR
    2643:	45                   	rex.RB
    2644:	41 53                	push   r11
    2646:	54                   	push   rsp
    2647:	36 34 5f             	ss xor al,0x5f
    264a:	57                   	push   rdi
    264b:	49                   	rex.WB
    264c:	44 54                	rex.R push rsp
    264e:	48 5f                	rex.W pop rdi
    2650:	5f                   	pop    rdi
    2651:	20 36                	and    BYTE PTR [rsi],dh
    2653:	34 00                	xor    al,0x0
    2655:	5f                   	pop    rdi
    2656:	5f                   	pop    rdi
    2657:	4c                   	rex.WR
    2658:	44                   	rex.R
    2659:	42                   	rex.X
    265a:	4c 5f                	rex.WR pop rdi
    265c:	44                   	rex.R
    265d:	49                   	rex.WB
    265e:	47 5f                	rex.RXB pop r15
    2660:	5f                   	pop    rdi
    2661:	20 31                	and    BYTE PTR [rcx],dh
    2663:	38 00                	cmp    BYTE PTR [rax],al
    2665:	6d                   	ins    DWORD PTR es:[rdi],dx
    2666:	61                   	(bad)  
    2667:	69 6e 00 5f 5f 55 49 	imul   ebp,DWORD PTR [rsi+0x0],0x49555f5f
    266e:	4e 54                	rex.WRX push rsp
    2670:	33 32                	xor    esi,DWORD PTR [rdx]
    2672:	5f                   	pop    rdi
    2673:	4d                   	rex.WRB
    2674:	41 58                	pop    r8
    2676:	5f                   	pop    rdi
    2677:	5f                   	pop    rdi
    2678:	20 30                	and    BYTE PTR [rax],dh
    267a:	78 66                	js     26e2 <.debug_str+0x26e2>
    267c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    2683:	55 
    2684:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2687:	47                   	rex.RXB
    2688:	43                   	rex.XB
    2689:	43 5f                	rex.XB pop r15
    268b:	48                   	rex.W
    268c:	41 56                	push   r14
    268e:	45 5f                	rex.RB pop r15
    2690:	44 57                	rex.R push rdi
    2692:	41 52                	push   r10
    2694:	46 32 5f 43          	rex.RX xor r11b,BYTE PTR [rdi+0x43]
    2698:	46                   	rex.RX
    2699:	49 5f                	rex.WB pop r15
    269b:	41 53                	push   r11
    269d:	4d 20 31             	rex.WRB and BYTE PTR [r9],r14b
    26a0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26a3:	49                   	rex.WB
    26a4:	4e 54                	rex.WRX push rsp
    26a6:	5f                   	pop    rdi
    26a7:	4c                   	rex.WR
    26a8:	45                   	rex.RB
    26a9:	41 53                	push   r11
    26ab:	54                   	push   rsp
    26ac:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    26af:	41 58                	pop    r8
    26b1:	5f                   	pop    rdi
    26b2:	5f                   	pop    rdi
    26b3:	20 30                	and    BYTE PTR [rax],dh
    26b5:	78 37                	js     26ee <.debug_str+0x26ee>
    26b7:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    26bb:	44                   	rex.R
    26bc:	45                   	rex.RB
    26bd:	43                   	rex.XB
    26be:	36 34 5f             	ss xor al,0x5f
    26c1:	4d                   	rex.WRB
    26c2:	49                   	rex.WB
    26c3:	4e 5f                	rex.WRX pop rdi
    26c5:	5f                   	pop    rdi
    26c6:	20 31                	and    BYTE PTR [rcx],dh
    26c8:	45 2d 33 38 33 44    	rex.RB sub eax,0x44333833
    26ce:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    26d2:	44                   	rex.R
    26d3:	42                   	rex.X
    26d4:	4c 5f                	rex.WR pop rdi
    26d6:	4d                   	rex.WRB
    26d7:	49                   	rex.WB
    26d8:	4e 5f                	rex.WRX pop rdi
    26da:	31 30                	xor    DWORD PTR [rax],esi
    26dc:	5f                   	pop    rdi
    26dd:	45 58                	rex.RB pop r8
    26df:	50                   	push   rax
    26e0:	5f                   	pop    rdi
    26e1:	5f                   	pop    rdi
    26e2:	20 28                	and    BYTE PTR [rax],ch
    26e4:	2d 33 30 37 29       	sub    eax,0x29373033
    26e9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26ec:	44                   	rex.R
    26ed:	45                   	rex.RB
    26ee:	43                   	rex.XB
    26ef:	49                   	rex.WB
    26f0:	4d                   	rex.WRB
    26f1:	41                   	rex.B
    26f2:	4c 5f                	rex.WR pop rdi
    26f4:	42                   	rex.X
    26f5:	49                   	rex.WB
    26f6:	44 5f                	rex.R pop rdi
    26f8:	46                   	rex.RX
    26f9:	4f 52                	rex.WRXB push r10
    26fb:	4d                   	rex.WRB
    26fc:	41 54                	push   r12
    26fe:	5f                   	pop    rdi
    26ff:	5f                   	pop    rdi
    2700:	20 31                	and    BYTE PTR [rcx],dh
    2702:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2705:	47                   	rex.RXB
    2706:	4e 55                	rex.WRX push rbp
    2708:	43 5f                	rex.XB pop r15
    270a:	53                   	push   rbx
    270b:	54                   	push   rsp
    270c:	44                   	rex.R
    270d:	43 5f                	rex.XB pop r15
    270f:	49                   	rex.WB
    2710:	4e                   	rex.WRX
    2711:	4c                   	rex.WR
    2712:	49                   	rex.WB
    2713:	4e                   	rex.WRX
    2714:	45 5f                	rex.RB pop r15
    2716:	5f                   	pop    rdi
    2717:	20 31                	and    BYTE PTR [rcx],dh
    2719:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    271c:	46                   	rex.RX
    271d:	4c 54                	rex.WR push rsp
    271f:	36 34 5f             	ss xor al,0x5f
    2722:	4d                   	rex.WRB
    2723:	41 58                	pop    r8
    2725:	5f                   	pop    rdi
    2726:	31 30                	xor    DWORD PTR [rax],esi
    2728:	5f                   	pop    rdi
    2729:	45 58                	rex.RB pop r8
    272b:	50                   	push   rax
    272c:	5f                   	pop    rdi
    272d:	5f                   	pop    rdi
    272e:	20 33                	and    BYTE PTR [rbx],dh
    2730:	30 38                	xor    BYTE PTR [rax],bh
    2732:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2735:	46                   	rex.RX
    2736:	4c 54                	rex.WR push rsp
    2738:	5f                   	pop    rdi
    2739:	4d                   	rex.WRB
    273a:	41                   	rex.B
    273b:	4e 54                	rex.WRX push rsp
    273d:	5f                   	pop    rdi
    273e:	44                   	rex.R
    273f:	49                   	rex.WB
    2740:	47 5f                	rex.RXB pop r15
    2742:	5f                   	pop    rdi
    2743:	20 32                	and    BYTE PTR [rdx],dh
    2745:	34 00                	xor    al,0x0

Disassembly of section .comment:

0000000000000000 <.comment>:
void test_function(int a, int b, int c, int d) {
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   6:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   9:	75 6e                	jne    79 <main+0x34>
   b:	74 75                	je     82 <main+0x3d>
   d:	20 37                	and    BYTE PTR [rdi],dh
   f:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  12:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 6275374a <main+0x62753705>
  18:	75 6e                	jne    88 <main+0x43>
  1a:	74 75                	je     91 <main+0x4c>
  1c:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1f:	38 2e                	cmp    BYTE PTR [rsi],ch
  21:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
	flag = 31337;
  24:	20 37                	and    BYTE PTR [rdi],dh
  26:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
			20: R_X86_64_PC32	.text
  22:	00 00                	add    BYTE PTR [rax],al
  24:	45 00 00             	add    BYTE PTR [r8],r8b
  27:	00 00                	add    BYTE PTR [rax],al
  29:	41 0e                	rex.B (bad) 
  2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  31:	02 40 0c             	add    al,BYTE PTR [rax+0xc]
  34:	07                   	(bad)  
  35:	08 00                	or     BYTE PTR [rax],al
  37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	3c 00                	cmp    al,0x0
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 00                	add    BYTE PTR [rax],al
			40: R_X86_64_PC32	.text+0x45
  42:	00 00                	add    BYTE PTR [rax],al
  44:	24 00                	and    al,0x0
  46:	00 00                	add    BYTE PTR [rax],al
  48:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  51:	5f                   	pop    rdi
  52:	0c 07                	or     al,0x7
  54:	08 00                	or     BYTE PTR [rax],al
	...
Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0xda (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0x14f3): GNU C11 7.3.0 -mtune=generic -march=x86-64 -ggdb3 -fstack-protector-strong
    <10>   DW_AT_language    : 12	(ANSI C99)
    <11>   DW_AT_name        : (indirect string, offset: 0x2097): stack_example.c
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0x3c3): /home/ubuntu/Engineering/Programming/Hacking_Art_of_Exploitation/Intel_Architecture/AMD64/0x270_Memory_Segmentation/With_Debug_Info
    <19>   DW_AT_low_pc      : 0x0
    <21>   DW_AT_high_pc     : 0x69
    <29>   DW_AT_stmt_list   : 0x0
    <2d>   DW_AT_GNU_macros  : 0x0
 <1><31>: Abbrev Number: 2 (DW_TAG_subprogram)
    <32>   DW_AT_external    : 1
    <32>   DW_AT_name        : (indirect string, offset: 0x2665): main
    <36>   DW_AT_decl_file   : 1
    <37>   DW_AT_decl_line   : 9
    <38>   DW_AT_type        : <0x4e>
    <3c>   DW_AT_low_pc      : 0x45
    <44>   DW_AT_high_pc     : 0x24
    <4c>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <4e>   DW_AT_GNU_all_tail_call_sites: 1
 <1><4e>: Abbrev Number: 3 (DW_TAG_base_type)
    <4f>   DW_AT_byte_size   : 4
    <50>   DW_AT_encoding    : 5	(signed)
    <51>   DW_AT_name        : int
 <1><55>: Abbrev Number: 4 (DW_TAG_subprogram)
    <56>   DW_AT_external    : 1
    <56>   DW_AT_name        : (indirect string, offset: 0x2596): test_function
    <5a>   DW_AT_decl_file   : 1
    <5b>   DW_AT_decl_line   : 1
    <5c>   DW_AT_prototyped  : 1
    <5c>   DW_AT_low_pc      : 0x0
    <64>   DW_AT_high_pc     : 0x45
    <6c>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <6e>   DW_AT_GNU_all_tail_call_sites: 1
    <6e>   DW_AT_sibling     : <0xbf>
 <2><72>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <73>   DW_AT_name        : a
    <75>   DW_AT_decl_file   : 1
    <76>   DW_AT_decl_line   : 1
    <77>   DW_AT_type        : <0x4e>
    <7b>   DW_AT_location    : 2 byte block: 91 4c 	(DW_OP_fbreg: -52)
 <2><7e>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <7f>   DW_AT_name        : b
    <81>   DW_AT_decl_file   : 1
    <82>   DW_AT_decl_line   : 1
    <83>   DW_AT_type        : <0x4e>
    <87>   DW_AT_location    : 2 byte block: 91 48 	(DW_OP_fbreg: -56)
 <2><8a>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <8b>   DW_AT_name        : c
    <8d>   DW_AT_decl_file   : 1
    <8e>   DW_AT_decl_line   : 1
    <8f>   DW_AT_type        : <0x4e>
    <93>   DW_AT_location    : 2 byte block: 91 44 	(DW_OP_fbreg: -60)
 <2><96>: Abbrev Number: 5 (DW_TAG_formal_parameter)
    <97>   DW_AT_name        : d
    <99>   DW_AT_decl_file   : 1
    <9a>   DW_AT_decl_line   : 1
    <9b>   DW_AT_type        : <0x4e>
    <9f>   DW_AT_location    : 2 byte block: 91 40 	(DW_OP_fbreg: -64)
 <2><a2>: Abbrev Number: 6 (DW_TAG_variable)
    <a3>   DW_AT_name        : (indirect string, offset: 0x1cc8): flag
    <a7>   DW_AT_decl_file   : 1
    <a8>   DW_AT_decl_line   : 2
    <a9>   DW_AT_type        : <0x4e>
    <ad>   DW_AT_location    : 2 byte block: 91 58 	(DW_OP_fbreg: -40)
 <2><b0>: Abbrev Number: 6 (DW_TAG_variable)
    <b1>   DW_AT_name        : (indirect string, offset: 0x2090): buffer
    <b5>   DW_AT_decl_file   : 1
    <b6>   DW_AT_decl_line   : 3
    <b7>   DW_AT_type        : <0xbf>
    <bb>   DW_AT_location    : 2 byte block: 91 5e 	(DW_OP_fbreg: -34)
 <2><be>: Abbrev Number: 0
 <1><bf>: Abbrev Number: 7 (DW_TAG_array_type)
    <c0>   DW_AT_type        : <0xd6>
    <c4>   DW_AT_sibling     : <0xcf>
 <2><c8>: Abbrev Number: 8 (DW_TAG_subrange_type)
    <c9>   DW_AT_type        : <0xcf>
    <cd>   DW_AT_upper_bound : 9
 <2><ce>: Abbrev Number: 0
 <1><cf>: Abbrev Number: 9 (DW_TAG_base_type)
    <d0>   DW_AT_byte_size   : 8
    <d1>   DW_AT_encoding    : 7	(unsigned)
    <d2>   DW_AT_name        : (indirect string, offset: 0x74c): long unsigned int
 <1><d6>: Abbrev Number: 9 (DW_TAG_base_type)
    <d7>   DW_AT_byte_size   : 1
    <d8>   DW_AT_encoding    : 6	(signed char)
    <d9>   DW_AT_name        : (indirect string, offset: 0x1f16): char
 <1><dd>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT_GNU_macros   DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    0000000000000000 0000000000000069 
    0000000000000000 0000000000000000 

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4
  Offset into .debug_line:     0x0

 DW_MACRO_import - offset : 0x0
 DW_MACRO_start_file - lineno: 0 filenum: 1 filename: stack_example.c
 DW_MACRO_start_file - lineno: 31 filenum: 2 filename: /usr/x86_64-linux-gnu/include/stdc-predef.h
 DW_MACRO_import - offset : 0x0
 DW_MACRO_end_file
 DW_MACRO_end_file

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 0 macro : __STDC__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_VERSION__ 201112L
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_16__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_32__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_HOSTED__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_MINOR__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_PATCHLEVEL__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __VERSION__ "7.3.0"
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELAXED 0
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_SEQ_CST 5
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQUIRE 2
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELEASE 3
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQ_REL 4
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_CONSUME 1
 DW_MACRO_define_strp - lineno : 0 macro : __pic__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIC__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __pie__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIE__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FINITE_MATH_ONLY__ 0
 DW_MACRO_define_strp - lineno : 0 macro : _LP64 1
 DW_MACRO_define_strp - lineno : 0 macro : __LP64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SHORT__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_DOUBLE__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_DOUBLE__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SIZE_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR_BIT__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __BIGGEST_ALIGNMENT__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_LITTLE_ENDIAN__ 1234
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_BIG_ENDIAN__ 4321
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_PDP_ENDIAN__ 3412
 DW_MACRO_define_strp - lineno : 0 macro : __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_POINTER__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __has_include(STR) __has_include__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __has_include_next(STR) __has_include_next__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __GXX_ABI_VERSION 1011
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_MAX__ 0x7fffffffffffffffLL
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MIN__ 0U
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_C(c) c ## U
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559_COMPLEX 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD_TS_18661_3__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __DEC_EVAL_METHOD__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_RADIX__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MANT_DIG__ 113
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DIG__ 33
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DECIMAL_DIG__ 36
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MANT_DIG__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN_EXP__ (-94)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX_EXP__ 97
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN__ 1E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX__ 9.999999E96DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_EPSILON__ 1E-6DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MANT_DIG__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN_EXP__ (-382)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX_EXP__ 385
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN__ 1E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX__ 9.999999999999999E384DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_EPSILON__ 1E-15DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MANT_DIG__ 34
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN_EXP__ (-6142)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX_EXP__ 6145
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN__ 1E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_EPSILON__ 1E-33DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __REGISTER_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __USER_LABEL_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_STDC_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __NO_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_BOOL_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_SHORT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_INT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LLONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_POINTER_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_DWARF2_CFI_ASM 1
 DW_MACRO_define_strp - lineno : 0 macro : __PRAGMA_REDEFINE_EXTNAME 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSP_STRONG__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WCHAR_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WINT_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_PTRDIFF_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __amd64 1
 DW_MACRO_define_strp - lineno : 0 macro : __amd64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT80__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_ACQUIRE 65536
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_RELEASE 131072
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ASM_FLAG_OUTPUTS__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __code_model_small__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __MMX__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FXSR__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_FS 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_GS 1
 DW_MACRO_define_strp - lineno : 0 macro : __gnu_linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix__ 1
 DW_MACRO_define_strp - lineno : 0 macro : unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __ELF__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_BID_FORMAT__ 1

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _STDC_PREDEF_H 1
 DW_MACRO_define_strp - lineno : 38 macro : __STDC_IEC_559__ 1
 DW_MACRO_define_strp - lineno : 46 macro : __STDC_IEC_559_COMPLEX__ 1
 DW_MACRO_define_strp - lineno : 58 macro : __STDC_ISO_10646__ 201706L
 DW_MACRO_define_strp - lineno : 61 macro : __STDC_NO_THREADS__ 1

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      118
  DWARF Version:               2
  Prologue Length:             85
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	/usr/x86_64-linux-gnu/include

 The File Name Table (offset 0x3a):
  Entry	Dir	Time	Size	Name
  1	0	0	0	stack_example.c
  2	1	0	0	stdc-predef.h

 Line Number Statements:
  [0x0000005f]  Extended opcode 2: set Address to 0x0
  [0x0000006a]  Copy
  [0x0000006b]  Advance PC by constant 17 to 0x11
  [0x0000006c]  Special opcode 47: advance Address by 3 to 0x14 and Line by 0 to 1
  [0x0000006d]  Special opcode 219: advance Address by 15 to 0x23 and Line by 4 to 5
  [0x0000006e]  Special opcode 104: advance Address by 7 to 0x2a and Line by 1 to 6
  [0x0000006f]  Special opcode 62: advance Address by 4 to 0x2e and Line by 1 to 7
  [0x00000070]  Advance PC by constant 17 to 0x3f
  [0x00000071]  Special opcode 91: advance Address by 6 to 0x45 and Line by 2 to 9
  [0x00000072]  Special opcode 62: advance Address by 4 to 0x49 and Line by 1 to 10
  [0x00000073]  Advance PC by constant 17 to 0x5a
  [0x00000074]  Special opcode 188: advance Address by 13 to 0x67 and Line by 1 to 11
  [0x00000075]  Advance PC by 2 to 0x69
  [0x00000077]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 5f5f5549 4e545f4c 45415354 385f4d41 __UINT_LEAST8_MA
  0x00000010 585f5f20 30786666 005f5f46 4c543634 X__ 0xff.__FLT64
  0x00000020 5f484153 5f44454e 4f524d5f 5f203100 _HAS_DENORM__ 1.
  0x00000030 5f5f464c 54363458 5f4d414e 545f4449 __FLT64X_MANT_DI
  0x00000040 475f5f20 3634005f 5f464c54 33325f44 G__ 64.__FLT32_D
  0x00000050 49475f5f 2036005f 5f464c54 3634585f IG__ 6.__FLT64X_
  0x00000060 4d494e5f 4558505f 5f20282d 31363338 MIN_EXP__ (-1638
  0x00000070 3129005f 5f55494e 545f4c45 41535433 1).__UINT_LEAST3
  0x00000080 325f4d41 585f5f20 30786666 66666666 2_MAX__ 0xffffff
  0x00000090 66665500 5f5f5349 5a454f46 5f53495a ffU.__SIZEOF_SIZ
  0x000000a0 455f545f 5f203800 5f5f4743 435f4154 E_T__ 8.__GCC_AT
  0x000000b0 4f4d4943 5f4c4f4e 475f4c4f 434b5f46 OMIC_LONG_LOCK_F
  0x000000c0 52454520 32005f5f 464c5433 32585f48 REE 2.__FLT32X_H
  0x000000d0 41535f44 454e4f52 4d5f5f20 31005f5f AS_DENORM__ 1.__
  0x000000e0 756e6978 2031005f 5f535444 435f5645 unix 1.__STDC_VE
  0x000000f0 5253494f 4e5f5f20 32303131 31324c00 RSION__ 201112L.
  0x00000100 5f5f5349 5a454f46 5f504f49 4e544552 __SIZEOF_POINTER
  0x00000110 5f5f2038 005f5f57 43484152 5f574944 __ 8.__WCHAR_WID
  0x00000120 54485f5f 20333200 5f5f4445 43313238 TH__ 32.__DEC128
  0x00000130 5f4d494e 5f455850 5f5f2028 2d363134 _MIN_EXP__ (-614
  0x00000140 3229005f 5f636f64 655f6d6f 64656c5f 2).__code_model_
  0x00000150 736d616c 6c5f5f20 31005f5f 44454336 small__ 1.__DEC6
  0x00000160 345f4d41 4e545f44 49475f5f 20313600 4_MANT_DIG__ 16.
  0x00000170 5f5f4445 4336345f 4d494e5f 4558505f __DEC64_MIN_EXP_
  0x00000180 5f20282d 33383229 005f5f44 424c5f4d _ (-382).__DBL_M
  0x00000190 494e5f5f 20282864 6f75626c 6529322e IN__ ((double)2.
  0x000001a0 32323530 37333835 38353037 32303133 2250738585072013
  0x000001b0 38333039 30323332 37313733 33323430 8309023271733240
  0x000001c0 34303665 2d333038 4c29005f 5f55494e 406e-308L).__UIN
  0x000001d0 545f4641 53543634 5f4d4158 5f5f2030 T_FAST64_MAX__ 0
  0x000001e0 78666666 66666666 66666666 66666666 xfffffffffffffff
  0x000001f0 66554c00 5f5f756e 69785f5f 2031005f fUL.__unix__ 1._
  0x00000200 5f55494e 54505452 5f545950 455f5f20 _UINTPTR_TYPE__ 
  0x00000210 6c6f6e67 20756e73 69676e65 6420696e long unsigned in
  0x00000220 74005f5f 464c5433 32585f4d 41585f45 t.__FLT32X_MAX_E
  0x00000230 58505f5f 20313032 34005f5f 4c44424c XP__ 1024.__LDBL
  0x00000240 5f4d4158 5f31305f 4558505f 5f203439 _MAX_10_EXP__ 49
  0x00000250 3332005f 5f444543 33325f4d 494e5f5f 32.__DEC32_MIN__
  0x00000260 2031452d 39354446 005f5f46 4c543634  1E-95DF.__FLT64
  0x00000270 5f4d4158 5f5f2031 2e373937 36393331 _MAX__ 1.7976931
  0x00000280 33343836 32333135 37303831 34353237 3486231570814527
  0x00000290 34323337 33313730 34333537 652b3330 423731704357e+30
  0x000002a0 38463634 005f5f46 4c543332 585f4841 8F64.__FLT32X_HA
  0x000002b0 535f5155 4945545f 4e414e5f 5f203100 S_QUIET_NAN__ 1.
  0x000002c0 5f5f5349 5a454f46 5f57494e 545f545f __SIZEOF_WINT_T_
  0x000002d0 5f203400 5f5f464c 54313238 5f484153 _ 4.__FLT128_HAS
  0x000002e0 5f494e46 494e4954 595f5f20 31005f5f _INFINITY__ 1.__
  0x000002f0 44424c5f 4d41585f 31305f45 58505f5f DBL_MAX_10_EXP__
  0x00000300 20333038 005f5f46 4c543634 5f4d494e  308.__FLT64_MIN
  0x00000310 5f5f2032 2e323235 30373338 35383530 __ 2.22507385850
  0x00000320 37323031 33383330 39303233 32373137 7201383090232717
  0x00000330 33333234 30343036 652d3330 38463634 33240406e-308F64
  0x00000340 005f5f61 6d643634 2031005f 5f4c4442 .__amd64 1.__LDB
  0x00000350 4c5f4d49 4e5f5f20 332e3336 32313033 L_MIN__ 3.362103
  0x00000360 31343331 31323039 33353036 32363236 1431120935062626
  0x00000370 37373831 37333231 37353236 30652d34 7781732175260e-4
  0x00000380 3933324c 005f5f49 4e545f4c 45415354 932L.__INT_LEAST
  0x00000390 33325f57 49445448 5f5f2033 32005f5f 32_WIDTH__ 32.__
  0x000003a0 55494e54 5054525f 4d41585f 5f203078 UINTPTR_MAX__ 0x
  0x000003b0 66666666 66666666 66666666 66666666 ffffffffffffffff
  0x000003c0 554c002f 686f6d65 2f756275 6e74752f UL./home/ubuntu/
  0x000003d0 456e6769 6e656572 696e672f 50726f67 Engineering/Prog
  0x000003e0 72616d6d 696e672f 4861636b 696e675f ramming/Hacking_
  0x000003f0 4172745f 6f665f45 78706c6f 69746174 Art_of_Exploitat
  0x00000400 696f6e2f 496e7465 6c5f4172 63686974 ion/Intel_Archit
  0x00000410 65637475 72652f41 4d443634 2f307832 ecture/AMD64/0x2
  0x00000420 37305f4d 656d6f72 795f5365 676d656e 70_Memory_Segmen
  0x00000430 74617469 6f6e2f57 6974685f 44656275 tation/With_Debu
  0x00000440 675f496e 666f005f 5f4c5036 345f5f20 g_Info.__LP64__ 
  0x00000450 31005f5f 55494e54 36345f43 28632920 1.__UINT64_C(c) 
  0x00000460 63202323 20554c00 5f5f4442 4c5f4841 c ## UL.__DBL_HA
  0x00000470 535f494e 46494e49 54595f5f 2031005f S_INFINITY__ 1._
  0x00000480 5f464c54 3132385f 4841535f 51554945 _FLT128_HAS_QUIE
  0x00000490 545f4e41 4e5f5f20 31005f5f 474e5543 T_NAN__ 1.__GNUC
  0x000004a0 5f5f2037 005f5f46 4c543332 585f4d49 __ 7.__FLT32X_MI
  0x000004b0 4e5f3130 5f455850 5f5f2028 2d333037 N_10_EXP__ (-307
  0x000004c0 29005f5f 494e5433 325f4328 63292063 ).__INT32_C(c) c
  0x000004d0 005f5f46 4c543332 585f4550 53494c4f .__FLT32X_EPSILO
  0x000004e0 4e5f5f20 322e3232 30343436 30343932 N__ 2.2204460492
  0x000004f0 35303331 33303830 38343732 36333333 5031308084726333
  0x00000500 36313831 36343036 32652d31 36463332 618164062e-16F32
  0x00000510 78005f5f 464c5431 32385f45 5053494c x.__FLT128_EPSIL
  0x00000520 4f4e5f5f 20312e39 32353932 39393434 ON__ 1.925929944
  0x00000530 33383732 33353835 33303535 39373739 3872358530559779
  0x00000540 34323538 34393237 3332652d 33344631 4258492732e-34F1
  0x00000550 3238005f 5f464c54 3634585f 4841535f 28.__FLT64X_HAS_
  0x00000560 44454e4f 524d5f5f 2031005f 5f494e54 DENORM__ 1.__INT
  0x00000570 5054525f 57494454 485f5f20 3634005f PTR_WIDTH__ 64._
  0x00000580 5f535444 435f484f 53544544 5f5f2031 _STDC_HOSTED__ 1
  0x00000590 005f5f57 494e545f 4d494e5f 5f203055 .__WINT_MIN__ 0U
  0x000005a0 005f5f46 4c545f45 56414c5f 4d455448 .__FLT_EVAL_METH
  0x000005b0 4f445f54 535f3138 3636315f 335f5f20 OD_TS_18661_3__ 
  0x000005c0 30005f5f 4c44424c 5f44454e 4f524d5f 0.__LDBL_DENORM_
  0x000005d0 4d494e5f 5f20332e 36343531 39393533 MIN__ 3.64519953
  0x000005e0 31383832 34373436 30323532 38343035 1882474602528405
  0x000005f0 39333336 31393431 39383265 2d343935 93361941982e-495
  0x00000600 314c005f 5f44424c 5f455053 494c4f4e 1L.__DBL_EPSILON
  0x00000610 5f5f2028 28646f75 626c6529 322e3232 __ ((double)2.22
  0x00000620 30343436 30343932 35303331 33303830 0446049250313080
  0x00000630 38343732 36333333 36313831 36343036 8472633361816406
  0x00000640 32652d31 364c2900 5f5f494e 545f4c45 2e-16L).__INT_LE
  0x00000650 41535438 5f574944 54485f5f 2038005f AST8_WIDTH__ 8._
  0x00000660 5f44424c 5f444947 5f5f2031 35005f5f _DBL_DIG__ 15.__
  0x00000670 4743435f 41544f4d 49435f57 43484152 GCC_ATOMIC_WCHAR
  0x00000680 5f545f4c 4f434b5f 46524545 2032005f _T_LOCK_FREE 2._
  0x00000690 5f57494e 545f4d41 585f5f20 30786666 _WINT_MAX__ 0xff
  0x000006a0 66666666 66665500 5f5f4658 53525f5f ffffffU.__FXSR__
  0x000006b0 2031005f 5f464c54 36345f48 41535f51  1.__FLT64_HAS_Q
  0x000006c0 55494554 5f4e414e 5f5f2031 005f5f44 UIET_NAN__ 1.__D
  0x000006d0 45433634 5f535542 4e4f524d 414c5f4d EC64_SUBNORMAL_M
  0x000006e0 494e5f5f 20302e30 30303030 30303030 IN__ 0.000000000
  0x000006f0 30303030 3031452d 33383344 44005f5f 000001E-383DD.__
  0x00000700 53434841 525f5749 4454485f 5f203800 SCHAR_WIDTH__ 8.
  0x00000710 5f5f4c44 424c5f45 5053494c 4f4e5f5f __LDBL_EPSILON__
  0x00000720 20312e30 38343230 32313732 34383535  1.0842021724855
  0x00000730 30343433 34303037 34353238 30303836 0443400745280086
  0x00000740 39393431 3731652d 31394c00 6c6f6e67 994171e-19L.long
  0x00000750 20756e73 69676e65 6420696e 74005f5f  unsigned int.__
  0x00000760 44424c5f 4d414e54 5f444947 5f5f2035 DBL_MANT_DIG__ 5
  0x00000770 33005f5f 464c5433 325f4550 53494c4f 3.__FLT32_EPSILO
  0x00000780 4e5f5f20 312e3139 32303932 38393535 N__ 1.1920928955
  0x00000790 30373831 32353030 30303030 30303030 0781250000000000
  0x000007a0 30303030 30303030 30652d37 46333200 000000000e-7F32.
  0x000007b0 5f5f464c 5433325f 44454e4f 524d5f4d __FLT32_DENORM_M
  0x000007c0 494e5f5f 20312e34 30313239 38343634 IN__ 1.401298464
  0x000007d0 33323438 31373037 30393233 37323935 3248170709237295
  0x000007e0 38333238 39393136 3133652d 34354633 8328991613e-45F3
  0x000007f0 32005f5f 494e545f 46415354 385f4d41 2.__INT_FAST8_MA
  0x00000800 585f5f20 30783766 005f5f55 494e5433 X__ 0x7f.__UINT3
  0x00000810 325f5459 50455f5f 20756e73 69676e65 2_TYPE__ unsigne
  0x00000820 6420696e 74005f5f 464c5436 345f4550 d int.__FLT64_EP
  0x00000830 53494c4f 4e5f5f20 322e3232 30343436 SILON__ 2.220446
  0x00000840 30343932 35303331 33303830 38343732 0492503130808472
  0x00000850 36333333 36313831 36343036 32652d31 6333618164062e-1
  0x00000860 36463634 005f5f4c 44424c5f 4d494e5f 6F64.__LDBL_MIN_
  0x00000870 31305f45 58505f5f 20282d34 39333129 10_EXP__ (-4931)
  0x00000880 005f5f53 4852545f 57494454 485f5f20 .__SHRT_WIDTH__ 
  0x00000890 3136005f 5f444543 33325f4d 41585f45 16.__DEC32_MAX_E
  0x000008a0 58505f5f 20393700 5f5f494e 5433325f XP__ 97.__INT32_
  0x000008b0 54595045 5f5f2069 6e74005f 5f534947 TYPE__ int.__SIG
  0x000008c0 5f41544f 4d49435f 54595045 5f5f2069 _ATOMIC_TYPE__ i
  0x000008d0 6e74005f 5f444543 36345f4d 41585f45 nt.__DEC64_MAX_E
  0x000008e0 58505f5f 20333835 005f5f44 424c5f4d XP__ 385.__DBL_M
  0x000008f0 494e5f45 58505f5f 20282d31 30323129 IN_EXP__ (-1021)
  0x00000900 005f5f70 69635f5f 2032005f 4c503634 .__pic__ 2._LP64
  0x00000910 2031005f 5f494e54 5f4c4541 53543136  1.__INT_LEAST16
  0x00000920 5f574944 54485f5f 20313600 5f5f464c _WIDTH__ 16.__FL
  0x00000930 5433325f 4841535f 494e4649 4e495459 T32_HAS_INFINITY
  0x00000940 5f5f2031 005f5f4c 44424c5f 4841535f __ 1.__LDBL_HAS_
  0x00000950 494e4649 4e495459 5f5f2031 005f5f53 INFINITY__ 1.__S
  0x00000960 495a454f 465f4c4f 4e475f5f 2038005f IZEOF_LONG__ 8._
  0x00000970 5f464c54 5f484153 5f44454e 4f524d5f _FLT_HAS_DENORM_
  0x00000980 5f203100 5f5f464c 54313238 5f4d494e _ 1.__FLT128_MIN
  0x00000990 5f455850 5f5f2028 2d313633 38312900 _EXP__ (-16381).
  0x000009a0 5f5f5353 455f4d41 54485f5f 2031005f __SSE_MATH__ 1._
  0x000009b0 5f55494e 5431365f 4d41585f 5f203078 _UINT16_MAX__ 0x
  0x000009c0 66666666 005f5f46 4c543634 585f4841 ffff.__FLT64X_HA
  0x000009d0 535f5155 4945545f 4e414e5f 5f203100 S_QUIET_NAN__ 1.
  0x000009e0 5f5f5549 4e545f46 41535436 345f5459 __UINT_FAST64_TY
  0x000009f0 50455f5f 206c6f6e 6720756e 7369676e PE__ long unsign
  0x00000a00 65642069 6e74005f 5f425954 455f4f52 ed int.__BYTE_OR
  0x00000a10 4445525f 5f205f5f 4f524445 525f4c49 DER__ __ORDER_LI
  0x00000a20 54544c45 5f454e44 49414e5f 5f005f5f TTLE_ENDIAN__.__
  0x00000a30 454c465f 5f203100 5f5f464c 54333258 ELF__ 1.__FLT32X
  0x00000a40 5f4d494e 5f455850 5f5f2028 2d313032 _MIN_EXP__ (-102
  0x00000a50 3129005f 5f464c4f 41545f57 4f52445f 1).__FLOAT_WORD_
  0x00000a60 4f524445 525f5f20 5f5f4f52 4445525f ORDER__ __ORDER_
  0x00000a70 4c495454 4c455f45 4e444941 4e5f5f00 LITTLE_ENDIAN__.
  0x00000a80 5f5f5549 4e545f4c 45415354 31365f4d __UINT_LEAST16_M
  0x00000a90 41585f5f 20307866 66666600 5f5f5052 AX__ 0xffff.__PR
  0x00000aa0 41474d41 5f524544 4546494e 455f4558 AGMA_REDEFINE_EX
  0x00000ab0 544e414d 45203100 5f5f494e 545f4c45 TNAME 1.__INT_LE
  0x00000ac0 41535431 365f5459 50455f5f 2073686f AST16_TYPE__ sho
  0x00000ad0 72742069 6e74005f 5f464c54 33325f48 rt int.__FLT32_H
  0x00000ae0 41535f51 55494554 5f4e414e 5f5f2031 AS_QUIET_NAN__ 1
  0x00000af0 005f5f46 4c545f4d 41585f45 58505f5f .__FLT_MAX_EXP__
  0x00000b00 20313238 005f5f68 61735f69 6e636c75  128.__has_inclu
  0x00000b10 64655f6e 65787428 53545229 205f5f68 de_next(STR) __h
  0x00000b20 61735f69 6e636c75 64655f6e 6578745f as_include_next_
  0x00000b30 5f285354 5229005f 5f494e54 5054525f _(STR).__INTPTR_
  0x00000b40 4d41585f 5f203078 37666666 66666666 MAX__ 0x7fffffff
  0x00000b50 66666666 66666666 4c005f5f 676e755f ffffffffL.__gnu_
  0x00000b60 6c696e75 785f5f20 31005f5f 464c5433 linux__ 1.__FLT3
  0x00000b70 32585f4d 41585f31 305f4558 505f5f20 2X_MAX_10_EXP__ 
  0x00000b80 33303800 5f5f464c 545f4445 4e4f524d 308.__FLT_DENORM
  0x00000b90 5f4d494e 5f5f2031 2e343031 32393834 _MIN__ 1.4012984
  0x00000ba0 36343332 34383137 30373039 32333732 6432481707092372
  0x00000bb0 39353833 32383939 31363133 652d3435 958328991613e-45
  0x00000bc0 46005f5f 4c44424c 5f484153 5f515549 F.__LDBL_HAS_QUI
  0x00000bd0 45545f4e 414e5f5f 2031005f 5f53495a ET_NAN__ 1.__SIZ
  0x00000be0 454f465f 444f5542 4c455f5f 2038005f EOF_DOUBLE__ 8._
  0x00000bf0 5f564552 53494f4e 5f5f2022 372e332e _VERSION__ "7.3.
  0x00000c00 3022005f 5f464c54 3332585f 4d41585f 0".__FLT32X_MAX_
  0x00000c10 5f20312e 37393736 39333133 34383632 _ 1.797693134862
  0x00000c20 33313537 30383134 35323734 32333733 3157081452742373
  0x00000c30 31373034 33353765 2b333038 46333278 1704357e+308F32x
  0x00000c40 005f5f55 494e5438 5f4d4158 5f5f2030 .__UINT8_MAX__ 0
  0x00000c50 78666600 5f5f5749 4e545f57 49445448 xff.__WINT_WIDTH
  0x00000c60 5f5f2033 32005f5f 55494e54 36345f54 __ 32.__UINT64_T
  0x00000c70 5950455f 5f206c6f 6e672075 6e736967 YPE__ long unsig
  0x00000c80 6e656420 696e7400 5f5f494e 545f4c45 ned int.__INT_LE
  0x00000c90 41535433 325f5459 50455f5f 20696e74 AST32_TYPE__ int
  0x00000ca0 005f5f46 4c543332 5f4d4158 5f455850 .__FLT32_MAX_EXP
  0x00000cb0 5f5f2031 3238005f 5f504943 5f5f2032 __ 128.__PIC__ 2
  0x00000cc0 005f5f46 4c543634 5f4d4158 5f455850 .__FLT64_MAX_EXP
  0x00000cd0 5f5f2031 30323400 5f5f5353 45325f5f __ 1024.__SSE2__
  0x00000ce0 2031005f 5f464c54 36345f4d 494e5f45  1.__FLT64_MIN_E
  0x00000cf0 58505f5f 20282d31 30323129 005f5f49 XP__ (-1021).__I
  0x00000d00 4e544d41 585f4328 63292063 20232320 NTMAX_C(c) c ## 
  0x00000d10 4c005f5f 4743435f 41544f4d 49435f43 L.__GCC_ATOMIC_C
  0x00000d20 48415233 325f545f 4c4f434b 5f465245 HAR32_T_LOCK_FRE
  0x00000d30 45203200 5f5f5349 5a454f46 5f494e54 E 2.__SIZEOF_INT
  0x00000d40 3132385f 5f203136 005f5f50 54524449 128__ 16.__PTRDI
  0x00000d50 46465f54 5950455f 5f206c6f 6e672069 FF_TYPE__ long i
  0x00000d60 6e74005f 5f464c54 33325f4d 41585f5f nt.__FLT32_MAX__
  0x00000d70 20332e34 30323832 33343636 33383532  3.4028234663852
  0x00000d80 38383539 38313137 30343138 33343834 8859811704183484
  0x00000d90 35313639 3235652b 33384633 32005f5f 516925e+38F32.__
  0x00000da0 494e5438 5f432863 29206300 5f5f5349 INT8_C(c) c.__SI
  0x00000db0 5a454f46 5f4c4f4e 475f4c4f 4e475f5f ZEOF_LONG_LONG__
  0x00000dc0 2038005f 5f464c54 5f444947 5f5f2036  8.__FLT_DIG__ 6
  0x00000dd0 005f5f44 424c5f44 454e4f52 4d5f4d49 .__DBL_DENORM_MI
  0x00000de0 4e5f5f20 2828646f 75626c65 29342e39 N__ ((double)4.9
  0x00000df0 34303635 36343538 34313234 36353434 4065645841246544
  0x00000e00 31373635 36383739 32383638 32323133 1765687928682213
  0x00000e10 3732652d 3332344c 29005f5f 494e5436 72e-324L).__INT6
  0x00000e20 345f4328 63292063 20232320 4c005f5f 4_C(c) c ## L.__
  0x00000e30 55494e54 5f464153 5431365f 4d41585f UINT_FAST16_MAX_
  0x00000e40 5f203078 66666666 66666666 66666666 _ 0xffffffffffff
  0x00000e50 66666666 554c005f 5f464c54 5f4d4158 ffffUL.__FLT_MAX
  0x00000e60 5f31305f 4558505f 5f203338 005f5f4e _10_EXP__ 38.__N
  0x00000e70 4f5f494e 4c494e45 5f5f2031 005f5f55 O_INLINE__ 1.__U
  0x00000e80 494e545f 4c454153 5436345f 54595045 INT_LEAST64_TYPE
  0x00000e90 5f5f206c 6f6e6720 756e7369 676e6564 __ long unsigned
  0x00000ea0 20696e74 005f5f53 495a454f 465f4c4f  int.__SIZEOF_LO
  0x00000eb0 4e475f44 4f55424c 455f5f20 3136005f NG_DOUBLE__ 16._
  0x00000ec0 5f535444 435f4953 4f5f3130 3634365f _STDC_ISO_10646_
  0x00000ed0 5f203230 31373036 4c005f5f 50545244 _ 201706L.__PTRD
  0x00000ee0 4946465f 57494454 485f5f20 3634005f IFF_WIDTH__ 64._
  0x00000ef0 5f534348 41525f4d 41585f5f 20307837 _SCHAR_MAX__ 0x7
  0x00000f00 66005f5f 464c5433 325f4d49 4e5f5f20 f.__FLT32_MIN__ 
  0x00000f10 312e3137 35343934 33353038 32323238 1.17549435082228
  0x00000f20 37353037 39363837 33363533 37323232 7507968736537222
  0x00000f30 32343536 38652d33 38463332 005f5f49 24568e-38F32.__I
  0x00000f40 4e545f4c 45415354 36345f54 5950455f NT_LEAST64_TYPE_
  0x00000f50 5f206c6f 6e672069 6e74005f 5f474e55 _ long int.__GNU
  0x00000f60 435f4d49 4e4f525f 5f203300 5f5f464c C_MINOR__ 3.__FL
  0x00000f70 54363458 5f4d494e 5f5f2033 2e333632 T64X_MIN__ 3.362
  0x00000f80 31303331 34333131 32303933 35303632 1031431120935062
  0x00000f90 36323637 37383137 33323137 35323630 6267781732175260
  0x00000fa0 652d3439 33324636 3478005f 5f444543 e-4932F64x.__DEC
  0x00000fb0 5f455641 4c5f4d45 54484f44 5f5f2032 _EVAL_METHOD__ 2
  0x00000fc0 005f5f44 45433332 5f4d4158 5f5f2039 .__DEC32_MAX__ 9
  0x00000fd0 2e393939 39393945 39364446 005f5f4c .999999E96DF.__L
  0x00000fe0 4f4e475f 4c4f4e47 5f4d4158 5f5f2030 ONG_LONG_MAX__ 0
  0x00000ff0 78376666 66666666 66666666 66666666 x7ffffffffffffff
  0x00001000 664c4c00 5f5f4743 435f4154 4f4d4943 fLL.__GCC_ATOMIC
  0x00001010 5f424f4f 4c5f4c4f 434b5f46 52454520 _BOOL_LOCK_FREE 
  0x00001020 32005f5f 53495a45 5f545950 455f5f20 2.__SIZE_TYPE__ 
  0x00001030 6c6f6e67 20756e73 69676e65 6420696e long unsigned in
  0x00001040 74005f5f 4c44424c 5f4d494e 5f455850 t.__LDBL_MIN_EXP
  0x00001050 5f5f2028 2d313633 38312900 5f5f464c __ (-16381).__FL
  0x00001060 5433325f 4d414e54 5f444947 5f5f2032 T32_MANT_DIG__ 2
  0x00001070 34005f5f 4743435f 4945435f 3535395f 4.__GCC_IEC_559_
  0x00001080 434f4d50 4c455820 32005f5f 464c545f COMPLEX 2.__FLT_
  0x00001090 4841535f 51554945 545f4e41 4e5f5f20 HAS_QUIET_NAN__ 
  0x000010a0 31005f5f 53544443 5f494543 5f353539 1.__STDC_IEC_559
  0x000010b0 5f434f4d 504c4558 5f5f2031 005f5f46 _COMPLEX__ 1.__F
  0x000010c0 4c545f4d 494e5f45 58505f5f 20282d31 LT_MIN_EXP__ (-1
  0x000010d0 32352900 5f5f6c69 6e75785f 5f203100 25).__linux__ 1.
  0x000010e0 5f5f464c 54333258 5f4d494e 5f5f2032 __FLT32X_MIN__ 2
  0x000010f0 2e323235 30373338 35383530 37323031 .225073858507201
  0x00001100 33383330 39303233 32373137 33333234 3830902327173324
  0x00001110 30343036 652d3330 38463332 78005f5f 0406e-308F32x.__
  0x00001120 53495a45 5f4d4158 5f5f2030 78666666 SIZE_MAX__ 0xfff
  0x00001130 66666666 66666666 66666666 66554c00 fffffffffffffUL.
  0x00001140 5f5f5549 4e545f4c 45415354 36345f4d __UINT_LEAST64_M
  0x00001150 41585f5f 20307866 66666666 66666666 AX__ 0xfffffffff
  0x00001160 66666666 66666655 4c005f5f 494e545f fffffffUL.__INT_
  0x00001170 46415354 36345f4d 41585f5f 20307837 FAST64_MAX__ 0x7
  0x00001180 66666666 66666666 66666666 6666664c fffffffffffffffL
  0x00001190 005f5f53 53455f5f 2031005f 5f4f5244 .__SSE__ 1.__ORD
  0x000011a0 45525f42 49475f45 4e444941 4e5f5f20 ER_BIG_ENDIAN__ 
  0x000011b0 34333231 005f5f49 4e545054 525f5459 4321.__INTPTR_TY
  0x000011c0 50455f5f 206c6f6e 6720696e 74005f5f PE__ long int.__
  0x000011d0 4c4f4e47 5f4d4158 5f5f2030 78376666 LONG_MAX__ 0x7ff
  0x000011e0 66666666 66666666 66666666 664c005f fffffffffffffL._
  0x000011f0 5f494e54 5f464153 5433325f 57494454 _INT_FAST32_WIDT
  0x00001200 485f5f20 3634005f 5f464c54 3634585f H__ 64.__FLT64X_
  0x00001210 44454e4f 524d5f4d 494e5f5f 20332e36 DENORM_MIN__ 3.6
  0x00001220 34353139 39353331 38383234 37343630 4519953188247460
  0x00001230 32353238 34303539 33333631 39343139 2528405933619419
  0x00001240 3832652d 34393531 46363478 005f5f46 82e-4951F64x.__F
  0x00001250 4c543332 5f4d4158 5f31305f 4558505f LT32_MAX_10_EXP_
  0x00001260 5f203338 005f5f4c 44424c5f 4d41585f _ 38.__LDBL_MAX_
  0x00001270 5f20312e 31383937 33313439 35333537 _ 1.189731495357
  0x00001280 32333137 36353032 31323633 38353330 2317650212638530
  0x00001290 33303937 30323165 2b343933 324c005f 3097021e+4932L._
  0x000012a0 5f53495a 454f465f 53484f52 545f5f20 _SIZEOF_SHORT__ 
  0x000012b0 32005f5f 464c545f 4d494e5f 5f20312e 2.__FLT_MIN__ 1.
  0x000012c0 31373534 39343335 30383232 32383735 1754943508222875
  0x000012d0 30373936 38373336 35333732 32323234 0796873653722224
  0x000012e0 35363865 2d333846 005f5f47 43435f41 568e-38F.__GCC_A
  0x000012f0 544f4d49 435f494e 545f4c4f 434b5f46 TOMIC_INT_LOCK_F
  0x00001300 52454520 32005f5f 464c5436 345f4841 REE 2.__FLT64_HA
  0x00001310 535f494e 46494e49 54595f5f 2031005f S_INFINITY__ 1._
  0x00001320 5f494e54 31365f43 28632920 63005f5f _INT16_C(c) c.__
  0x00001330 464c5436 34585f48 41535f49 4e46494e FLT64X_HAS_INFIN
  0x00001340 4954595f 5f203100 5f5f4445 43494d41 ITY__ 1.__DECIMA
  0x00001350 4c5f4449 475f5f20 3231005f 5f494e54 L_DIG__ 21.__INT
  0x00001360 5f464153 5436345f 54595045 5f5f206c _FAST64_TYPE__ l
  0x00001370 6f6e6720 696e7400 5f5f4445 4336345f ong int.__DEC64_
  0x00001380 4d41585f 5f20392e 39393939 39393939 MAX__ 9.99999999
  0x00001390 39393939 39393945 33383444 44005f5f 9999999E384DD.__
  0x000013a0 44454333 325f5355 424e4f52 4d414c5f DEC32_SUBNORMAL_
  0x000013b0 4d494e5f 5f20302e 30303030 3031452d MIN__ 0.000001E-
  0x000013c0 39354446 005f5f46 4c543132 385f4d49 95DF.__FLT128_MI
  0x000013d0 4e5f3130 5f455850 5f5f2028 2d343933 N_10_EXP__ (-493
  0x000013e0 3129005f 5f494e54 5f4d4158 5f5f2030 1).__INT_MAX__ 0
  0x000013f0 78376666 66666666 66005f5f 464c5431 x7fffffff.__FLT1
  0x00001400 32385f48 41535f44 454e4f52 4d5f5f20 28_HAS_DENORM__ 
  0x00001410 31005f5f 4743435f 41544f4d 49435f4c 1.__GCC_ATOMIC_L
  0x00001420 4c4f4e47 5f4c4f43 4b5f4652 45452032 LONG_LOCK_FREE 2
  0x00001430 005f5f46 4c543132 385f4d49 4e5f5f20 .__FLT128_MIN__ 
  0x00001440 332e3336 32313033 31343331 31323039 3.36210314311209
  0x00001450 33353036 32363236 37373831 37333231 3506262677817321
  0x00001460 37353236 30652d34 39333246 31323800 75260e-4932F128.
  0x00001470 5f5f494e 545f4c45 41535436 345f4d41 __INT_LEAST64_MA
  0x00001480 585f5f20 30783766 66666666 66666666 X__ 0x7fffffffff
  0x00001490 66666666 66664c00 5f5f474e 55435f50 ffffffL.__GNUC_P
  0x000014a0 41544348 4c455645 4c5f5f20 30005f5f ATCHLEVEL__ 0.__
  0x000014b0 41544f4d 49435f52 454c4541 53452033 ATOMIC_RELEASE 3
  0x000014c0 005f5f46 4c543332 5f4d494e 5f31305f .__FLT32_MIN_10_
  0x000014d0 4558505f 5f20282d 33372900 5f5f4442 EXP__ (-37).__DB
  0x000014e0 4c5f4445 43494d41 4c5f4449 475f5f20 L_DECIMAL_DIG__ 
  0x000014f0 31370047 4e552043 31312037 2e332e30 17.GNU C11 7.3.0
  0x00001500 202d6d74 756e653d 67656e65 72696320  -mtune=generic 
  0x00001510 2d6d6172 63683d78 38362d36 34202d67 -march=x86-64 -g
  0x00001520 67646233 202d6673 7461636b 2d70726f gdb3 -fstack-pro
  0x00001530 74656374 6f722d73 74726f6e 67005f5f tector-strong.__
  0x00001540 464c545f 44454349 4d414c5f 4449475f FLT_DECIMAL_DIG_
  0x00001550 5f203900 5f5f4154 4f4d4943 5f534551 _ 9.__ATOMIC_SEQ
  0x00001560 5f435354 2035005f 5f444543 3132385f _CST 5.__DEC128_
  0x00001570 4d494e5f 5f203145 2d363134 33444c00 MIN__ 1E-6143DL.
  0x00001580 5f5f4249 47474553 545f414c 49474e4d __BIGGEST_ALIGNM
  0x00001590 454e545f 5f203136 005f5f53 495a454f ENT__ 16.__SIZEO
  0x000015a0 465f494e 545f5f20 34005f5f 494e545f F_INT__ 4.__INT_
  0x000015b0 46415354 33325f54 5950455f 5f206c6f FAST32_TYPE__ lo
  0x000015c0 6e672069 6e74005f 5f4c4442 4c5f4445 ng int.__LDBL_DE
  0x000015d0 43494d41 4c5f4449 475f5f20 3231005f CIMAL_DIG__ 21._
  0x000015e0 5f444543 3132385f 4d41585f 4558505f _DEC128_MAX_EXP_
  0x000015f0 5f203631 3435005f 5f494e54 31365f4d _ 6145.__INT16_M
  0x00001600 41585f5f 20307837 66666600 5f5f4743 AX__ 0x7fff.__GC
  0x00001610 435f4841 56455f53 594e435f 434f4d50 C_HAVE_SYNC_COMP
  0x00001620 4152455f 414e445f 53574150 5f342031 ARE_AND_SWAP_4 1
  0x00001630 005f5f47 43435f41 534d5f46 4c41475f .__GCC_ASM_FLAG_
  0x00001640 4f555450 5554535f 5f203100 5f5f464c OUTPUTS__ 1.__FL
  0x00001650 54313238 5f4d4158 5f455850 5f5f2031 T128_MAX_EXP__ 1
  0x00001660 36333834 005f5f46 4c543132 385f4d41 6384.__FLT128_MA
  0x00001670 585f5f20 312e3138 39373331 34393533 X__ 1.1897314953
  0x00001680 35373233 31373635 30383537 35393332 5723176508575932
  0x00001690 36363238 30303730 32652b34 39333246 662800702e+4932F
  0x000016a0 31323800 5f5f494e 54385f54 5950455f 128.__INT8_TYPE_
  0x000016b0 5f207369 676e6564 20636861 72005f5f _ signed char.__
  0x000016c0 494e545f 57494454 485f5f20 3332005f INT_WIDTH__ 32._
  0x000016d0 5f55494e 54385f54 5950455f 5f20756e _UINT8_TYPE__ un
  0x000016e0 7369676e 65642063 68617200 5f5f494e signed char.__IN
  0x000016f0 544d4158 5f574944 54485f5f 20363400 TMAX_WIDTH__ 64.
  0x00001700 5f5f5549 4e544d41 585f5459 50455f5f __UINTMAX_TYPE__
  0x00001710 206c6f6e 6720756e 7369676e 65642069  long unsigned i
  0x00001720 6e740075 6e697820 31005f5f 494e5431 nt.unix 1.__INT1
  0x00001730 365f5459 50455f5f 2073686f 72742069 6_TYPE__ short i
  0x00001740 6e74005f 5f474343 5f41544f 4d49435f nt.__GCC_ATOMIC_
  0x00001750 53484f52 545f4c4f 434b5f46 52454520 SHORT_LOCK_FREE 
  0x00001760 32005f5f 44454331 32385f4d 41585f5f 2.__DEC128_MAX__
  0x00001770 20392e39 39393939 39393939 39393939  9.9999999999999
  0x00001780 39393939 39393939 39393939 39393939 9999999999999999
  0x00001790 39393939 45363134 34444c00 5f5f5353 9999E6144DL.__SS
  0x000017a0 505f5354 524f4e47 5f5f2033 005f5f50 P_STRONG__ 3.__P
  0x000017b0 49455f5f 2032005f 5f55494e 545f4c45 IE__ 2.__UINT_LE
  0x000017c0 41535431 365f5459 50455f5f 2073686f AST16_TYPE__ sho
  0x000017d0 72742075 6e736967 6e656420 696e7400 rt unsigned int.
  0x000017e0 5f5f494e 545f4641 5354385f 54595045 __INT_FAST8_TYPE
  0x000017f0 5f5f2073 69676e65 64206368 6172005f __ signed char._
  0x00001800 5f44424c 5f4d4158 5f455850 5f5f2031 _DBL_MAX_EXP__ 1
  0x00001810 30323400 5f5f464c 54333258 5f4d414e 024.__FLT32X_MAN
  0x00001820 545f4449 475f5f20 3533005f 5f464c54 T_DIG__ 53.__FLT
  0x00001830 5f455641 4c5f4d45 54484f44 5f5f2030 _EVAL_METHOD__ 0
  0x00001840 005f5f49 4e544d41 585f4d41 585f5f20 .__INTMAX_MAX__ 
  0x00001850 30783766 66666666 66666666 66666666 0x7fffffffffffff
  0x00001860 66664c00 5f5f4154 4f4d4943 5f414351 ffL.__ATOMIC_ACQ
  0x00001870 55495245 2032005f 5f55494e 545f4641 UIRE 2.__UINT_FA
  0x00001880 53543332 5f545950 455f5f20 6c6f6e67 ST32_TYPE__ long
  0x00001890 20756e73 69676e65 6420696e 74005f5f  unsigned int.__
  0x000018a0 464c5433 325f4445 43494d41 4c5f4449 FLT32_DECIMAL_DI
  0x000018b0 475f5f20 39005f5f 494e545f 4c454153 G__ 9.__INT_LEAS
  0x000018c0 5433325f 4d41585f 5f203078 37666666 T32_MAX__ 0x7fff
  0x000018d0 66666666 005f5f47 43435f41 544f4d49 ffff.__GCC_ATOMI
  0x000018e0 435f4348 41525f4c 4f434b5f 46524545 C_CHAR_LOCK_FREE
  0x000018f0 2032005f 5f444543 3132385f 45505349  2.__DEC128_EPSI
  0x00001900 4c4f4e5f 5f203145 2d333344 4c005f5f LON__ 1E-33DL.__
  0x00001910 464c545f 4d41585f 5f20332e 34303238 FLT_MAX__ 3.4028
  0x00001920 32333436 36333835 32383835 39383131 2346638528859811
  0x00001930 37303431 38333438 34353136 39323565 704183484516925e
  0x00001940 2b333846 005f5f53 495a454f 465f5743 +38F.__SIZEOF_WC
  0x00001950 4841525f 545f5f20 34005f5f 464c5433 HAR_T__ 4.__FLT3
  0x00001960 32585f44 4543494d 414c5f44 49475f5f 2X_DECIMAL_DIG__
  0x00001970 20313700 5f5f494e 545f4641 53543136  17.__INT_FAST16
  0x00001980 5f545950 455f5f20 6c6f6e67 20696e74 _TYPE__ long int
  0x00001990 005f5f44 45433332 5f4d494e 5f455850 .__DEC32_MIN_EXP
  0x000019a0 5f5f2028 2d393429 005f5f49 4e543332 __ (-94).__INT32
  0x000019b0 5f4d4158 5f5f2030 78376666 66666666 _MAX__ 0x7ffffff
  0x000019c0 66005f5f 53495a45 4f465f46 4c4f4154 f.__SIZEOF_FLOAT
  0x000019d0 3132385f 5f203136 005f5f46 4c543634 128__ 16.__FLT64
  0x000019e0 5f4d494e 5f31305f 4558505f 5f20282d _MIN_10_EXP__ (-
  0x000019f0 33303729 005f5f55 494e545f 46415354 307).__UINT_FAST
  0x00001a00 385f5459 50455f5f 20756e73 69676e65 8_TYPE__ unsigne
  0x00001a10 64206368 6172005f 5f535444 435f4945 d char.__STDC_IE
  0x00001a20 435f3535 395f5f20 31005f5f 44454331 C_559__ 1.__DEC1
  0x00001a30 32385f53 55424e4f 524d414c 5f4d494e 28_SUBNORMAL_MIN
  0x00001a40 5f5f2030 2e303030 30303030 30303030 __ 0.00000000000
  0x00001a50 30303030 30303030 30303030 30303030 0000000000000000
  0x00001a60 30303030 3031452d 36313433 444c005f 000001E-6143DL._
  0x00001a70 5f41544f 4d49435f 484c455f 41435155 _ATOMIC_HLE_ACQU
  0x00001a80 49524520 36353533 36005f5f 41544f4d IRE 65536.__ATOM
  0x00001a90 49435f48 4c455f52 454c4541 53452031 IC_HLE_RELEASE 1
  0x00001aa0 33313037 32005f5f 494e545f 46415354 31072.__INT_FAST
  0x00001ab0 31365f4d 41585f5f 20307837 66666666 16_MAX__ 0x7ffff
  0x00001ac0 66666666 66666666 6666664c 005f5f49 fffffffffffL.__I
  0x00001ad0 4e545f4c 45415354 31365f4d 41585f5f NT_LEAST16_MAX__
  0x00001ae0 20307837 66666600 5f5f464c 54363458  0x7fff.__FLT64X
  0x00001af0 5f4d4158 5f455850 5f5f2031 36333834 _MAX_EXP__ 16384
  0x00001b00 005f5f44 45433132 385f4d41 4e545f44 .__DEC128_MANT_D
  0x00001b10 49475f5f 20333400 5f5f4c4f 4e475f57 IG__ 34.__LONG_W
  0x00001b20 49445448 5f5f2036 34005f5f 53495a45 IDTH__ 64.__SIZE
  0x00001b30 5f574944 54485f5f 20363400 5f5f464c _WIDTH__ 64.__FL
  0x00001b40 54313238 5f444543 494d414c 5f444947 T128_DECIMAL_DIG
  0x00001b50 5f5f2033 36005f5f 57434841 525f4d49 __ 36.__WCHAR_MI
  0x00001b60 4e5f5f20 282d5f5f 57434841 525f4d41 N__ (-__WCHAR_MA
  0x00001b70 585f5f20 2d203129 005f5f47 43435f48 X__ - 1).__GCC_H
  0x00001b80 4156455f 53594e43 5f434f4d 50415245 AVE_SYNC_COMPARE
  0x00001b90 5f414e44 5f535741 505f3220 31005f5f _AND_SWAP_2 1.__
  0x00001ba0 4c44424c 5f4d4158 5f455850 5f5f2031 LDBL_MAX_EXP__ 1
  0x00001bb0 36333834 005f5f46 4c543634 585f4449 6384.__FLT64X_DI
  0x00001bc0 475f5f20 3138005f 5f464c54 3332585f G__ 18.__FLT32X_
  0x00001bd0 4449475f 5f203135 005f5f6b 385f5f20 DIG__ 15.__k8__ 
  0x00001be0 31005f5f 43484152 33325f54 5950455f 1.__CHAR32_TYPE_
  0x00001bf0 5f20756e 7369676e 65642069 6e74005f _ unsigned int._
  0x00001c00 5f464c54 3634585f 4d494e5f 31305f45 _FLT64X_MIN_10_E
  0x00001c10 58505f5f 20282d34 39333129 005f5f70 XP__ (-4931).__p
  0x00001c20 69655f5f 2032005f 5f494e54 5f4c4541 ie__ 2.__INT_LEA
  0x00001c30 5354385f 54595045 5f5f2073 69676e65 ST8_TYPE__ signe
  0x00001c40 64206368 6172005f 5f55494e 5431365f d char.__UINT16_
  0x00001c50 43286329 2063005f 5f534852 545f4d41 C(c) c.__SHRT_MA
  0x00001c60 585f5f20 30783766 6666005f 5f616d64 X__ 0x7fff.__amd
  0x00001c70 36345f5f 2031005f 5f53495a 454f465f 64__ 1.__SIZEOF_
  0x00001c80 464c4f41 545f5f20 34005f5f 4743435f FLOAT__ 4.__GCC_
  0x00001c90 48415645 5f53594e 435f434f 4d504152 HAVE_SYNC_COMPAR
  0x00001ca0 455f414e 445f5357 41505f38 2031005f E_AND_SWAP_8 1._
  0x00001cb0 5f574348 41525f4d 41585f5f 20307837 _WCHAR_MAX__ 0x7
  0x00001cc0 66666666 66666600 666c6167 005f5f53 fffffff.flag.__S
  0x00001cd0 5444435f 5f203100 5f5f4f52 4445525f TDC__ 1.__ORDER_
  0x00001ce0 5044505f 454e4449 414e5f5f 20333431 PDP_ENDIAN__ 341
  0x00001cf0 32005f5f 4743435f 41544f4d 49435f50 2.__GCC_ATOMIC_P
  0x00001d00 4f494e54 45525f4c 4f434b5f 46524545 OINTER_LOCK_FREE
  0x00001d10 2032005f 5f4f5244 45525f4c 4954544c  2.__ORDER_LITTL
  0x00001d20 455f454e 4449414e 5f5f2031 32333400 E_ENDIAN__ 1234.
  0x00001d30 5f5f5749 4e545f54 5950455f 5f20756e __WINT_TYPE__ un
  0x00001d40 7369676e 65642069 6e74006c 696e7578 signed int.linux
  0x00001d50 2031005f 5f41544f 4d49435f 52454c41  1.__ATOMIC_RELA
  0x00001d60 58454420 30005f5f 46494e49 54455f4d XED 0.__FINITE_M
  0x00001d70 4154485f 4f4e4c59 5f5f2030 005f5f6c ATH_ONLY__ 0.__l
  0x00001d80 696e7578 2031005f 5f783836 5f36345f inux 1.__x86_64_
  0x00001d90 5f203100 5f5f4445 4333325f 4d414e54 _ 1.__DEC32_MANT
  0x00001da0 5f444947 5f5f2037 005f5f44 45433634 _DIG__ 7.__DEC64
  0x00001db0 5f455053 494c4f4e 5f5f2031 452d3135 _EPSILON__ 1E-15
  0x00001dc0 4444005f 5f535345 325f4d41 54485f5f DD.__SSE2_MATH__
  0x00001dd0 2031005f 5f474343 5f494543 5f353539  1.__GCC_IEC_559
  0x00001de0 2032005f 5f55494e 545f4641 53543332  2.__UINT_FAST32
  0x00001df0 5f4d4158 5f5f2030 78666666 66666666 _MAX__ 0xfffffff
  0x00001e00 66666666 66666666 66554c00 5f5f464c fffffffffUL.__FL
  0x00001e10 54333258 5f44454e 4f524d5f 4d494e5f T32X_DENORM_MIN_
  0x00001e20 5f20342e 39343036 35363435 38343132 _ 4.940656458412
  0x00001e30 34363534 34313736 35363837 39323836 4654417656879286
  0x00001e40 38323231 33373265 2d333234 46333278 8221372e-324F32x
  0x00001e50 005f5f4d 4d585f5f 2031005f 5f494e54 .__MMX__ 1.__INT
  0x00001e60 36345f4d 41585f5f 20307837 66666666 64_MAX__ 0x7ffff
  0x00001e70 66666666 66666666 6666664c 005f5f46 fffffffffffL.__F
  0x00001e80 4c543634 585f4550 53494c4f 4e5f5f20 LT64X_EPSILON__ 
  0x00001e90 312e3038 34323032 31373234 38353530 1.08420217248550
  0x00001ea0 34343334 30303734 35323830 30383639 4434007452800869
  0x00001eb0 39343137 31652d31 39463634 78005f5f 94171e-19F64x.__
  0x00001ec0 50545244 4946465f 4d41585f 5f203078 PTRDIFF_MAX__ 0x
  0x00001ed0 37666666 66666666 66666666 66666666 7fffffffffffffff
  0x00001ee0 4c005f5f 5345475f 47532031 005f5f53 L.__SEG_GS 1.__S
  0x00001ef0 49475f41 544f4d49 435f4d41 585f5f20 IG_ATOMIC_MAX__ 
  0x00001f00 30783766 66666666 6666005f 5f783836 0x7fffffff.__x86
  0x00001f10 5f363420 31006368 6172005f 5f535444 _64 1.char.__STD
  0x00001f20 435f4e4f 5f544852 45414453 5f5f2031 C_NO_THREADS__ 1
  0x00001f30 005f5f55 494e545f 46415354 31365f54 .__UINT_FAST16_T
  0x00001f40 5950455f 5f206c6f 6e672075 6e736967 YPE__ long unsig
  0x00001f50 6e656420 696e7400 5f5f464c 54333258 ned int.__FLT32X
  0x00001f60 5f484153 5f494e46 494e4954 595f5f20 _HAS_INFINITY__ 
  0x00001f70 31005f5f 494e545f 46415354 31365f57 1.__INT_FAST16_W
  0x00001f80 49445448 5f5f2036 34005f5f 464c5433 IDTH__ 64.__FLT3
  0x00001f90 325f4841 535f4445 4e4f524d 5f5f2031 2_HAS_DENORM__ 1
  0x00001fa0 005f5f46 4c545f52 41444958 5f5f2032 .__FLT_RADIX__ 2
  0x00001fb0 005f5f46 4c543634 5f4d414e 545f4449 .__FLT64_MANT_DI
  0x00001fc0 475f5f20 3533005f 5f464c54 5f484153 G__ 53.__FLT_HAS
  0x00001fd0 5f494e46 494e4954 595f5f20 31005f5f _INFINITY__ 1.__
  0x00001fe0 5349475f 41544f4d 49435f57 49445448 SIG_ATOMIC_WIDTH
  0x00001ff0 5f5f2033 32005f5f 494e545f 46415354 __ 32.__INT_FAST
  0x00002000 33325f4d 41585f5f 20307837 66666666 32_MAX__ 0x7ffff
  0x00002010 66666666 66666666 6666664c 005f5f46 fffffffffffL.__F
  0x00002020 4c543634 5f444543 494d414c 5f444947 LT64_DECIMAL_DIG
  0x00002030 5f5f2031 37005f5f 4c4f4e47 5f4c4f4e __ 17.__LONG_LON
  0x00002040 475f5749 4454485f 5f203634 005f5f46 G_WIDTH__ 64.__F
  0x00002050 4c543634 5f44454e 4f524d5f 4d494e5f LT64_DENORM_MIN_
  0x00002060 5f20342e 39343036 35363435 38343132 _ 4.940656458412
  0x00002070 34363534 34313736 35363837 39323836 4654417656879286
  0x00002080 38323231 33373265 2d333234 46363400 8221372e-324F64.
  0x00002090 62756666 65720073 7461636b 5f657861 buffer.stack_exa
  0x000020a0 6d706c65 2e63005f 5f464c54 5f455053 mple.c.__FLT_EPS
  0x000020b0 494c4f4e 5f5f2031 2e313932 30393238 ILON__ 1.1920928
  0x000020c0 39353530 37383132 35303030 30303030 9550781250000000
  0x000020d0 30303030 30303030 30303030 652d3746 000000000000e-7F
  0x000020e0 005f5f46 4c543634 585f4d41 585f5f20 .__FLT64X_MAX__ 
  0x000020f0 312e3138 39373331 34393533 35373233 1.18973149535723
  0x00002100 31373635 30323132 36333835 33303330 1765021263853030
  0x00002110 39373032 31652b34 39333246 36347800 97021e+4932F64x.
  0x00002120 5f5f5354 44435f55 54465f31 365f5f20 __STDC_UTF_16__ 
  0x00002130 31005f5f 494e544d 41585f54 5950455f 1.__INTMAX_TYPE_
  0x00002140 5f206c6f 6e672069 6e74005f 5f4c4442 _ long int.__LDB
  0x00002150 4c5f4841 535f4445 4e4f524d 5f5f2031 L_HAS_DENORM__ 1
  0x00002160 005f5f4c 44424c5f 4d414e54 5f444947 .__LDBL_MANT_DIG
  0x00002170 5f5f2036 34005f5f 6861735f 696e636c __ 64.__has_incl
  0x00002180 75646528 53545229 205f5f68 61735f69 ude(STR) __has_i
  0x00002190 6e636c75 64655f5f 28535452 29005f5f nclude__(STR).__
  0x000021a0 4743435f 41544f4d 49435f43 48415231 GCC_ATOMIC_CHAR1
  0x000021b0 365f545f 4c4f434b 5f465245 45203200 6_T_LOCK_FREE 2.
  0x000021c0 5f5f4445 4333325f 45505349 4c4f4e5f __DEC32_EPSILON_
  0x000021d0 5f203145 2d364446 005f5f53 495a454f _ 1E-6DF.__SIZEO
  0x000021e0 465f464c 4f415438 305f5f20 3136005f F_FLOAT80__ 16._
  0x000021f0 5f524547 49535445 525f5052 45464958 _REGISTER_PREFIX
  0x00002200 5f5f2000 5f5f4154 4f4d4943 5f434f4e __ .__ATOMIC_CON
  0x00002210 53554d45 2031005f 5f55494e 5436345f SUME 1.__UINT64_
  0x00002220 4d41585f 5f203078 66666666 66666666 MAX__ 0xffffffff
  0x00002230 66666666 66666666 554c005f 5f535444 ffffffffUL.__STD
  0x00002240 435f5554 465f3332 5f5f2031 005f5f55 C_UTF_32__ 1.__U
  0x00002250 494e5431 365f5459 50455f5f 2073686f INT16_TYPE__ sho
  0x00002260 72742075 6e736967 6e656420 696e7400 rt unsigned int.
  0x00002270 5f5f464c 54363458 5f4d4158 5f31305f __FLT64X_MAX_10_
  0x00002280 4558505f 5f203439 3332005f 5f55494e EXP__ 4932.__UIN
  0x00002290 5433325f 43286329 20632023 23205500 T32_C(c) c ## U.
  0x000022a0 5f5f6b38 2031005f 5f534547 5f465320 __k8 1.__SEG_FS 
  0x000022b0 31005f5f 55494e54 4d41585f 43286329 1.__UINTMAX_C(c)
  0x000022c0 20632023 2320554c 005f5f47 58585f41  c ## UL.__GXX_A
  0x000022d0 42495f56 45525349 4f4e2031 30313100 BI_VERSION 1011.
  0x000022e0 5f5f5349 5a454f46 5f505452 44494646 __SIZEOF_PTRDIFF
  0x000022f0 5f545f5f 2038005f 5f434841 525f4249 _T__ 8.__CHAR_BI
  0x00002300 545f5f20 38005f5f 5349475f 41544f4d T__ 8.__SIG_ATOM
  0x00002310 49435f4d 494e5f5f 20282d5f 5f534947 IC_MIN__ (-__SIG
  0x00002320 5f41544f 4d49435f 4d41585f 5f202d20 _ATOMIC_MAX__ - 
  0x00002330 3129005f 5f494e54 5f464153 5436345f 1).__INT_FAST64_
  0x00002340 57494454 485f5f20 3634005f 5f464c54 WIDTH__ 64.__FLT
  0x00002350 3132385f 44454e4f 524d5f4d 494e5f5f 128_DENORM_MIN__
  0x00002360 20362e34 37353137 35313139 34333830  6.4751751194380
  0x00002370 32353131 30393234 34333839 35383232 2511092443895822
  0x00002380 37363436 3535652d 34393636 46313238 764655e-4966F128
  0x00002390 005f5f55 494e545f 4c454153 5433325f .__UINT_LEAST32_
  0x000023a0 54595045 5f5f2075 6e736967 6e656420 TYPE__ unsigned 
  0x000023b0 696e7400 5f5f4442 4c5f4841 535f4445 int.__DBL_HAS_DE
  0x000023c0 4e4f524d 5f5f2031 005f5f46 4c543132 NORM__ 1.__FLT12
  0x000023d0 385f4d41 4e545f44 49475f5f 20313133 8_MANT_DIG__ 113
  0x000023e0 005f5f46 4c543634 5f444947 5f5f2031 .__FLT64_DIG__ 1
  0x000023f0 35005f5f 55494e54 4d41585f 4d41585f 5.__UINTMAX_MAX_
  0x00002400 5f203078 66666666 66666666 66666666 _ 0xffffffffffff
  0x00002410 66666666 554c005f 5f474343 5f484156 ffffUL.__GCC_HAV
  0x00002420 455f5359 4e435f43 4f4d5041 52455f41 E_SYNC_COMPARE_A
  0x00002430 4e445f53 5741505f 31203100 5f5f4442 ND_SWAP_1 1.__DB
  0x00002440 4c5f4d41 585f5f20 2828646f 75626c65 L_MAX__ ((double
  0x00002450 29312e37 39373639 33313334 38363233 )1.7976931348623
  0x00002460 31353730 38313435 32373432 33373331 1570814527423731
  0x00002470 37303433 3537652b 3330384c 29005f5f 704357e+308L).__
  0x00002480 494e5438 5f4d4158 5f5f2030 78376600 INT8_MAX__ 0x7f.
  0x00002490 5f5f5549 4e545f46 41535438 5f4d4158 __UINT_FAST8_MAX
  0x000024a0 5f5f2030 78666600 5f5f4442 4c5f4841 __ 0xff.__DBL_HA
  0x000024b0 535f5155 4945545f 4e414e5f 5f203100 S_QUIET_NAN__ 1.
  0x000024c0 5f5f464c 545f4d49 4e5f3130 5f455850 __FLT_MIN_10_EXP
  0x000024d0 5f5f2028 2d333729 005f5f47 43435f41 __ (-37).__GCC_A
  0x000024e0 544f4d49 435f5445 53545f41 4e445f53 TOMIC_TEST_AND_S
  0x000024f0 45545f54 52554556 414c2031 005f5f46 ET_TRUEVAL 1.__F
  0x00002500 4c543634 585f4445 43494d41 4c5f4449 LT64X_DECIMAL_DI
  0x00002510 475f5f20 3231005f 5f41544f 4d49435f G__ 21.__ATOMIC_
  0x00002520 4143515f 52454c20 34005f5f 57434841 ACQ_REL 4.__WCHA
  0x00002530 525f5459 50455f5f 20696e74 005f5354 R_TYPE__ int._ST
  0x00002540 44435f50 52454445 465f4820 31005f5f DC_PREDEF_H 1.__
  0x00002550 494e545f 46415354 385f5749 4454485f INT_FAST8_WIDTH_
  0x00002560 5f203800 5f5f464c 54313238 5f4d4158 _ 8.__FLT128_MAX
  0x00002570 5f31305f 4558505f 5f203439 3332005f _10_EXP__ 4932._
  0x00002580 5f555345 525f4c41 42454c5f 50524546 _USER_LABEL_PREF
  0x00002590 49585f5f 20007465 73745f66 756e6374 IX__ .test_funct
  0x000025a0 696f6e00 5f5f464c 5433325f 4d494e5f ion.__FLT32_MIN_
  0x000025b0 4558505f 5f20282d 31323529 005f5f43 EXP__ (-125).__C
  0x000025c0 48415231 365f5459 50455f5f 2073686f HAR16_TYPE__ sho
  0x000025d0 72742075 6e736967 6e656420 696e7400 rt unsigned int.
  0x000025e0 5f5f5549 4e54385f 43286329 2063005f __UINT8_C(c) c._
  0x000025f0 5f464c54 3132385f 4449475f 5f203333 _FLT128_DIG__ 33
  0x00002600 005f5f55 494e545f 4c454153 54385f54 .__UINT_LEAST8_T
  0x00002610 5950455f 5f20756e 7369676e 65642063 YPE__ unsigned c
  0x00002620 68617200 5f5f494e 5436345f 54595045 har.__INT64_TYPE
  0x00002630 5f5f206c 6f6e6720 696e7400 5f5f494e __ long int.__IN
  0x00002640 545f4c45 41535436 345f5749 4454485f T_LEAST64_WIDTH_
  0x00002650 5f203634 005f5f4c 44424c5f 4449475f _ 64.__LDBL_DIG_
  0x00002660 5f203138 006d6169 6e005f5f 55494e54 _ 18.main.__UINT
  0x00002670 33325f4d 41585f5f 20307866 66666666 32_MAX__ 0xfffff
  0x00002680 66666655 005f5f47 43435f48 4156455f fffU.__GCC_HAVE_
  0x00002690 44574152 46325f43 46495f41 534d2031 DWARF2_CFI_ASM 1
  0x000026a0 005f5f49 4e545f4c 45415354 385f4d41 .__INT_LEAST8_MA
  0x000026b0 585f5f20 30783766 005f5f44 45433634 X__ 0x7f.__DEC64
  0x000026c0 5f4d494e 5f5f2031 452d3338 33444400 _MIN__ 1E-383DD.
  0x000026d0 5f5f4442 4c5f4d49 4e5f3130 5f455850 __DBL_MIN_10_EXP
  0x000026e0 5f5f2028 2d333037 29005f5f 44454349 __ (-307).__DECI
  0x000026f0 4d414c5f 4249445f 464f524d 41545f5f MAL_BID_FORMAT__
  0x00002700 2031005f 5f474e55 435f5354 44435f49  1.__GNUC_STDC_I
  0x00002710 4e4c494e 455f5f20 31005f5f 464c5436 NLINE__ 1.__FLT6
  0x00002720 345f4d41 585f3130 5f455850 5f5f2033 4_MAX_10_EXP__ 3
  0x00002730 3038005f 5f464c54 5f4d414e 545f4449 08.__FLT_MANT_DI
  0x00002740 475f5f20 323400                     G__ 24.

Contents of the .eh_frame section:


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000018 000000000000001c 0000001c FDE cie=00000000 pc=0000000000000000..0000000000000045
  DW_CFA_advance_loc: 1 to 0000000000000001
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 0000000000000004
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc1: 64 to 0000000000000044
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop

00000038 000000000000001c 0000003c FDE cie=00000000 pc=0000000000000045..0000000000000069
  DW_CFA_advance_loc: 1 to 0000000000000046
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 0000000000000049
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 31 to 0000000000000068
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop


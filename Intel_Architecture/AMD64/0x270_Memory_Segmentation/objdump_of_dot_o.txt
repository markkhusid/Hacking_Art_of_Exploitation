
stack_example.o:     file format elf64-x86-64
stack_example.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000069  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  000000a9  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  0000000000000000  0000000000000000  000000a9  2**0
                  ALLOC
  3 .comment      0000002b  0000000000000000  0000000000000000  000000a9  2**0
                  CONTENTS, READONLY
  4 .note.GNU-stack 00000000  0000000000000000  0000000000000000  000000d4  2**0
                  CONTENTS, READONLY
  5 .eh_frame     00000058  0000000000000000  0000000000000000  000000d8  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 stack_example.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 g     F .text	0000000000000045 test_function
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 __stack_chk_fail
0000000000000045 g     F .text	0000000000000024 main


Contents of section .text:
 0000 554889e5 4883ec30 897ddc89 75d88955  UH..H..0.}..u..U
 0010 d4894dd0 64488b04 25280000 00488945  ..M.dH..%(...H.E
 0020 f831c0c7 45e8697a 0000c645 ee419048  .1..E.iz...E.A.H
 0030 8b45f864 48330425 28000000 7405e800  .E.dH3.%(...t...
 0040 000000c9 c3554889 e5b90400 0000ba03  .....UH.........
 0050 000000be 02000000 bf010000 00e80000  ................
 0060 0000b800 0000005d c3                 .......].       
Contents of section .comment:
 0000 00474343 3a202855 62756e74 7520372e  .GCC: (Ubuntu 7.
 0010 332e302d 32377562 756e7475 317e3138  3.0-27ubuntu1~18
 0020 2e303429 20372e33 2e3000             .04) 7.3.0.     
Contents of section .eh_frame:
 0000 14000000 00000000 017a5200 01781001  .........zR..x..
 0010 1b0c0708 90010000 1c000000 1c000000  ................
 0020 00000000 45000000 00410e10 8602430d  ....E....A....C.
 0030 0602400c 07080000 1c000000 3c000000  ..@.........<...
 0040 00000000 24000000 00410e10 8602430d  ....$....A....C.
 0050 065f0c07 08000000                    ._......        

Disassembly of section .text:

0000000000000000 <test_function>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 30          	sub    rsp,0x30
   8:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
   b:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
   e:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
  11:	89 4d d0             	mov    DWORD PTR [rbp-0x30],ecx
  14:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  1b:	00 00 
  1d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  21:	31 c0                	xor    eax,eax
  23:	c7 45 e8 69 7a 00 00 	mov    DWORD PTR [rbp-0x18],0x7a69
  2a:	c6 45 ee 41          	mov    BYTE PTR [rbp-0x12],0x41
  2e:	90                   	nop
  2f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  33:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
  3a:	00 00 
  3c:	74 05                	je     43 <test_function+0x43>
  3e:	e8 00 00 00 00       	call   43 <test_function+0x43>
			3f: R_X86_64_PLT32	__stack_chk_fail-0x4
  43:	c9                   	leave  
  44:	c3                   	ret    

0000000000000045 <main>:
  45:	55                   	push   rbp
  46:	48 89 e5             	mov    rbp,rsp
  49:	b9 04 00 00 00       	mov    ecx,0x4
  4e:	ba 03 00 00 00       	mov    edx,0x3
  53:	be 02 00 00 00       	mov    esi,0x2
  58:	bf 01 00 00 00       	mov    edi,0x1
  5d:	e8 00 00 00 00       	call   62 <main+0x1d>
			5e: R_X86_64_PC32	test_function-0x4
  62:	b8 00 00 00 00       	mov    eax,0x0
  67:	5d                   	pop    rbp
  68:	c3                   	ret    

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   6:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   9:	75 6e                	jne    79 <main+0x34>
   b:	74 75                	je     82 <main+0x3d>
   d:	20 37                	and    BYTE PTR [rdi],dh
   f:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  12:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 6275374a <main+0x62753705>
  18:	75 6e                	jne    88 <main+0x43>
  1a:	74 75                	je     91 <main+0x4c>
  1c:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1f:	38 2e                	cmp    BYTE PTR [rsi],ch
  21:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  24:	20 37                	and    BYTE PTR [rdi],dh
  26:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
			20: R_X86_64_PC32	.text
  22:	00 00                	add    BYTE PTR [rax],al
  24:	45 00 00             	add    BYTE PTR [r8],r8b
  27:	00 00                	add    BYTE PTR [rax],al
  29:	41 0e                	rex.B (bad) 
  2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  31:	02 40 0c             	add    al,BYTE PTR [rax+0xc]
  34:	07                   	(bad)  
  35:	08 00                	or     BYTE PTR [rax],al
  37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	3c 00                	cmp    al,0x0
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 00                	add    BYTE PTR [rax],al
			40: R_X86_64_PC32	.text+0x45
  42:	00 00                	add    BYTE PTR [rax],al
  44:	24 00                	and    al,0x0
  46:	00 00                	add    BYTE PTR [rax],al
  48:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  51:	5f                   	pop    rdi
  52:	0c 07                	or     al,0x7
  54:	08 00                	or     BYTE PTR [rax],al
	...
